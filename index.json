[
{
	"uri": "https://docs.altinn.studio/guide/",
	"title": "Kom i gang",
	"tags": ["guide", "brukerveiledning"],
	"description": "Kom i gang - bruk av Altinn Studio MTP",
	"content": "MERK: Denne dokumentasjonen er under arbeid, og vil oppdateres i parallell med utviklingen av Altinn Studio.\n MTP av Altinn Studio er tilgjengelig på https://altinn.studio.\n Første gangs oppsett  Sett opp bruker i AltinnStudio for første gangs bruk.\n   Lag en utgave  Dokumentasjon av funksjonalitet tilgjengelig for å lage en utgave\n   Test utgave  Informasjon om testing av utgave\n   "
},
{
	"uri": "https://docs.altinn.studio/",
	"title": "Altinn Studio docs",
	"tags": [],
	"description": "Dette er levende dokumentasjon for Altinn Studio.",
	"content": "\u0026nbsp;studio docs   Dette er levende dokumentasjon for Altinn Studio og oppdateres i parallell med utviklingen. Kom i gang via menyen på venstre side. Kildekoden til Altinn Studio er tilgjengelig på github.com/altinn/altinn-studio.  "
},
{
	"uri": "https://docs.altinn.studio/guide/first-time-setup/",
	"title": "Første gangs oppsett",
	"tags": ["guide"],
	"description": "Sett opp bruker i AltinnStudio for første gangs bruk.",
	"content": " Første gangs oppsett Registrer ny bruker MERK: Kun nødvendig dersom bruker ikke allerede er opprettet.\n  Velg Registrer i topp-menyen. Fyll ut detaljer og registrer bruker.    Registrer ny bruker   Opprett organisasjon MERK: Kun nødvendig dersom ønsket organisasjon ikke allerede er opprettet.\n  Velg +-menyvalg i toppmenyen Velg New Organization Fyll ut navn på organisasjon og opprett.    Lag ny organisasjon   Opprett repository for tjeneste  Velg +-menyvalg i toppmenyen Velg New Repository Velg organisasjon som eier Fyll ut navn på repository Opprett tjeneste  Tjenesten er nå synlig på startsiden.\n  Lag nytt repository   Klone tjenesten til lokal mappe  Fra startsiden, gå til repoet Velg clone service  Dersom Applikasjonsnøkkel ikke er lagt inn vil du bli bedt om å legge inn dette, se her. Når dette er fullfør, start fra punkt 1.  Tjenesten er nå klar til bruk.   Legge til Applikasjonsnøkkel  Velg Opprett ny nøkkel (nytt vindu). Velg Generate new token og gi din token et hvilket som helst navn. Kopier den generte applikasjonsnøklen. Gå tilbake til forrige fane. Lim inn applikasjonsnøklen og trykk på Lagre App Token Applikasjonsnøkkel er nå lagt til, og tjenesten kan klones.    Klone tjenesten, inkl. legge til applikasjonsnøkkel   "
},
{
	"uri": "https://docs.altinn.studio/guide/service-creation/",
	"title": "Lag en utgave",
	"tags": ["guide"],
	"description": "Dokumentasjon av funksjonalitet tilgjengelig for å lage en utgave",
	"content": " Oversikt over eksisterende utgaver finner man ved å gå inn på tjenesten, f.eks. fra startsiden.\nNy utgave lages fra tjenestesiden:\n  Lage ny utgave   Last opp datamodell Datamodellen definerer hva slags data som skal knyttes til tjenesten. Per nå støttes datamodell i form av XSD (Seres eller OR).\nDatamodellen lastes opp på utgaven. Dersom datamodell ikke er lastet oopp før vil det stå en melding om dette på hovedsiden til utgaven. Datamodell kan også lastes opp/sees fra Modellering-siden til utgaven.   Legg til datamodell   Lag skjema med UI editor UI editor ligger under UX i toppmenyen for utgaven, under Designer   UI editor   Skjemaelementer legges til ved å velge type element fra oversikten til venstre. Visning av skjema ligger på høyre side.\n  UI editor - oversikt   Redigere egenskaper til skjemaelement Skjemaelementene har forskjellige egenskaper som kan redigeres. For å få opp redigeringsvindu kan man velge eksisterende elementer i visningen av skjema på høyre side. Vindu med egenskaper kommer automatisk opp når nytt skjemaelement legges til.\nVisningstekst Alle skjemaelementer har en tekst knyttet til seg som beskriver forventet innhold i elementet. Tekst velges fra nedtrekksliste over tilgjengelige tekster, se avsnitt om tekster under.\n  Visningstekst   Feltegenskaper  Required: Er det påkrevd med verdi i feltet? Disabled: Skal feltet være skrivebeskyttet?  OBS! Feltegenskapene over er per nå kun tilgjengelige på Input-elementer.\n  Feltegenskaper   Forhåndsdefinerte valg For skjemaelementer som har forhåndsdefinerte valg (f.eks. nedtrekksliste og radioknapper) kan disse valgene konfigureres. Merk at feltene for å konfigurere dette ikke er tilgjengelige for skjemaelementer som ikke har forhåndsdefinerte valg.\n  Forhåndsdefinerte valg   Knytning mot datamodell Skjemaelementer som skal ta input fra sluttbruker kan knyttes mot felt i datamodell. Det som sluttbruker skriver inn i skjemaelementet vil da mappes til det definerte feltet i datamodellen. Knytning mot felt i datamodell gjøres via nedtrekksliste som viser tilgjengelige felt i datamodell.\n  Knytning mot datamodell     UI editor - redigere egenskaper for skjemaelement    Legg til tekster Tekster hentes inn både fra et fellesbibliotek tilgjengelig for alle, og evt. også fra fellesbibliotek for den enkelte tjenesteeier. Det er også mulig å legge inn egne tekster knyttet til en utgave, eller å overstyre tekster fra fellesbibliotek for en utgave.\nLegge til, redigere eller overstyre tekster for en utgave I toppmenyen, under UX velges menyvalget Tekster for å komme til tekstredigeringsverktøyet. Dette kan også nås ved å velge fanen Tekster dersom en allerede er inne i UI editoren.\nTekster er definert med en nøkkel (unik for hver enkelt tekst) og en visningstekst. Tekster kan legges inn på flere språk.\n  UI editor - redigere tekster   Legg til kodeliste En kodeliste er en forhåndsdefinert liste med nøkler (koder) og visningstekster. En kode i kodelisten kan knyttes til opp til 3 visningstekster. Når kodeliste knyttes til en skjemakomponent velger man hvilken visningsverdi som skal brukes. Kodelister knyttes typisk mot en nedtrekksliste.\nKodelister hentes både fra felles bibliotek tilgjengelig for alle, evt. felles kodelister for den enkelte tjenesteeier, og kodelister som er definert på en utgave.\nRedigere eller endre kodeliste for en utgave I toppmenyen, under Modellering velges menyvalget kodelister.\nFor å redigere eksisterende kodeliste, velg ønsket kodeliste fra listen.\nFor å lage ny kodeliste, velg Lag ny kodeliste.\n  UI editor - redigere kodelister   Knytte en kodeliste mot skjemakomponent  Legg til ønsket skjemakomponent (f.eks. nedtrekksliste) i UI-editor, pass på å knytte denne mot felt i datamodellen. Velg Add connection under Api connections på venstre side Velg Code list Velg ønsket kodeliste fra listen med tilgjengelige kodelister. Velg Add new mapping Velg hvilken av de 3 tekstene knyttet til koden (value1/value2/value3) som skal vises Velg samme felt i datamodellen som skjemaelementet ble knyttet til Lagre, da lukker vinduet for konfigurering av kodelister seg. Lagre skjema  Når utgaven testes vil de faktiske verdiene fra kodelisten populeres inn i nedtrekkslisten.\n  UI editor - konfigurere knytning til kodeliste   MERK: Per nå er det ingen språkstøtte for kodelister. Denne dokumentasjonen oppdateres når dette er tilgjengelig.\n Legg til kall til eksterne API Kall til eksterne API kan brukes til å hente inn informasjon fra kilder utenfor \u0026ldquo;tjenesten\u0026rdquo;. Tilgjengelige API hentes inn fra felles bibliotek.\nDet er implementert støtte for 2 typer API. Under beskrives hva som må settes opp for de forskjellige typene.\nAPI som tar inn input fra skjema, og som returnerer verdi som populeres i felt i skjema.  Legg til ønskede skjemakomponenter (f.eks input), en som input til API og en til å vise resultat, i UI-editor. Pass på å knytte til datamodell. Velg Add connection under API connections på venstre side. Velg External API Velg ønsket API fra listen. Legg til klientparametre (ClientParam) - dette er input fra skjema som sendes til API.  Legg til eksempelverdi for å teste API-kallet Legg til felt i datamodell, dette må være det samme feltet som komponent for input er knyttet mot i skjema.  Legg til ev. tilleggsparametre (MetaParam) - dette er input som sendes til API som ikke kommer fra skjema. Test henting av data fra API ved å velge Fetch from API using parameters.  Respons vises i tekstfeltet under knappen  Velg Add new mapping Velg hvilket av objektene fra resultatet som skal brukes. Velg knytning til datamodell, dette må være likt som for den skjemakomponenten som skal vise resultatet. Lagre Lagre hele skjema Test at det fungerer ved å skrive inn gyldig verdi i skjemakomponenten med input til API\u0026rsquo;et, og se at resultatet vises i riktig skjemakomponent.    UI editor - konfigurere knytning til ekstern API   API som returnerer liste, tilsvarende kodeliste.  Legg til ønskede skjemakomponenter (f.eks input), en som input til API og en til å vise resultat, i UI-editor. Pass på å knytte til datamodell. Velg Add connection under API connections på venstre side. Velg External API Velg ønsket API fra listen. Legg til ev. tilleggsparametre (MetaParam) - dette er input som sendes til API som ikke kommer fra skjema. Test henting av data fra API ved å velge Fetch from API using parameters.  Respons vises i tekstfeltet under knappen  Velg Add new mapping Velg hvilket av objektene fra resultatet som skal brukes. Velg knytning til datamodell, dette må være likt som for den skjemakomponenten som skal vise resultatet. Lagre. Lagre hele skjema.  Verdiene lastes inn når skjemaet testes.\nRegler Legge til nye/redigere regler Tilgjengelige regler ligger i en javascript-fil og er tilgjengelige via Modellering -\u0026gt; Kode i toppmenyen. Velg filen RuleHandler.js. Regler legges under objektet ruleHandlerObject. Alle parametere som forventes som input må defineres i objektet ruleHandlerHelper.\nI eksempelet under er det definert to regler, en som tar inn 3 verdier og returnerer summen av disse (sum), og en som tar inn et fornavn og et etternavn og returnerer fullt navn (fullName).\nvar ruleHandlerObject = { sum: (obj) =\u0026gt; { obj.a = +obj.a; obj.b = +obj.b; obj.c = +obj.c; return obj.a + obj.b + obj.c; }, fullName: (obj) =\u0026gt; { return obj.first + ' ' + obj.last; } } var ruleHandlerHelper = { fullName: () =\u0026gt; { return { first: \u0026quot;first name\u0026quot;, last: \u0026quot;last name\u0026quot; }; }, sum: () =\u0026gt; { return { a: \u0026quot;a\u0026quot;, b: \u0026quot;b\u0026quot;, c: \u0026quot;c\u0026quot; } } }  Knytte regler mot felt i skjema  Legg til nødvendige komponenter i skjema. F.eks. for eksempelet sum trengs her 3 felter som input, i tillegg til ett felt som viser resultatet. Velg Add connection under Rule Connections. Velg ønsket regel (f.eks. sum i eksempelet). Oppgi knytning til datamodell for alle input-verdiene (disse må da matche med de knytningene som er satt opp på skjemakomponentene). Oppgi knytning til datamodell for resultatet (må matche med knytning som er satt opp på skjemakomponent). Lagre. Test at det fungerer ved å legge inn verdier i alle input-feltene og se at resultatet dukker opp i ønsket felt. Lagre skjema.  Dynamikk Vi definerer dynamikk som hendelser i skjemavisningen basert på brukers input. For eksempel ved at visse felter kun vises dersom bruker har oppgitt en gitt verdi et annet sted i skjema. Det er lagt opp til at man kan sette opp betingelser for når/hvordan slike hendelser skal skje.\nLegge til/redigere betingelser for dynamikk Tilgjengelige betingelser ligger i en javascript-fil og er tilgjengelige via Modellering -\u0026gt; Kode i toppmenyen. Velg filen RuleHandler.js. Regler legges under objektet conditionalRuleHandlerObject. Alle parametere som forventes som input må defineres i objektet conditionalRuleHandlerHelper.\nI eksempelet under er det definert tre betingelser:\n biggerThan10: sjekker om oppgitt verdi er større enn 10. smallerThan10: sjekker om oppgit verdi er mindre enn 10. lengthBiggerThan4: sjekker om lengden til en tekst er lengre enn 4.  var conditionalRuleHandlerObject = { biggerThan10: (obj) =\u0026gt; { obj.number = +obj.number; return obj.number \u0026gt; 10; }, smallerThan10: (obj) =\u0026gt; { obj.number = +obj.number; return obj.number \u0026gt; 10; }, lengthBiggerThan4: (obj) =\u0026gt; { if (obj.value == null) return false; return obj.value.length \u0026gt;= 4; } } var conditionalRuleHandlerHelper = { biggerThan10: () =\u0026gt; { return { number: \u0026quot;number\u0026quot; }; }, smallerThan10: () =\u0026gt; { return { number: \u0026quot;number\u0026quot; } }, lengthBiggerThan4: () =\u0026gt; { return { value: \u0026quot;value\u0026quot; } } }  Knytte betingelser for dynamikk mot felt i skjema  Legg til ønsket komponent som dynamikk skal knyttes mot. Velg Add connection under Conditional Rendering connections i venstre menyen i UI editor. Velg ønsket betingelse. Velg felt i datamodell som skal sjekkes. Velg hva du ønsker at skal skje med elementet dersom valgt metode returnerer true. Per nå støttes følgende operasjoner:  Show Hide  Velg felt i skjema som dynamikken skal knyttes mot. Lagre. Lagre skjema.  Dynamikken kan testes under testing av skjema, f.eks. gjennom Preview-funksjonaliteten.\n  UI editor - konfigurere betingelser for dynamikk   "
},
{
	"uri": "https://docs.altinn.studio/guide/service-testing/",
	"title": "Test utgave",
	"tags": ["guide"],
	"description": "Informasjon om testing av utgave",
	"content": " Preview-funksjonalitet I UI-editoren er det bygget inn en Preview-funksjonalitet. Denne tillater tjenesteutvikler å se hvordan skjema vil se ut til slutt.\nPreview er tilgjengelig under UX i toppmenyen, eller via Preview-fanen dersom man allerede er i UI-editoren.\nI tillegg til å se hvordan skjema vil se ut, kan man også teste f.eks. API-kall, kalkuleringer/regler, valideringer og dynamikk og se hvordan disse oppfører seg.\n  Preview   Kjør utgaven i Runtime Utgaven kan testes med en testbruker i Runtime.\n Gå til utgavearbeidsflaten (velg utgaven i toppmenyen eller gå inn til utgaven via forsiden) Under Test, velg  -ikonet. Velg testbruker fra listen Velg eksisterende instans, eller start ny.  Utgaven kan nå testes, all funksjonalitet som er beskrevet over i Preview er også tilgjengelige for test i Runtime.\n  Test utgave i Runtime   "
},
{
	"uri": "https://docs.altinn.studio/_header/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "studio docs\n"
},
{
	"uri": "https://docs.altinn.studio/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.altinn.studio/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.altinn.studio/tags/brukerveiledning/",
	"title": "brukerveiledning",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.altinn.studio/tags/guide/",
	"title": "guide",
	"tags": [],
	"description": "",
	"content": ""
}]