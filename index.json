[
{
	"uri": "https://docs.altinn.studio/about/goals/",
	"title": "Goals",
	"tags": [],
	"description": "Goals for the Altinn Studio platform",
	"content": " This summarizes the high level goals for Altinn Studio\nUserfriendly and responsive services  User interface that is userfriendly, effective and modern. Support for Responsive Design both for forms and the development tool. Built in accessability with support for WCAG 2 Good performance and low response time  Effective and self-service service development  As a service developer you can do everthing yourself (including deployment to production) whenever you want, without need for orders, training ++. Bottlenecks is eliminated. Effective and real testing, where unit test works like in a test environment and produiction. Support for creating automated tests of services Rules and logic is defined once for all channels (portal/web service / rest), and are more robust than current plattform Built inn data modelling in web based tool (and support for XSD import from external tools like SERES, OR, etc. ) Not nescessery with Citrix for access to Altinn Studio Service Development Ikke nødvendig med Citrix for tilgang til utviklingsmiljø  Simple for non-technical developers, flexible for technical developers  Non-technical service developers have access to needed functionality in browser You can reuse good and testet components/widgets It is easy to do call against API\u0026rsquo;s in other systems (retrieve data, run external logic) Techincal skilled deveopers can configure all aspect of the service, as an example make a reusable widgets, stylesheets ++ Reuse of text and other resources on the desired level (platform, service owner, service), all languages supported Git (version control) are used for source control for the service developed, both from browser and code editior.  Open Source, cross-platform  Altinn Studio will be based on open source Altinn Studio will be open source Altinn Studio can run on your own computer, own serwers on Windows, macOS or Linux Everything is based on open web-standardes and regulaer development knowledge.  "
},
{
	"uri": "https://docs.altinn.studio/guide/",
	"title": "Kom i gang",
	"tags": ["guide", "brukerveiledning"],
	"description": "Kom i gang - bruk av Altinn Studio MTP",
	"content": "En tidlig testversjon Altinn Studio er tilgjengelig på https://altinn.studio.\n\rFørste gangs oppsett\r\rSett opp bruker i AltinnStudio for første gangs bruk.\n\r\r\rLag en utgave\r\rDokumentasjon av funksjonalitet tilgjengelig for å lage en utgave\n\r\r\rTest utgave\r\rInformasjon om testing av utgave\n\r\r\r"
},
{
	"uri": "https://docs.altinn.studio/documentation/runtime/",
	"title": "Runtime",
	"tags": ["documentation", "solution", "architecture"],
	"description": "Description of the Altinn Studio solution",
	"content": "The runtime application is the one responsible for hosting and running the developed end user service.\nIt has all functionality to present GUI, handle workflow, logic and everthing else related to the service.\n"
},
{
	"uri": "https://docs.altinn.studio/documentation/",
	"title": "Solution",
	"tags": ["documentation", "solution", "architecture"],
	"description": "Description of the Altinn Studio solution",
	"content": " Altinn Studio is deployed as two different solutions to make a complete platform.\nAltinn Studio Service Development solution This is where the Service Developers create their end user services with GUI, rules and logic, workflow, texts ++\nAltinn Studio Runtime solution This is the solution where the completed end user services is deployed and accessed by end users.\n"
},
{
	"uri": "https://docs.altinn.studio/documentation/repositories/data/service-configurations/",
	"title": "ServiceConfigurations.json",
	"tags": ["tjenester 3.0", "dataformat"],
	"description": "Beskrivelse av format for tjeneste konfigurasjons filen",
	"content": " Overordnet ServiceConfiguration.json filen spesifiserer ulike konfigurasjoner lagt til i design prosessen. Nå består den av api koblinger, kalkuleringer og dynamikk regler.\nFormat API connections Strukturen under beskriver api koblinger til et skjema. Objektet inneholder koblingene og informajson knyttet til api\u0026rsquo;ene som er i bruk. ClientParams og apiResponseMapping viser mapping til datamodellen. externalApiId viser kobling til api\u0026rsquo;er som kan brukes.\n \u0026quot;data\u0026quot;: { \u0026quot;externalApi\u0026quot;: { \u0026quot;APIs\u0026quot;: { \u0026quot;connections\u0026quot;: { \u0026quot;c5dadba0-9707-11e8-9c4d-6f48d2b86ea7\u0026quot;: { \u0026quot;externalApiId\u0026quot;: \u0026quot;id1\u0026quot;, \u0026quot;clientParams\u0026quot;: { \u0026quot;pnr\u0026quot;: \u0026quot;skattyterinfor.kontakt.kontaktpersonPostnummer.value\u0026quot; }, \u0026quot;metaParams\u0026quot;: { \u0026quot;clientUrl\u0026quot;: \u0026quot;fgdb\u0026quot; }, \u0026quot;apiResponseMapping\u0026quot;: { \u0026quot;skattyterinfor.kontakt.kontaktpersonPoststed.value\u0026quot;: \u0026quot;result\u0026quot; } } }, \u0026quot;externalApisById\u0026quot;: { \u0026quot;id1\u0026quot;: { \u0026quot;id\u0026quot;: \u0026quot;id1\u0026quot;, \u0026quot;name\u0026quot;: \u0026quot;Bring postnummer API\u0026quot;, \u0026quot;shortname\u0026quot;: \u0026quot;Postnummer\u0026quot;, \u0026quot;uri\u0026quot;: \u0026quot;https://api.bring.com/shippingguide/api/postalCode.json?\u0026quot;, \u0026quot;description\u0026quot;: \u0026quot;Api for å hente poststed basert på postnummer\u0026quot;, \u0026quot;clientParams\u0026quot;: { \u0026quot;pnr\u0026quot;: { \u0026quot;type\u0026quot;: \u0026quot;queryString\u0026quot;, \u0026quot;name\u0026quot;: \u0026quot;pnr\u0026quot;, \u0026quot;value\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;required\u0026quot;: true, \u0026quot;example\u0026quot;: \u0026quot;Example: 2050\u0026quot; } }, \u0026quot;metaParams\u0026quot;: { \u0026quot;clientUrl\u0026quot;: { \u0026quot;type\u0026quot;: \u0026quot;queryString\u0026quot;, \u0026quot;name\u0026quot;: \u0026quot;clientUrl\u0026quot;, \u0026quot;value\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;required\u0026quot;: true, \u0026quot;example\u0026quot;: \u0026quot;Example: http://www.sitename.com\u0026quot;, \u0026quot;urlEncode\u0026quot;: true } } } }, \u0026quot;externalApisIds\u0026quot;: [ \u0026quot;id1\u0026quot; ] } },  Rule connections Strukturen under beskriver regler lagt til i et skjema. Objektet inneholder koblingene til regler som finnes på et skjema. I objektet er det spesifisert hvilken metode som skal brukes, hvilke felter i datamodellen som skal knyttes til input objektet til metoden og hvilke felt i datamodellen som skal knyttes til funsjonens output verdi.\n \u0026quot;ruleConnection\u0026quot;: { \u0026quot;d180e210-9707-11e8-9c4d-6f48d2b86ea7\u0026quot;: { \u0026quot;selectedFunction\u0026quot;: \u0026quot;ruleFunctionName\u0026quot;, \u0026quot;inputParams\u0026quot;: { \u0026quot;inputParam1\u0026quot;: \u0026quot;skattyterinfor.info.enhetOrganisasjonsnummer.value\u0026quot;, \u0026quot;inputParam2\u0026quot;: \u0026quot;skattyterinfor.kontakt.kontaktpersonEPost.value\u0026quot; }, \u0026quot;outParams\u0026quot;: { \u0026quot;outParam0\u0026quot;: \u0026quot;klage.spesifisering.klageSpesifisering.value\u0026quot; } } }  Conditional rendering connections Strukturen under beskriver dynamikk lagt til i et skjema. Objektet inneholder koblingene mellom skjema og dynamiske regler som finnes på et skjema. I objektet er det spesifisert hvilken metode som skal brukes, hvilke felter i datamodellen som skal knyttes til input objektet til metoden og mapping mellom regelen og elementer i skjemaet.\n \u0026quot;conditionalRendering\u0026quot;: { \u0026quot;d841b430-9707-11e8-9c4d-6f48d2b86ea7\u0026quot;: { \u0026quot;selectedFunction\u0026quot;: \u0026quot;conditionalFunctionName\u0026quot;, \u0026quot;inputParams\u0026quot;: { \u0026quot;value\u0026quot;: \u0026quot;skattyterinfor.info.oppgavegiverAdressePreutfylt.value\u0026quot; }, \u0026quot;selectedAction\u0026quot;: \u0026quot;Hide\u0026quot;, \u0026quot;selectedFields\u0026quot;: { \u0026quot;d8416610-9707-11e8-9c4d-6f48d2b86ea7\u0026quot;: \u0026quot;94bb4f87-3428-4f2e-9b6a-6ff358ebd173\u0026quot; } } }  "
},
{
	"uri": "https://docs.altinn.studio/documentation/repositories/data/rule-handler/",
	"title": "RuleHandler.js",
	"tags": ["tjenester 3.0", "dataformat"],
	"description": "Beskrivelse av format for rule handler js filen",
	"content": " Overordnet Filen RuleHandler.js brukes til å lage metoder som skal benyttes for til kalkuleringer/regler på felter i datamodellen eller for å skape dynamikk i et skjema.\nFormat Filen består av 4 objekter, 2 av de benyttes for til kalkuleringer/regler i skjema og de 2 andre benyttes til dynamikk i skjema. ruleHandlerObject og conditionalRuleHandlerObject skal benyttes til å definere metoder som kan brukes til kalkuleringer/regler i skjema. Alle metodene har et objekt som input parameter og en output verdi, strukturen på input objektet er beskrevet i ruleHandlerHelper og conditionalRuleHandlerHelper. Filen har følgende struktur:\n var ruleHandlerObject = { ruleFunctionName: (obj) =\u0026gt; { return obj.inputParam1 + \u0026quot; \u0026quot; + obj.inputParam2; }, } var ruleHandlerHelper = { ruleFunctionName: () =\u0026gt; { return { inputParam1: \u0026quot;inputParam1\u0026quot;, inputParam2: \u0026quot;inputParam2\u0026quot; }; }, } var conditionalRuleHandlerObject = { conditionalFunctionName: (obj) =\u0026gt; { return obj.input1 \u0026gt; 10; }, } var conditionalRuleHandlerHelper = { conditionalFunctionName: () =\u0026gt; { return { input1: \u0026quot;input1\u0026quot; }; }, }  Ved innlasting i skjemadesigneren vil filen lastes inn i window elementet og kalles ved hjelp av window.conditionalRuleHandlerObject.conditionalFunctionName. Kalkuleringer/regler kjøres når skjema fylles ut. Så regler kan testes både i desinger, preview og i runtime. Kalkuleringer/regler input objekt sine parameter og output parameteret kobles til felter i datamodellen.\nDynamikk regler manipulerer skjema ved å skjule eller vise felter. Input objektet kobles til datamodelfelter. Deretter må brukeren spesifisere hva som skal skje hvis metoden returnerer true. Per nå er det kun mulig å velge å skjule eller vise felter. Deretter knytter man \u0026lsquo;action\u0026rsquo; til felter som er lagt inn i skjema. Man kan knytte så mange felter man vil til en dynamisk regler.\n"
},
{
	"uri": "https://docs.altinn.studio/about/",
	"title": "About",
	"tags": ["documentation", "solution", "architecture"],
	"description": "Description of the Altinn Studio and Altinn Studio Apps solution",
	"content": " What is Altinn Studio? Altinn Studio is the third generation service development solution from Altinn. Norways public platform for E-Government. The current plattform (first version launched 2010) is considered by Gartner as one of the five leading digital government technology plattforms in the world. The current plattform is used by over 90% of the Norwegian population and almost 100% of the businesses. Over 43 agencies hosts services in the Altinn plattform.\n  Gartner   What is Altinn Studio Apps? Altinn Studio Apps is the solution where services developed in Altinn Studio is deployed. This will be a higly scalable plattform with isolated service applications.\nWhat types of services can be built on this platform? The first version will support services where the usecase is to submit data from the end user or the system to the service owner.\nWhen will it be released First version is planned to be launced 2019\n"
},
{
	"uri": "https://docs.altinn.studio/architecture/application/altinn-studio/",
	"title": "Application Architecture Runtime",
	"tags": ["tjenester 3.0"],
	"description": "Description of the application architecture for runtime applicationz",
	"content": " NOTE: Work in progress. Stuff will change\n\rThe following diagram shows the application architecture for Altinn Studio solution\n\nFrontend The runtime application will have two different types of frontend. * Frontend developed by the service developer in Altinn Studio designer * Frontend that is part of the plattform.\nFrontend for Altinn Studio service The frontend developed as part of the service development in Altinn Studio is based on REACT.\nAltinn Studio Generates a REACT app based on the selected components in the service UI.\nThis app uses the backend APIS for creating, updating, deleting data in the service datamodell.\nSee details for REACT App architecture\nFor services with requirements that is not supported with the WYSIWYG REACT editor the service developer could build theire own client based frontend on REACT or other frameworks hosted in runtime.\nIt will also be possible to build a GUI hosted elsewhere and just use the service APIs to handle data updates\nFrontend for platform views As part of the platform there is some standard pages presented during the workflow for a service that the service developer does not need to create GUI for. * Instansiation * Send in * Signing * Payment\nThese are all using Razor as frontend framework.\nBackend Backend is based on ASP.Net Core and is a MVC application that uses defined interfaces to run the specific service logic implemented in Altinn Studio.\nAltinn Studio Mode In Altinn Studio mode the runtime instances will be shared between different end user services.\nBased on the logged in service developer and URL parames the correct service implementation will be compiled and loaded in to memory for backend.\nEnd User Mode In End User mode there will be built dedicated container images for each service. The Service Implementation will be pre-compilled and stored in the container file structure so it can be loaded in to memory.\nService Implementation. The service implementation is C# code generated/created as part of the service development process in Altinn Studio.\nThe Service Implementation implement a defined interface that backend uses to be able to interact with the service implementation.\nThe service implementation contains all backend code for logic and rules.\nEvents The runtime has a defined event model that can be used by the service developer to controll when logic in the service implementation will run.\nThese events are mapped to functional events triggered by end users or systems.\nInstansiation Instansiation is when the end user or system instansiates a new service instance. Events connected to instansiation can contain logic that can prefill the datamodell or validate if the user or system is allowed to instansiate that service.\n\nLoad form data (GET) Loading of form data can be performed by the frontend (REACT) or an end user system that needs to get the latest updated form data.\nThe following events will be performed\n\nStoring of form data (POST) Update of form data can happen when frontend (REACT app) sends data to backend or a end user system does the same. When an update happend there is defined serveral events that is performed in a given ordern. The service developer can implement logic related to this event that could perform calculation, validation, API calls and much more.\nThe API for updating form data support different modes\n Create - Data should be stored as a new form instance Complete - Data is complete and the service should move ahead in the workflow Calculate - Logic in the calculation event should be performed and the updated form data should be returned Validate - Calculation will be performend and then validation logic is runned and any validation errors is returned. Update - Calculation is runned before data is stored in to the database.  The order of events are\n\nUpdate form data (PUT) Update of form data happens when the frontend or external end user systems/applications want to update a existing form connected to a service instance\nThe following events happens:\n\nDatamodel The data model in a service is defined as an XSD. From the XSD it is generated a C# representation of that model.\nIn runtime all data is deserialized/serialized from/to this model when communication with frontend/external systems.\nAll logic in the service will typical be related to the datamodel.\n"
},
{
	"uri": "https://docs.altinn.studio/architecture/deployment/altinn-studio/",
	"title": "Altinn Studio - Deployment Architecture",
	"tags": ["tjenester 3.0"],
	"description": "Description of the deployment architecture for runtime application",
	"content": " NOTE: Work in progress. Stuff will change\n\rThe Altinn Studio Service Development solution is deployed to a Kubernetes Cluster. The diagram below show the different applications that is part this.\n\nRepository GITEA is used as Repository in Altinn Studio Service Development solution. There is one instance of GITEA running in a docker container in the solution. It uses cloud service database and cloud file share for configuration and remote repos. The Repository is accessed both from the designer application and from code IDE\u0026rsquo;s from service developers computers.\nDesigner Designer is the web based editor for anything related to the service development. (UI, workflow, rules ++) It runs in Docker Containers. (Linux) (how many needed will be analyzed at a later stage).\nRuntime Runtime is used for integration testing of services as part of Altinn Studio Service Development solution. The same runtime application is shared between all service developers. The service code/configuration is copied from local repo of the service developers testing the service.\nRouting NGINX is used for routing between the different applications.\nLocal Developer Service Developers can use locally installed IDE and other tools and communicate directly with the repository. This is targeted for the more experienced developers.\nLocal Developer with Altinn Studio For developers that is required to develop custom widgets (REACT) they can install Altinn Studio Service Development solution locally on their computer. (Altinn studio support both Windows, Linxu and MacOS)\n"
},
{
	"uri": "https://docs.altinn.studio/architecture/application/altinn-studio-apps/",
	"title": "Application Architecture Runtime",
	"tags": ["tjenester 3.0"],
	"description": "Description of the application architecture for runtime applicationz",
	"content": " NOTE: Work in progress. Stuff will change\n\rThe following diagram shows the application architecture for the Altinn Studio Apps solution.\n\nFrontend The runtime application will have two different types of frontend. * Frontend developed by the service developer in Altinn Studio designer * Frontend that is part of the plattform.\nFrontend for Altinn Studio service The frontend developed as part of the service development in Altinn Studio is based on REACT.\nAltinn Studio Generates a REACT app based on the selected components in the service UI.\nThis app uses the backend APIS for creating, updating, deleting data in the service datamodell.\nSee details for REACT App architecture\nFor services with requirements that is not supported with the WYSIWYG REACT editor the service developer could build theire own client based frontend on REACT or other frameworks hosted in runtime.\nIt will also be possible to build a GUI hosted elsewhere and just use the service APIs to handle data updates\nFrontend for platform views As part of the platform there is some standard pages presented during the workflow for a service that the service developer does not need to create GUI for. * Instansiation * Send in * Signing * Payment\nThese are all using Razor as frontend framework.\nBackend Backend is based on ASP.Net Core and is a MVC application that uses defined interfaces to run the specific service logic implemented in Altinn Studio.\nAltinn Studio Mode In Altinn Studio mode the runtime instances will be shared between different end user services.\nBased on the logged in service developer and URL parames the correct service implementation will be compiled and loaded in to memory for backend.\nEnd User Mode In End User mode there will be built dedicated container images for each service. The Service Implementation will be pre-compilled and stored in the container file structure so it can be loaded in to memory.\nService Implementation. The service implementation is C# code generated/created as part of the service development process in Altinn Studio.\nThe Service Implementation implement a defined interface that backend uses to be able to interact with the service implementation.\nThe service implementation contains all backend code for logic and rules.\nEvents The runtime has a defined event model that can be used by the service developer to controll when logic in the service implementation will run.\nThese events are mapped to functional events triggered by end users or systems.\nInstansiation Instansiation is when the end user or system instansiates a new service instance. Events connected to instansiation can contain logic that can prefill the datamodell or validate if the user or system is allowed to instansiate that service.\n\nLoad form data (GET) Loading of form data can be performed by the frontend (REACT) or an end user system that needs to get the latest updated form data.\nThe following events will be performed\n\nStoring of form data (POST) Update of form data can happen when frontend (REACT app) sends data to backend or a end user system does the same. When an update happend there is defined serveral events that is performed in a given ordern. The service developer can implement logic related to this event that could perform calculation, validation, API calls and much more.\nThe API for updating form data support different modes\n Create - Data should be stored as a new form instance Complete - Data is complete and the service should move ahead in the workflow Calculate - Logic in the calculation event should be performed and the updated form data should be returned Validate - Calculation will be performend and then validation logic is runned and any validation errors is returned. Update - Calculation is runned before data is stored in to the database.  The order of events are\n\nUpdate form data (PUT) Update of form data happens when the frontend or external end user systems/applications want to update a existing form connected to a service instance\nThe following events happens:\n\nDatamodel The data model in a service is defined as an XSD. From the XSD it is generated a C# representation of that model.\nIn runtime all data is deserialized/serialized from/to this model when communication with frontend/external systems.\nAll logic in the service will typical be related to the datamodel.\n"
},
{
	"uri": "https://docs.altinn.studio/architecture/deployment/altinn-studio-apps/",
	"title": "Altinn Studio Apps - Deployment Architecture",
	"tags": ["tjenester 3.0"],
	"description": "Description of the deployment architecture for Altinn Studio Apps",
	"content": " NOTE: Work in progress. Stuff will change\n\rAltinn Studio Apps is the solution where all the services developed in Altinn Studio is deployed. The following diagram shows the deploy architecture for Altinn Studio Apps\n\nService Containers In the Altinn Studio Apps solution each end user service will have a uniqe docker container managed by Kubernetes. Each set of service containers will be scaled based on the use of the service. The service container will consist of the runtime application and service specific code and configuration.\nRouting To be able to route traffic to the correct container, each container is tagged to a specific end user service. The routing mecahnism routes to the correct container based on the url containing the service parameter.\nData services The data services application is the application responsible exposing data related functionality to the service containers. This container will be scaled based on need.\nPlatform integration The platform integration is a new application hosted in the existing infrastructure. It exposes REST-APIs for Profile, Register, Authorization, Intermediary and Authentication. These are services not part of the Altinn Studio Platform (yet) and everyone planning to run the Altinn Studio platform would need to implement their own components that support.\nAPI Proxy API Proxy is needed for controlling credentials and outbound firewall rules from the platform. This might be handled by the API Managment software. Needs Analyzis\nAPI Management The platform requires API management software to handle SLA ++. Needs Analyzis\n"
},
{
	"uri": "https://docs.altinn.studio/",
	"title": "Altinn Studio docs",
	"tags": [],
	"description": "Dette er levende dokumentasjon for Altinn Studio.",
	"content": "docs\r  Dette er levende dokumentasjon for altinn.studio som oppdateres i parallell med utviklingen av løsningen. Alle kan følge med på vår åpne backlog og se innholdet i [milepælene] som vi jobber mot. Alle kan også opprette bugs, komme med feedback og stille spørsmål. Vi forsøker å svare så fort vi kan.  Kom i gang nå med å teste løsningen. Alt du behøver for å få tilgang er å logge inn med din github-bruker.\n"
},
{
	"uri": "https://docs.altinn.studio/architecture/application/",
	"title": "Application",
	"tags": ["documentation", "solution", "architecture"],
	"description": "Description of the Altinn Studio application architecture",
	"content": "The Altinn Studio\n"
},
{
	"uri": "https://docs.altinn.studio/architecture/",
	"title": "Architecture",
	"tags": ["documentation", "solution", "architecture"],
	"description": "Description of the Altinn Studio solution",
	"content": " Architecture Principles and Concerns The following principles and concern are important for the architecture in Altinn Studio\nOpen Source Altinn Studio will be open Source. That require that we use framework and technology that are Open Source\nIsolation between services The goal for Altinn Studio is to be a platform where no service can negativly affect other services. This requires that all services are hosted as isolated applications\nSelf Service "
},
{
	"uri": "https://docs.altinn.studio/documentation/repositories/architecture/",
	"title": "Repositories - Arkitektur",
	"tags": ["tjenester 3.0", "Repositories"],
	"description": "Beskrivelse av arkitektur for Repositories.",
	"content": "TODO\n Gitea Fileshare for Git Docker Database  "
},
{
	"uri": "https://docs.altinn.studio/architecture/build/",
	"title": "Build process",
	"tags": ["ci", "build", "devops", "pipeline", "pipelines"],
	"description": "Altinn Studio Build Processes",
	"content": " Build Pipelines Quality Build Building the docker image, running tests and checking code.\nTriggered by:\n Git Push Pull Request  Altinn Studio and Runtime Docker Images Separate pipelines are made for Altinn Studio and Runtime. The pipeline will build and deploy the Altinn Studio Docker Image and the Runtime Docker Image to Azure Container Registry.\nTriggered by:\n Git Merge to Master  Altinn Studio Release Build When the build for either Altinn Studio or Runtime is successfully ran a release build will start. The release build will update the kubernetes cluster with the images created in the Altinn Studio and the Runtime builds\nTriggered by:\n Successfull build of either/both Altinn Studio and Runtime  Altinn Service Deploy   Service Runtime docker image bundling process.   Building the Altinn Service with \u0026ldquo;service specific\u0026rdquo; files from Gitea, creating a \u0026ldquo;Service Image\u0026rdquo;, deploying to Azure Container Registry and telling Kubernetes to deploy service.\nBuild process (Pipeline):\nThis process har more details in the Dockerfile. This is a summary.\n Downloading files from service repo in Gitea Building Docker base image with Dockerfile. This includes \u0026ldquo;Dotnet build\u0026rdquo; for C# files from Gitea. \u0026ldquo;Dotnet build\u0026rdquo; is executed on the Runtime Base Image reusing previous.  Docker Pull: Altinn/Runtime Base Image with SDK from ACR. This makes the AltinnService build faster. Clone and build code from Gitea inside Altinn-Runtime Base Image. Docker Pull: Microsoft/DotNet AspNetCore. Copy Altinn Runtime, AltinnService Build files and Service Metadata/Resources from Gitea.  Publish to ACR.  Triggered by:\n \u0026ldquo;Publish Service\u0026rdquo;-button in Altinn Studio.  Generating Altinn Pipelines Images Summary  The Altinn Azure Pipelines Image (image) is built with Packer. The Packer JSON configuration is based on the same configuration used by Microsoft to build their own Hosted Agent images. The image is built in Azure Pipelines passing in \u0026ldquo;secrets\u0026rdquo; to the Packer configuration with Environment Variables not visibly available during the build process.  Usage  Create a Virtual Machine in Azure using the pre built image found under \u0026ldquo;browse all images and disks\u0026rdquo;. Create a username and password (should be stored in Azure Vault).  Installing Agent Host The script for installing the Agent Host is found at: Maintenance/azure-pipelines-image/scripts/agent/agent-install.sh (Currently a manual job)\nA computer can have one or several Agent Hosts installed. Several Agents, on one or several servers, can connect to one Agent Pool.\nCreating Pipelines Image with Packer.io The process of creating an Image with Packer is described here: https://docs.microsoft.com/en-us/azure/virtual-machines/linux/build-image-with-packer\nSome steps might already be performed in Azure.\nThe repo for creating the Pipelines Image for Altinn is hosted in this branch: https://github.com/Altinn/altinn-studio/tree/Maintenance/azure-pipelines-image and is based on the Microsoft Packer scripts from this repo: https://github.com/Microsoft/azure-pipelines-image-generation\nThe variables used in the Packer JSON configuration file is passed in via hidden Pipelines environment variables.\nUbuntu1604-full The \u0026ldquo;full\u0026rdquo; image contains components for building Dotnet and NodeJS applications, running JavaScript based headless tests and running Docker Images. See the JSON file for specifications.\nUbuntu1604-light The \u0026ldquo;light\u0026rdquo; image only contains Git and Docker and is created for only running Docker images.\nClean-up Packer creates Resource Groups in Azure keeping the image build for history and debuggind purposes. To remove this Resource Group run AZ Cli:\n az group delete -n PackerResourceGroup  "
},
{
	"uri": "https://docs.altinn.studio/documentation/repositories/data/calculationhandler/",
	"title": "CalculationHandler.cs",
	"tags": ["tjenester 3.0", "dataformat"],
	"description": "Beskrivelse av format for calculation handler",
	"content": " Arbeidet med POC har føreløpig ikke konkludert angående bruk av denne filen. Vil jobbes videre med i MVP.\n\rOverordnet \u0026lsquo;CalculationHandler.cs\u0026rsquo; er en C# klasse hvor tjenesteutvikler kan plassere forretningslogikk som gjør kalkuleringer.\nFormat Standard C# kode som kan gjøre bortimot alt.\nUavklart: Hvordan Tjenester 3.0 skal validere/verifisere denne logikken.\nUtvikling Under opprettelse av en tjeneste vil en tom CalculationHandler opprettes.\nHypotese: Tjenesteutvikler editerer på denne filen via Altinn Studio eller Visual Studio Code\n"
},
{
	"uri": "https://docs.altinn.studio/documentation/repositories/data/",
	"title": "Repositories - Data",
	"tags": ["tjenester 3.0", "arkitektur"],
	"description": "Struktur for repositories og filer i Gitea",
	"content": " Under arbeid\n\rOverordnet struktur Gitea\n├── \raltinn\n│ ├── \rcommon\n│ │ ├── \rtext \u0026hellip;\n│ │ └── \rwidgets \u0026hellip;\n│ │ └── README.md\n│ ├── \rcodelists\n│ │ ├── \rcountries.json\n│ │ └── \r\u0026hellip;\n│ │ └── README.md\n│ └── \r\u0026hellip;\n│\n├── \rorg-x\n│ ├── \rorg-x\n│ │ ├── \rsettings.json\n│ │ ├── \rtext \u0026hellip;\n│ │ └── \rwidgets \u0026hellip;\n│ │\n│ ├── \rcodelists\n│ │ ├── \rkodeliste1.json\n│ │ └── \r\u0026hellip;\n│ │\n│ ├── \rtjeneste-1\n│ │ ├── \rcommon \u0026hellip;\n│ │ ├── \reditions\n│ │ │ ├── \r2018\n│ │ │ │ ├── \rImplementation\n│ │ │ │ │ ├── \rCalculationHandler.cs\n│ │ │ │ │ ├── \rInstantiationHandler.cs\n│ │ │ │ │ ├── \rServiceImplementation.cs\n│ │ │ │ │ └── \rValidationHandler.cs\n│ │ │ │ ├── \rResources\n│ │ │ │ │ ├── \rStyles.json\n│ │ │ │ │ ├── \rreact-app.css\n│ │ │ │ │ ├── \rreact-app.js │ │ │ │ │ ├── \rRuleHandler.js\n│ │ │ │ │ ├── \rFormLayout.json\n│ │ │ │ │ ├── \rServiceConfigurations.json\n│ │ │ │ │ ├── \rresource.nb-NO.json\n│ │ │ │ │ └── \rresource.nn-NO.json\n│ │ │ │ ├── \rModel\n│ │ │ │ │ ├── \rServiceModel.xsd\n│ │ │ │ │ └── \rServiceModel.cs\n│ │ │ │ ├── \rconfig.json\n│ │ │ │ └── \rMetadata\n│ │ │ │ ├── \rServiceMetadata.json\n│ │ │ │ └── \rworkflow.json │ │ │ │\n│ │ │ └── \r2019 \u0026hellip;\n│ │ ├── .gitignore\n│ │ ├── LICENSE\n│ │ └── README.md\n│ │\n│ └── \rtjeneste-2 \u0026hellip;\n│\n├── \rorg-y\n│ ├── \rorg-y \u0026hellip;\n│ └── \r\u0026hellip;\n│\n├── \rbruker-a\n│ └── \rtjeneste-1 (fork av org-x/tjeneste-1)\n├── \rbruker-b \u0026hellip;\n│\n├── \rAlle organisasjoner\n├── \rAlle repos\n└── \rAlle brukere\n"
},
{
	"uri": "https://docs.altinn.studio/architecture/deployment/",
	"title": "Deployment",
	"tags": ["documentation", "solution", "architecture"],
	"description": "Description of the Altinn Studio solution",
	"content": "The Altinn Studio components are deployed as two different solutions.\n Altinn Studio - The complete Development solution Altinn Studio Apps - Where services are hosted and accessed by end users.  In this section you will find details about the deployment architecture for these solutions.\nIn addition there is a seperate article on how End Users Services developed in Altinn Studio Service Development solution are deployed to the runtime solution\n"
},
{
	"uri": "https://docs.altinn.studio/documentation/designer/",
	"title": "Tjenester 3.0 - Designer",
	"tags": ["tjenester 3.0"],
	"description": "Løsning for å komponenere tjenestens brukergrensesnitt, definere arbeidsflyt, endre instillinger, deploye, etc.",
	"content": "   Definering av layout for tjenesten \u0026#34;Starte Enkeltpersonforetak\u0026#34;   Altinn Designer vil være en brukervennlig løsning, som fagpersoner og andre kan benytte for å lage tjenester basert på gjenbruk og konfigurering av allerede ferdig utviklede \u0026ldquo;byggeklosser\u0026rdquo;.\nEksempler på ulike typer slike byggeklosser er layouts, tema, web-komponenter, oversatte tekster, API-kall, kodelister og steg i arbeidsflyt.\nI bakgrunnen så vil den brukervennlige designeren benytte Git mot Repositories for å lagre det som lages, på samme måte som en teknisk utvikler bruker f.eks. Visual Studio Code til det samme.\nKildekoden for Designer ligger i VSTS\rhttps://altinn.visualstudio.com/tjenester3.0/_git/AltinnCore\r\rBildene som benyttes for Designer er hentet fra en teknisk proof-of-concept. Endelig produkt vil nok se litt annerledes ut.\n\rFunksjonalitet i \u0026ldquo;Designer\u0026rdquo; Designer kan sees på som en samling av brukervennlige editorer, eller applikasjoner, som hver spesialiserer på å definere et gitt aspekt av en 3.0-tjeneste på en så rask og effektiv måte som mulig. Flyten mellom de ulike applikasjonene skal oppleves som naturlig og effektiv for tjenesteutvikler. Resultatet fra en applikasjon vil være én eller flere filer som versjonskontrolleres i Repositories.\nDette gjør at hver editor i Designer kan ha fokus på sin oppgave, og man minimerer sjansen for at Designer blir en stor og lite vedlikeholdbar monolitt. Det gjør også at editorer over tid enklere kan byttes ut, eller erstattes av mer spesialiserte eller forbedrede alternativer, som enten er del av Designer eller som er kjørende helt utenfor.\nDen samme \u0026ldquo;byggeklossmentaliteten\u0026rdquo; skal også gjelde for hvordan hver enkelt editor utvikles. Det skal gjøres enkelt for tjenesteeierene å selv både utvide editorer med ny funksjonalitet (plugins) der det gir mening, samt konfigurere den enkelte editor slik at den i størst mulig grad tilpasses både den enkelte tjenesteeiers- og tjenesteutviklers behov.\nFunksjonelle områder Under vises en klikkbar archimate-figur med de viktigste funksjonelle områdene (eller prosessene) i Designer.\n  Bygge brukergrensesnitt Det å raskt og effektivt kunne bygge brukervennlige brukergrensesnitt for en tjeneste er en sentral egenskap med tjenester 3.0.\nImplementering av editorer som skal understøtte dette vil også være en av de største tekniske utfordringene.\nI praksis så er dette et \u0026ldquo;live\u0026rdquo; designsystem, med følgende funksjonalitet:\n Velge eller endre overordnet layout / look \u0026amp; feel Definere én eller flere visninger for tjenesten  Definere navigasjon mellom visninger, må være bedre enn dagens sporvalg  Definere detaljert layout pr. side (responsivt design) Legge til gjenbrukbare webkomponenter i den detaljerte layouten  Konfiguering av den enkelte webkomponent  Kobling mot datamodell og server-side API (samme regler og valideringer skal fungere også uten brukergrensesnitt) Kobling mot tekster/oversettinger  Det vil mao. være behov for flere ulike editorer for å realisere all funksjonaliteten.\nEt viktig prinsipp er at de ulike editorene i størst mulig grad skal være løst koblet i forhold til hverandre, og konsekvensen av eventuelle avhengigheter skal vurderes nøye før de innføres.\n  Drag\u0026#39;n drop av web komponenter   Eksporter skjema som JSON  Trykk på knappen på toppen av skjemaet og det blir lastet ned en \u0026ldquo;form.json\u0026rdquo;-fil. Datastukturen i json dokumentet er likt det i felles redux-state:  { containers: [ { rows: [ { cols: [ { formElements: [\u0026quot;...\u0026quot;] } ] } ] } ] }  Her har vi da containers som inneholder rader, som inneholder kolonner, som igjen inneholder alle elementene. Denne strukturen er veldig nøstet og det jobbes med å få en flatere modell.  Bygge APIer På samme måte som at tjenester kan ha brukergrensesnitt (UX), så skal også en tjeneste kunne ha ett eller flere API, altså tekniske grensesnitt. Derfor må det være mulig å bygge og teste API\u0026rsquo;er, og det skal også være mulig å lage tjenester helt uten UX.\nEn potensiell fordel ved å kunne ha egne API\u0026rsquo;er pr. tjeneste er at dokumentasjon og definisjon av API\u0026rsquo;ene kan spisses og gjøres bedre og enklere å ta i bruk. Dette i kontrast til de generelle API\u0026rsquo;ene, der payload bare er en tekststreng som vil variere basert på hvilken TUL-tjeneste som benyttes.\n⚠️ Pga. ønske om bakoverkompatibilitet, så er det en ambisjon at dagens generelle API\u0026rsquo;er også skal fungere med 3.0-tjenester.\nHer er vi litt i tenkeboksen i forhold til hva som er mulig å få til, og hvordan dette kan fungere.\nSkape gjenbrukbare ressurser Et viktig poeng med tjenester 3.0 er at det skal legges til rette for at utviklere skal kunne utvikle ressurser som så kan gjenbrukes av både andre utviklere og fagpersoner som benytter Designer.\nGjenbrukbare ressurser lages typisk av tekniske utviklere ved bruk av kodeeditor.\n  Utvikling av en ny React web component   Web komponent Når man bygger brukergrensesnitt, så vil man benytte og konfigurere ferdiglagde webkomponenter. Komponentene vil være basert på React, og vil variere i størrelse og kompleksitet. Webkomponenter uvikles i kodeeditor.\nNoen grunnleggende krav:\n Komponentene skal være fleksible og kunne konfigureres (istedenfor at vi skal måtte utvikle mange like komponenter) Komponentene skal kunne kobles mot datamodell, og bruke tilgjengelige metadata i modellen Komponentene skal kunne kobles mot tekster Komponentene skal understøtte responsivt design og WCAG 2 AA Det skal være enkelt for tjenesteeier å legge til flere komponenter  Overordnet layout Når man bygger brukergrensesnitt så skal det være mulig å velge en overordnet layout (aka \u0026ldquo;look\u0026amp;feel\u0026rdquo;).\nF.eks. tjenestens kompleksitet (\u0026ldquo;informasjons-tetthet\u0026rdquo;) eller ønske om egen branding kan være grunner til at det er behov for å kunne velge blandt flere layouts.\n Create reuasable artifacts\n Look\u0026amp;feel Texts and translations Code lists Logic (C#? TypeScript? WebAssembly?) Data models (Seres?) API calls  Reuse these artifacts\n  F.eks. det å lage nye web componenter og layouts vil typisk være noe som tekniske utviklere gjør i kode-editorer.\nDet å sette disse sammen og konfigurere dem, er noe alle skal kunne gjøre.\nBruke APIer For å kunne understøtte \u0026ldquo;once-only\u0026rdquo;, så er det essensielt at det er enkelt å gjøre kall mot andre systemers API\u0026rsquo;er fra en 3.0-tjeneste. For å forenkle dette kan en mulig løsning være å støtte en type gjenbrukbar asset av type \u0026ldquo;API-plugins\u0026rdquo;, som gjør det enkelt å gjøre kall.\nEn ukjent faktor er den kommende \u0026ldquo;API-katalogen\u0026rdquo;, og hvilke egenskaper den vil tilby.\n Enkel bruk av API\u0026rsquo;er. Se på det som gjøres i NADOBE. Må bort fra dagens mappere  Dette er et område som ikke ble sett på i PoC.\nDefinere logikk Logikk som kjører i tjenesten. Er ekstremt viktig å få dette riktig, brukervennlig og fungerende på tvers av kanaler og på tvers av front-end og back-end.\nDefinere arbeidsflyt Definere arbeidsflyt for en tjeneste. Må være MYE kraftigere og mer fleksibel enn det som finnes i dagens løsning. Målsettingen er å muliggjøre at vi kan fjerne de ulike tjenestetypene i dagens løsning.\nTanken er at hvis man både kan gjøre henting av data (innsyn) og ta i mot meldinger, og gjøre en eller flere arkivering, så faller behovet for tjenestetyper bort. Behovet for samhandlingstjenesten forsvinner også.\nEn annen veldig spennende tanke er at dette også åpner opp for å \u0026ldquo;koble sammen\u0026rdquo; dialogen for brukeren, siden det da per. def ikke er noe å koble sammen. Hele dialogen er bare ulike steg i den samme tjenesten, og siden man også kan legge til API\u0026rsquo;er på en 3.0-tjeneste, så åpner det opp for at tjenesteeier modellerer flyten istedenfor at den må passe inn i et mønster som er bestemt av Altinn.\nStegene i en arbeidsflyt skal også være del av selve tjenesten som deployes, og ikke kjøre i plattformen slik som i dag. Dette åpner opp for stor grad av tilpasninger, gjør at hele flyten kan enhetstestes, og gjør at tjenesten i større grad blir immun mot påvirkning fra endringer i plattformen. En naturlig vei å gå vil være å benytte de samme mekanismene for å kunne gjenbruke og (re)definere arbeidsflyt og GUI per steg, som for GUI for tjenestene. Og da er vi veldig nærme det at arbeidsflyt ikke er noe eget, det er det samme som flyten internt i et skjema.\nEksempler på steg:\n Signering Hente prefill, gjøre oppslag mot eksterne data Gjøre eksterne valideringer via API Motta melding via API Gjøre ekstern signering Egendefinerte steg, med UX    Banalt enkel implementasjon av arbeidsflyt   Modellere data Tanken er at det å ha en modell for tjenestedataene vil gi en del fordeler, som f.eks. enhetlig validering på tvers av kanaler, enklere å automatisere testing, enklere å avdekke feil i regler, formell definisjon av dataformat for eksterne systemer, etc.\n Enkel modellering av data Innebygd erstatning for SERES ifbm. tjenesteutvikling Må støtte flere formater, sannsynligvis et JSON-format som default, og som kan konverteres til XML for de eksterne som foretrekker det For å forenkle konvertering av dagens XSD-baserte InfoPath-skjema, så må konvertering til/fra disse formatene støttes i runtime    Editor for enkel datamodellering   Tekstredigering og oversettelse Enkel of effektiv behandling av tekster og oversettinger er utrolig viktig i en tjenesteuviklingsløsning, og ikke minst enkel gjenbruk av tekster på tvers av flere tjenester.\nEditoren for tekster skal lagre hvert språk som enkel JSON-fil som effektivt kan jobbes direkte på i kodeeditorer eller konverteres til formater som eksterne oversettelsesverktøy benytter. Dette gjør også at 3.0 kan støtte vilkårlige språk, selv språk som ikke er støtte av Altinn-portalen.\n Definering av tekster med hierarkiske og lesbare nøkler Gjenbruk av tekster, internt på tvers av sider og i valideringer, og fra nivåene over tjenesten Oversetting Kunne legge til vilkårlige språk    Editor for oversetting av tekster   Automatisk testing Automatisert testing av alle 3.0-tjenester som utvikles vil gi en veldig positiv effekt, både på kvalitet og redusert tidsbruk over tid. Det å ha en datamodell gjør at det blir enklere å f.eks. automatisk generere opp initielle tester, og detektere tester som er blitt ugyldige.\n Legge opp til automatisert testing av alle tjenester Selenium / API ?  Dette er et område som ikke ble sett på i PoC.\n  Editor for automatisert testing   Konfigurering TODO\nDeployment 3.0-tjenester skal når som helst kunne deployes til produksjon, uten å måtte involvere Altinn-organisasjonen eller dens leverandører. Designer vil typisk gjøre API-kall mot Repositories for å få tilbake en liste over releaser, og så gjøre et API-kall mot Runtime for å initiere deploy.\n Selvbetjent deploy til testmiljøer og prod  Manuell testing Samme Runtime som vil kjøre i altinn.no vil også benyttes for testing av tjenester i Designer. Dette betyr at enhetstesting av UX og API\u0026rsquo;er vil gi stor grad av sikkerhet, siden det er samme runtime-koden som vil kjøre både i prod og under utvikling. En annen positiv effekt er at mer tekniske utviklere faktisk kan gjøre realistisk lokal debugging og stepping i runtime-koden.\n"
},
{
	"uri": "https://docs.altinn.studio/documentation/repositories/data/form-layout/",
	"title": "FormLayout.json",
	"tags": ["tjenester 3.0", "dataformat"],
	"description": "Beskrivelse av format for skjema-layout",
	"content": " Overordnet \u0026lsquo;FormLayout.json\u0026rsquo; beskriver strukturen til et skjema.\nFormat \u0026lsquo;FormLayout.json\u0026rsquo; er oppdelt i tre objekter:\n Components: beskriver komponentene skjema består av og konfigurasjoner tilknyttet den komponenten som feks binding til datamodel. Containers: beskriver layout-containere som brukes i skjema, og konfigurasjoner tilknyttet disse som f.eks. om den representerer en repeterende gruppe Order: spesifiserer rekkefølgen containere og komponentenene inne i containerne skal ligge i.  Eksempel Under er et eksempel på hvordan layout filen kan se ut:\n \u0026quot;components\u0026quot;: { \u0026quot;a3569c64-2a54-493c-a2a2-213034ed9207\u0026quot;: { \u0026quot;component\u0026quot;: \u0026quot;Input\u0026quot;, \u0026quot;itemType\u0026quot;: \u0026quot;COMPONENT\u0026quot;, \u0026quot;title\u0026quot;: \u0026quot;25795.OppgavegiverNavnPreutfylt.Label\u0026quot;, \u0026quot;dataModelBinding\u0026quot;: \u0026quot;skattyterinfor.info.oppgavegiverNavnPreutfylt.value\u0026quot; }, \u0026quot;74b7ff77-a80b-45d4-8f4a-81d7a52e69c6\u0026quot;: { \u0026quot;component\u0026quot;: \u0026quot;Input\u0026quot;, \u0026quot;itemType\u0026quot;: \u0026quot;COMPONENT\u0026quot;, \u0026quot;title\u0026quot;: \u0026quot;25796.OppgavegiverAdressePreutfylt.Label\u0026quot;, \u0026quot;dataModelBinding\u0026quot;: \u0026quot;skattyterinfor.info.oppgavegiverAdressePreutfylt.value\u0026quot;, \u0026quot;hidden\u0026quot;: false }, \u0026quot;95ddc03a-282a-4ed3-b854-18a3921eec0f\u0026quot;: { \u0026quot;component\u0026quot;: \u0026quot;Input\u0026quot;, \u0026quot;itemType\u0026quot;: \u0026quot;COMPONENT\u0026quot;, \u0026quot;title\u0026quot;: \u0026quot;2.KontaktpersonNavn.Label\u0026quot;, \u0026quot;dataModelBinding\u0026quot;: \u0026quot;skattyterinfor.kontakt.kontaktpersonNavn.value\u0026quot; } }, \u0026quot;containers\u0026quot;: { \u0026quot;6eb99041-1ecc-4e83-9312-596a0802e728\u0026quot;: { \u0026quot;repeating\u0026quot;: false, \u0026quot;dataModelGroup\u0026quot;: null }, \u0026quot;760e9bad-b800-4361-8dce-71206a7fcfbb\u0026quot;: { \u0026quot;repeating\u0026quot;: false, \u0026quot;dataModelGroup\u0026quot;: null, \u0026quot;index\u0026quot;: 0 } }, \u0026quot;order\u0026quot;: { \u0026quot;6eb99041-1ecc-4e83-9312-596a0802e728\u0026quot;: [ \u0026quot;760e9bad-b800-4361-8dce-71206a7fcfbb\u0026quot;, \u0026quot;95ddc03a-282a-4ed3-b854-18a3921eec0f\u0026quot; ], \u0026quot;760e9bad-b800-4361-8dce-71206a7fcfbb\u0026quot;: [ \u0026quot;a3569c64-2a54-493c-a2a2-213034ed9207\u0026quot;, \u0026quot;74b7ff77-a80b-45d4-8f4a-81d7a52e69c6\u0026quot; ] }  "
},
{
	"uri": "https://docs.altinn.studio/documentation/repositories/functional/",
	"title": "Repositories - Funksjonelt",
	"tags": ["tjenester 3.0"],
	"description": "Funksjonalitet for lagring og versjonering av tjenester i Git-repositories samt funksjonalitet for application lifecycle management.",
	"content": "   Eksempel-repository for tjenesten \u0026#34;Starte Enkeltpersonforetak\u0026#34;   \u0026ldquo;Altinn Repositories\u0026rdquo; er en frittstående Git versjonskontroll og Application Lifecycle Management-løsning, som både Designer, kodeeditorer og andre eksterne verktøy vil benytte som back-end og felles sted for å lagre og versjonere tjenestene som utvikles.\nRepositories har et GitHub-lignende brukergrensesnitt og både Git og REST-baserte tekniske grensesnitt.\n  Git muliggjør at flere verktøy kan jobbe mot samme tjeneste-repository   Det vil være en omfattende jobb å forsøke å utvikle en Git + ALM løsning på egen hånd, ref. all funksjonaliteten som behøves.\nHeldigvis finnes det flere open source \u0026ldquo;GitHub-kloner\u0026rdquo; som vi kan benytte, og blant dem virker Gitea å være mest lovende (uttales som /ɡɪ’ti:/ - \u0026ldquo;gitty\u0026rdquo;). Bilder fra Gitea benyttes som eksempler videre i denne dokumentasjonen.\nKildekoden for Repositories ligger i VSTS\rhttps://altinn.visualstudio.com/tjenester3.0/_git/AltinnCore\r\rFunksjonalitet i \u0026ldquo;Repositories\u0026rdquo; Repositories inneholder et repository med versjonerte filer for hver 3.0-tjeneste. Eksempel på typer filer som en \u0026ldquo;3.0-tjeneste\u0026rdquo; vil kunne bestå av er kode, tester, web-komponenter, layouts og stiler, oversettinger, arbeidsflyt og konfigurasjon.\nRepositories vil tilby funksjonalitet rundt den enkelte 3.0-tjeneste, og eksponere funksjonaliteten via både brukergrensesnitt og et REST-API som er en klone av GitHub sitt v3 API-format. Dette er positivt da det finnes andre verktøy som også støtter dette API-formatet, og da det kan forenkle det å kunne erstatte Gitea som back-end med andre liknende Git-systemer.\n  3.0 Tjeneste Repository som representerer en \u0026ldquo;3.0-tjeneste\u0026rdquo;, og inneholder alle filer som tjenesten består av.\nHver utgave av en tjeneste vil leve i sin egen mappe, slik at ett repository kan inneholde èn eller flere utgaver av den samme tjenesten.\nRepository management Håndtering av repositories er en kjerneaktivitet, da hver tjeneste som utvikles vil lagres i sitt eget repository.\n Create/delete repository Link to repository Rename repository Fork repository  Muliggjør at man kan ha et \u0026ldquo;master\u0026rdquo;-repository med felles tjenester som flere andre kan benytte, slik som dagens \u0026ldquo;master-tjenester\u0026rdquo; bare mye kraftigere Muliggjør også at utviklere kan lage som egen kopi og teste ut nye muligheter og løsninger på sitt eget område uten å påvirke originalen  List repositories Download/upload files Download repo Create files and folders Read/edit files Rename files Delete files View raw file Link to file     Opprette et nytt repository     Enkelt å opprett fork     Ny fork (kopi) av en tjeneste   Dokumentering Det er viktig å ha god støtte for å dokumentere tjenestene man utvikler, slik at det vil være enkelt for andre personer på teamet å bidra. Det er derfor ønskelig å ha innebygd Wiki-funksjonalitet med støtte for å editere i markdown, slik som i Altinn docs og AltinnPedia.\n Wiki  Add/edit/delete pages Markdown editing Link to specific wiki page Support for other external wikis Emojis  Markdown editing  Preview Fullscreen Side-by-side     Wiki   Versjonering Hver eneste fil som en 3.0-tjeneste består av skal ha full versjonshistorikk, uavhengig av om man jobber mot filene via Designer eller eksternt og distribuert/lokalt i en kodeeditor på egen maskin. Repositories sitt versjonskontrollsystem, som er basert på Git, er laget nettopp med tanke på dette.\n Version history of all files, artifacts, code and configuration  Link to each change with a unique id Link to each changed file Link to who did the change Highlight the last change done in the repository Time of change Comments/messages  Diff between versions    Versjonshistorikk for hver eneste fil     Diff for hver eneste fil i nettleser     En utvikler kan se samme diff og versjonshistorikk lokalt i sin egen editor   Release management En svært viktig egenskap når man utvikler programvare (noe som 3.0-tjenester er) er å kunne tagge ulike versjoner, og kunne gå tilbake og teste eller patche en tidligere versjon hvis man ønsker det. Det er også viktig å kunne se alt som har endret seg mellom versjonene.\nSiden Git benyttes for versjonering, så vil en release/tag som opprettes peke på en eksakt versjon av hver eneste fil som en 3.0-tjeneste består av, og man kan enkelt se hva som er endret.\n Create tags for the 3.0 service Link to tags Create/delete releases Link to releases Marking of pre-releases Time of release creation User that triggered the release Download zipped files of release Browse content of a given tag/release    Releases som er opprettet for en 3.0-tjeneste     Man kan enkelt browse repository \u0026#34;tilbake i tid\u0026#34;   QA En QA-prosess for godkjenning av endringer basert på branching og pull requests, vil for større teams kunne være mulig. Dette er i tråd med hvordan programvare utvikles, inkludert selve Altinn.\nBacklog management Som for all annen programvareutvikling, så vil hver 3.0-tjeneste typisk ha en egen backlog med bugs, forbedringer, fremtidige features, etc. som tjenesteutviklerne vil jobbe mot. Dette er en sentral del av Application Lifecycle Management.\n Create/close issues pr. 3.0 service  Time of creation Who  Filter issues by open/closed Add labels  Filter issues by label  Assign to milestone  Filter issues by milestone  Assign to user  Filter issues by assignee  Markdown editing Discussions Add files to issue Notifications when issues change Issues search List issues     Backlog med issues     Issue eksempel     Milepæler er en fin måte å sette scope for fremtidige releaser, og se fremgang     Labels gjør det enkelt å kategorisere og filtrere issues   Org management Organisasjoner er typisk tjenesteeiere, men i 3.0 er det ikke noe i veien for at konsulenthus som bedriver tjenesteutvikling også kan ha sine egne organisasjoner. I en organisasjon så kan man gi tilganger til brukere, og man kan opprette teams med tilgang til en eller flere 3.0-tjenester.\nDet å håndtere organisasjonen, som alt annet, skal være 100% selvbetjent.\n Create/delete organizations  Name/shortname URL Logo  List organizations Link to organization Create repository for organization ref. repository management Add/remove teams in organization List teams in organization Add/remove users in organization List all users in organization Add/remove users in teams List users in teams     Liste over organisasjoner     Repositories tildelt team ENK     Innstillinger for team ENK   Brukerstyring Brukerne i denne sammenheng er tjenesteutvklerne. Det å håndtere organisasjonen skal være helt selvbetjent.\n Add/remove users Name Avatar Add/remove users to/from teams \u0026ldquo;Starring\u0026rdquo; of favorite repositories List of user repositories (including forks) Activity log for user Workspace for user (dette er veldig viktig, betyr at tjenesteutviklere kan \u0026ldquo;leke seg\u0026rdquo; på sitt eget område)     En ny tjenesteutvikler har fått skrivetilgang     Tjenesteutviklere har egen profil og aktivitetslogg   Søke Søk er viktig for å finne frem, og skal være bygd inn i løsningen.\n Repositories Issues Edits Users Organizations    Søk med sortering   Tilgangsstyring Det skal være mulig å styre tilgang til repositories, les/skriv/admin, teams, brukere, samt opprette private repos.\n Access to 3.0 services (read/write) Access to orgs Users access Private/public service-repos Administrator AM/AD-integration API access    Gitea tilbyr API med swagger   Trigge hendelser I dagens hverdag, med bruk av Slack og andre systemer ifbm. utvikling, så er det viktig at \u0026ldquo;Repositories\u0026rdquo; kan trigge hendelser i andre systemer, f.eks. poste til en Slack-kanal når en endring skjer i en 3.0-tjeneste.\n Trigger events at org-level Trigger events at 3.0 service-level    WebHook mot Slack   Logge inn Tjenesteutviklere og andre interessenter skal kunne logge inn og få tilgang til organisasjoner og 3.0-tjenester.\n Login page CAPTCHA? Forgot password? 2-factor auth External authentication    Login   Sende varslinger  Send notifications to users based on events or mentions User can control the notifications to receive Users can follow other users and subscripe to issues    Login   "
},
{
	"uri": "https://docs.altinn.studio/guide/first-time-setup/",
	"title": "Første gangs oppsett",
	"tags": ["guide"],
	"description": "Sett opp bruker i AltinnStudio for første gangs bruk.",
	"content": " Sett opp bruker i altinn.studio for første gangs bruk.\nRegistrer ny bruker MERK: Kun nødvendig dersom bruker ikke allerede er opprettet.\n\r Velg Registrer i topp-menyen. Fyll ut detaljer og registrer bruker.    Registrer ny bruker   Opprett organisasjon MERK: Kun nødvendig dersom ønsket organisasjon ikke allerede er opprettet.\n\r Velg +-menyvalg i toppmenyen Velg New Organization Fyll ut navn på organisasjon og opprett.    Lag ny organisasjon   Opprett repository for tjeneste  Velg +-menyvalg i toppmenyen Velg New Repository Velg organisasjon som eier Fyll ut navn på repository Opprett tjeneste  Tjenesten er nå synlig på startsiden.\n  Lag nytt repository   Klone tjenesten til lokal mappe  Fra startsiden, gå til repoet Velg clone service  Dersom Applikasjonsnøkkel ikke er lagt inn vil du bli bedt om å legge inn dette, se her. Når dette er fullfør, start fra punkt 1.  Tjenesten er nå klar til bruk.  Legge til Applikasjonsnøkkel  Velg Opprett ny nøkkel (nytt vindu). Velg Generate new token og gi din token et hvilket som helst navn. Kopier den generte applikasjonsnøklen. Gå tilbake til forrige fane. Lim inn applikasjonsnøklen og trykk på Lagre App Token Applikasjonsnøkkel er nå lagt til, og tjenesten kan klones.    Klone tjenesten, inkl. legge til applikasjonsnøkkel   "
},
{
	"uri": "https://docs.altinn.studio/documentation/repositories/data/instantiationhandler/",
	"title": "InstansiationHandler.cs",
	"tags": ["tjenester 3.0", "dataformat"],
	"description": "Beskrivelse av format for InstansiationHandler",
	"content": " Arbeidet med POC har føreløpig ikke konkludert angående bruk av denne filen. Vil jobbes videre med i MVP.\n\rOverordnet \u0026lsquo;InstansiationHandler.cs\u0026rsquo; er en C# klasse hvor tjenesteutvikler kan plassere forretningslogikk som hånderer instansiering av en tjeneste.\nFormat Standard C# kode som kan gjøre bortimot alt.\nUavklart: Hvordan Tjenester 3.0 skal validere/verifisere denne logikken.\nUtvikling Under opprettelse av en tjeneste vil en tom InstansiationHandler opprettes.\nHypotese: Tjenesteutvikler editerer på denne filen via Altinn Studio eller Visual Studio Code\n"
},
{
	"uri": "https://docs.altinn.studio/technology/react/codearchitecture/",
	"title": "Kodearkitektur",
	"tags": ["tjenester 3.0", "React", "Redux", "Reselect", "Selector"],
	"description": "Kodearkitektur for React og tilhørende teknologi",
	"content": " Bruk av Redux Store i Containere og Components. Kort oppsummert (TL;DR) Send \u0026ldquo;ID\u0026rdquo; eller andre identifikatorer via Props til komponenten og la komponenten hente data fra Redux Store.\nUtfordring (Why?) Hvis en del av Redux Store sendes som Props så vil komponenten re-rendres ved endringer av denne Prop/Store. Det er ønskelig at komponenter ikke rendrer unødvendig.\nRe-rendring trigges av…  Endring av Props. Endring av State som endrer Props.  Kilder  Redux best practices Common pitfalls  Filtrering av Redux Store i mapStateToProps() ved help av Selector Kort oppsummert (TL;DR) Bruk Memoized Selector for å filtrere Redux Store til Props når Redux Store er stor.\nUtfordring (Why?) Hver gang (en del av) Redux Store endrer seg vil funksjoner som filtrerer ut deler av Redux Store kjøres. Hvis Redux Store (state tree) er stor (mange endringer) eller funksjonen er krevende kan det føre til ytelsesproblemer.\nLøsningen En Selector funksjon, med bruk av \u0026ldquo;reduxjs/reselect\u0026rdquo; vil kun kjøres når en definert del av Redux Store endres (eks \u0026ldquo;state.del.underdel\u0026rdquo;).\nKilder  Reselect Comparing shouldComponentUpdate() and Reselect  Eksempel Selector Dette er en enkel Selector uten mye logikk og filtrering. Jo større logikk i \u0026ldquo;filtreringen\u0026rdquo; jo mer \u0026ldquo;sparer\u0026rdquo; man i ytelse.\nimport { createSelector } from 'reselect'; /** * Reselect version */ const formDataSelector = (state: any, providedProps: any) =\u0026gt; { console.log('formdata selector', providedProps.id); return state.formFiller.formData; }; const dataModelBindingSelector = (state: any, providedProps: any) =\u0026gt; { console.log('datamodelBindingSelector'); return state.formDesigner.layout.components[providedProps.id].dataModelBinding; }; const getFormData = () =\u0026gt; { console.log('getFormData() is trigggered, selector is created'); return createSelector( [formDataSelector, dataModelBindingSelector], (formData: any, dataModelBinding: any) =\u0026gt; { console.log('ouput selector running', formData); if (!formData) return ''; if (!formData[dataModelBinding]) return ''; return formData[dataModelBinding]; }, ); }; export const makeGetFormDataSelector = getFormData; // Alternativt en enda enklere variant, som er implementert p.t. import { createSelector } from 'reselect'; const formDataSelector = (state: any, providedProps: any) =\u0026gt; { return state.formFiller.formData[state.formDesigner.layout.components[providedProps.id].dataModelBinding]; }; const getFormData = () =\u0026gt; { return createSelector( [formDataSelector], (formData: any) =\u0026gt; { if (!formData) return ''; return formData; }, ); }; export const makeGetFormDataSelector = getFormData;  Implementasjon i mapStateToProps const makeMapStateToProps = () =\u0026gt; { const GetFormDataSelector = makeGetFormDataSelector(); const mapStateToProps = (state: IAppState, props: IProvidedProps): IFormElementProps =\u0026gt; ({ id: props.id, formData: GetFormDataSelector(state, props), }); return mapStateToProps; }; export const FormComponentWrapper = connect(makeMapStateToProps)(FormComponent);  makeMapStateToProps implementeres slik at Selectoren kan gjenbrukes på tvers av flere komponenter.\nHigher-Order Components Higher-Order component er en funksjon som tar imot en component og returnerer et nytt komponent med ekstra funksjoner, eller ekstra data. Et eksempel på dette er connect-funksjonen fra \u0026ldquo;redux\u0026rdquo;, som tar imot en funksjon som velger redux-state data, og en komponent som disse dataene skal sendes til.\nHvorfor? Ved å wrappe induviduelle komponenter i en higher-order component, vil vi få enklere kode mtp. at en funksjon håndterer endringer i skjemaet på kun en komponent, i motsetning til å ha en funksjon som håndterer alle endringer i skjemaet. Dette vil også gi tredjeparts-utviklere en enklere måte å skrive egne funksjoner for håndtering av endringer i deres komponenter.\nEksempel på bruk i Altinn Studio Når bruker lager en tjeneste med 3. parts komponenter vil vi wrappe disse komponentene i en Higher Order Component som gir den en callback funksjon som tar imot data som komponenten har, og kjøre en redux-action som oppdaterer data i redux-state. Uten at utvikleren av 3. parts komponenten må sette seg inn i hvilke actions som skal kjøres. Dette gir også bedre mulighet for å gjennbruke 3. parts komponenter.\nEksempel på Higher Order Component const FormComponentWrapper = (WrappedComponent, ...) =\u0026gt; { // Feel free to do anything that will enhance the components properties // Return a react component return class extends React.Component { // Add functions for handling changing of data handleDataChange = (dataModelBinding, data) =\u0026gt; { // fire off an action for adding the changed data to redux state } render() { return( \u0026lt;WrappedComponent onFormDataChange={this.handleDataChange} {...props}/\u0026gt; ); } } }  Kilder  Higher-Order component  Normalized Redux Store Kort oppsummert (TL;DR)  Hver datatype får sin egen \u0026ldquo;tabell\u0026rdquo; i State. Hver \u0026ldquo;tabell\u0026rdquo; skal lagre individuelle \u0026ldquo;data\u0026rdquo; som objekter, med IDer som nøkler og \u0026ldquo;dataen\u0026rdquo; som verdi. Referansene til de individuelle \u0026ldquo;dataene\u0026rdquo; lagres ved å lagre IDene. Array med IDene brukes for å indikere sortering.  Utfordring (Why?)  Kompliserte reducers for å oppdatere nøstet state struktur. Unødvendig re-rendering grunnet oppdatering av nøstede objekter.  Eksempel { posts : { byId : { \u0026quot;post1\u0026quot; : { id : \u0026quot;post1\u0026quot;, author : \u0026quot;user1\u0026quot;, body : \u0026quot;......\u0026quot;, comments : [\u0026quot;comment1\u0026quot;, \u0026quot;comment2\u0026quot;] }, \u0026quot;post2\u0026quot; : { id : \u0026quot;post2\u0026quot;, author : \u0026quot;user2\u0026quot;, body : \u0026quot;......\u0026quot;, comments : [\u0026quot;comment3\u0026quot;, \u0026quot;comment4\u0026quot;, \u0026quot;comment5\u0026quot;] } }, allIds : [\u0026quot;post1\u0026quot;, \u0026quot;post2\u0026quot;] }, comments : { byId : { \u0026quot;comment1\u0026quot; : { id : \u0026quot;comment1\u0026quot;, author : \u0026quot;user2\u0026quot;, comment : \u0026quot;.....\u0026quot;, }, \u0026quot;comment2\u0026quot; : { id : \u0026quot;comment2\u0026quot;, author : \u0026quot;user3\u0026quot;, comment : \u0026quot;.....\u0026quot;, }, \u0026quot;comment3\u0026quot; : { id : \u0026quot;comment3\u0026quot;, author : \u0026quot;user3\u0026quot;, comment : \u0026quot;.....\u0026quot;, }, \u0026quot;comment4\u0026quot; : { id : \u0026quot;comment4\u0026quot;, author : \u0026quot;user1\u0026quot;, comment : \u0026quot;.....\u0026quot;, }, \u0026quot;comment5\u0026quot; : { id : \u0026quot;comment5\u0026quot;, author : \u0026quot;user3\u0026quot;, comment : \u0026quot;.....\u0026quot;, }, }, allIds : [\u0026quot;comment1\u0026quot;, \u0026quot;comment2\u0026quot;, \u0026quot;comment3\u0026quot;, \u0026quot;commment4\u0026quot;, \u0026quot;comment5\u0026quot;] }, users : { byId : { \u0026quot;user1\u0026quot; : { username : \u0026quot;user1\u0026quot;, name : \u0026quot;User 1\u0026quot;, }, \u0026quot;user2\u0026quot; : { username : \u0026quot;user2\u0026quot;, name : \u0026quot;User 2\u0026quot;, }, \u0026quot;user3\u0026quot; : { username : \u0026quot;user3\u0026quot;, name : \u0026quot;User 3\u0026quot;, } }, allIds : [\u0026quot;user1\u0026quot;, \u0026quot;user2\u0026quot;, \u0026quot;user3\u0026quot;] } }  Kilder  Normalizing State Shape  "
},
{
	"uri": "https://docs.altinn.studio/guide/service-creation/",
	"title": "Lag en utgave",
	"tags": ["guide"],
	"description": "Dokumentasjon av funksjonalitet tilgjengelig for å lage en utgave",
	"content": " Oversikt over eksisterende utgaver finner man ved å gå inn på tjenesten, f.eks. fra startsiden.\nNy utgave lages fra tjenestesiden:\n  Lage ny utgave   Last opp datamodell Datamodellen definerer hva slags data som skal knyttes til tjenesten. Per nå støttes datamodell i form av XSD (Seres eller OR).\nDatamodellen lastes opp på utgaven. Dersom datamodell ikke er lastet oopp før vil det stå en melding om dette på hovedsiden til utgaven. Datamodell kan også lastes opp/sees fra Modellering-siden til utgaven.   Legg til datamodell   Lag skjema med UI editor UI editor ligger under UX i toppmenyen for utgaven, under Designer   UI editor   Skjemaelementer legges til ved å velge type element fra oversikten til venstre. Visning av skjema ligger på høyre side.\n  UI editor - oversikt   Redigere egenskaper til skjemaelement Skjemaelementene har forskjellige egenskaper som kan redigeres. For å få opp redigeringsvindu kan man velge eksisterende elementer i visningen av skjema på høyre side. Vindu med egenskaper kommer automatisk opp når nytt skjemaelement legges til.\nVisningstekst Alle skjemaelementer har en tekst knyttet til seg som beskriver forventet innhold i elementet. Tekst velges fra nedtrekksliste over tilgjengelige tekster, se avsnitt om tekster under.\n  Visningstekst   Feltegenskaper  Required: Er det påkrevd med verdi i feltet? Disabled: Skal feltet være skrivebeskyttet?  OBS! Feltegenskapene over er per nå kun tilgjengelige på Input-elementer.\n  Feltegenskaper   Forhåndsdefinerte valg For skjemaelementer som har forhåndsdefinerte valg (f.eks. nedtrekksliste og radioknapper) kan disse valgene konfigureres. Merk at feltene for å konfigurere dette ikke er tilgjengelige for skjemaelementer som ikke har forhåndsdefinerte valg.\n  Forhåndsdefinerte valg   Knytning mot datamodell Skjemaelementer som skal ta input fra sluttbruker kan knyttes mot felt i datamodell. Det som sluttbruker skriver inn i skjemaelementet vil da mappes til det definerte feltet i datamodellen. Knytning mot felt i datamodell gjøres via nedtrekksliste som viser tilgjengelige felt i datamodell.\n  Knytning mot datamodell     UI editor - redigere egenskaper for skjemaelement    Legg til tekster Tekster hentes inn både fra et fellesbibliotek tilgjengelig for alle, og evt. også fra fellesbibliotek for den enkelte tjenesteeier. Det er også mulig å legge inn egne tekster knyttet til en utgave, eller å overstyre tekster fra fellesbibliotek for en utgave.\nLegge til, redigere eller overstyre tekster for en utgave I toppmenyen, under UX velges menyvalget Tekster for å komme til tekstredigeringsverktøyet. Dette kan også nås ved å velge fanen Tekster dersom en allerede er inne i UI editoren.\nTekster er definert med en nøkkel (unik for hver enkelt tekst) og en visningstekst. Tekster kan legges inn på flere språk.\n  UI editor - redigere tekster   Legg til kodeliste En kodeliste er en forhåndsdefinert liste med nøkler (koder) og visningstekster. En kode i kodelisten kan knyttes til opp til 3 visningstekster. Når kodeliste knyttes til en skjemakomponent velger man hvilken visningsverdi som skal brukes. Kodelister knyttes typisk mot en nedtrekksliste.\nKodelister hentes både fra felles bibliotek tilgjengelig for alle, evt. felles kodelister for den enkelte tjenesteeier, og kodelister som er definert på en utgave.\nRedigere eller endre kodeliste for en utgave I toppmenyen, under Modellering velges menyvalget kodelister.\nFor å redigere eksisterende kodeliste, velg ønsket kodeliste fra listen.\nFor å lage ny kodeliste, velg Lag ny kodeliste.\n  UI editor - redigere kodelister   Knytte en kodeliste mot skjemakomponent  Legg til ønsket skjemakomponent (f.eks. nedtrekksliste) i UI-editor, pass på å knytte denne mot felt i datamodellen. Velg Add connection under Api connections på venstre side Velg Code list Velg ønsket kodeliste fra listen med tilgjengelige kodelister. Velg Add new mapping Velg hvilken av de 3 tekstene knyttet til koden (value1/value2/value3) som skal vises Velg samme felt i datamodellen som skjemaelementet ble knyttet til Lagre, da lukker vinduet for konfigurering av kodelister seg. Lagre skjema  Når utgaven testes vil de faktiske verdiene fra kodelisten populeres inn i nedtrekkslisten.\n  UI editor - konfigurere knytning til kodeliste   MERK: Per nå er det ingen språkstøtte for kodelister. Denne dokumentasjonen oppdateres når dette er tilgjengelig.\n\rLegg til kall til eksterne API Kall til eksterne API kan brukes til å hente inn informasjon fra kilder utenfor \u0026ldquo;tjenesten\u0026rdquo;. Tilgjengelige API hentes inn fra felles bibliotek.\nDet er implementert støtte for 2 typer API. Under beskrives hva som må settes opp for de forskjellige typene.\nAPI som tar inn input fra skjema, og som returnerer verdi som populeres i felt i skjema.  Legg til ønskede skjemakomponenter (f.eks input), en som input til API og en til å vise resultat, i UI-editor. Pass på å knytte til datamodell. Velg Add connection under API connections på venstre side. Velg External API Velg ønsket API fra listen. Legg til klientparametre (ClientParam) - dette er input fra skjema som sendes til API.  Legg til eksempelverdi for å teste API-kallet Legg til felt i datamodell, dette må være det samme feltet som komponent for input er knyttet mot i skjema.  Legg til ev. tilleggsparametre (MetaParam) - dette er input som sendes til API som ikke kommer fra skjema. Test henting av data fra API ved å velge Fetch from API using parameters.  Respons vises i tekstfeltet under knappen  Velg Add new mapping Velg hvilket av objektene fra resultatet som skal brukes. Velg knytning til datamodell, dette må være likt som for den skjemakomponenten som skal vise resultatet. Lagre Lagre hele skjema Test at det fungerer ved å skrive inn gyldig verdi i skjemakomponenten med input til API\u0026rsquo;et, og se at resultatet vises i riktig skjemakomponent.    UI editor - konfigurere knytning til ekstern API   API som returnerer liste, tilsvarende kodeliste.  Legg til ønskede skjemakomponenter (f.eks input), en som input til API og en til å vise resultat, i UI-editor. Pass på å knytte til datamodell. Velg Add connection under API connections på venstre side. Velg External API Velg ønsket API fra listen. Legg til ev. tilleggsparametre (MetaParam) - dette er input som sendes til API som ikke kommer fra skjema. Test henting av data fra API ved å velge Fetch from API using parameters.  Respons vises i tekstfeltet under knappen  Velg Add new mapping Velg hvilket av objektene fra resultatet som skal brukes. Velg knytning til datamodell, dette må være likt som for den skjemakomponenten som skal vise resultatet. Lagre. Lagre hele skjema.  Verdiene lastes inn når skjemaet testes.\nRegler Legge til nye/redigere regler Tilgjengelige regler ligger i en javascript-fil og er tilgjengelige via Modellering -\u0026gt; Kode i toppmenyen. Velg filen RuleHandler.js. Regler legges under objektet ruleHandlerObject. Alle parametere som forventes som input må defineres i objektet ruleHandlerHelper.\nI eksempelet under er det definert to regler, en som tar inn 3 verdier og returnerer summen av disse (sum), og en som tar inn et fornavn og et etternavn og returnerer fullt navn (fullName).\nvar ruleHandlerObject = { sum: (obj) =\u0026gt; { obj.a = +obj.a; obj.b = +obj.b; obj.c = +obj.c; return obj.a + obj.b + obj.c; }, fullName: (obj) =\u0026gt; { return obj.first + ' ' + obj.last; } } var ruleHandlerHelper = { fullName: () =\u0026gt; { return { first: \u0026quot;first name\u0026quot;, last: \u0026quot;last name\u0026quot; }; }, sum: () =\u0026gt; { return { a: \u0026quot;a\u0026quot;, b: \u0026quot;b\u0026quot;, c: \u0026quot;c\u0026quot; } } }  Knytte regler mot felt i skjema  Legg til nødvendige komponenter i skjema. F.eks. for eksempelet sum trengs her 3 felter som input, i tillegg til ett felt som viser resultatet. Velg Add connection under Rule Connections. Velg ønsket regel (f.eks. sum i eksempelet). Oppgi knytning til datamodell for alle input-verdiene (disse må da matche med de knytningene som er satt opp på skjemakomponentene). Oppgi knytning til datamodell for resultatet (må matche med knytning som er satt opp på skjemakomponent). Lagre. Test at det fungerer ved å legge inn verdier i alle input-feltene og se at resultatet dukker opp i ønsket felt. Lagre skjema.  Dynamikk Vi definerer dynamikk som hendelser i skjemavisningen basert på brukers input. For eksempel ved at visse felter kun vises dersom bruker har oppgitt en gitt verdi et annet sted i skjema. Det er lagt opp til at man kan sette opp betingelser for når/hvordan slike hendelser skal skje.\nLegge til/redigere betingelser for dynamikk Tilgjengelige betingelser ligger i en javascript-fil og er tilgjengelige via Modellering -\u0026gt; Kode i toppmenyen. Velg filen RuleHandler.js. Regler legges under objektet conditionalRuleHandlerObject. Alle parametere som forventes som input må defineres i objektet conditionalRuleHandlerHelper.\nI eksempelet under er det definert tre betingelser:\n biggerThan10: sjekker om oppgitt verdi er større enn 10. smallerThan10: sjekker om oppgit verdi er mindre enn 10. lengthBiggerThan4: sjekker om lengden til en tekst er lengre enn 4.  var conditionalRuleHandlerObject = { biggerThan10: (obj) =\u0026gt; { obj.number = +obj.number; return obj.number \u0026gt; 10; }, smallerThan10: (obj) =\u0026gt; { obj.number = +obj.number; return obj.number \u0026gt; 10; }, lengthBiggerThan4: (obj) =\u0026gt; { if (obj.value == null) return false; return obj.value.length \u0026gt;= 4; } } var conditionalRuleHandlerHelper = { biggerThan10: () =\u0026gt; { return { number: \u0026quot;number\u0026quot; }; }, smallerThan10: () =\u0026gt; { return { number: \u0026quot;number\u0026quot; } }, lengthBiggerThan4: () =\u0026gt; { return { value: \u0026quot;value\u0026quot; } } }  Knytte betingelser for dynamikk mot felt i skjema  Legg til ønsket komponent som dynamikk skal knyttes mot. Velg Add connection under Conditional Rendering connections i venstre menyen i UI editor. Velg ønsket betingelse. Velg felt i datamodell som skal sjekkes. Velg hva du ønsker at skal skje med elementet dersom valgt metode returnerer true. Per nå støttes følgende operasjoner:  Show Hide  Velg felt i skjema som dynamikken skal knyttes mot. Lagre. Lagre skjema.  Dynamikken kan testes under testing av skjema, f.eks. gjennom Preview-funksjonaliteten.\n  UI editor - konfigurere betingelser for dynamikk   "
},
{
	"uri": "https://docs.altinn.studio/technology/react/",
	"title": "React",
	"tags": ["tjenester 3.0"],
	"description": "React",
	"content": "  Modulært rammeverk som lager komponenter som kan gjennbrukes flere steder i løsningen. Hvert React komponent har en tilstand som gir den data i henhold til hvor i applikasjonen brukeren er og hvilke handlinger som foretas. Vedlikeholdt av Facebook, under MIT lisens.  Slik react blir brukt i Tjeneste 3.0 Uten redux  Ved bruk av higher order components kan tilstand sendes fra rot-komponenten nedover i komponent-hierarkiet. Rot-komponenten håndterer alt av state, og sender callbacks ned i komponentene, slik at det er mulig og legge til, fjerne og endre komponeter.   Med redux  Ved bruk av redux vil vi ikke være like avhengig av higher order components, da alle komponenenter kan kobles til redux-state av appen, og kunne håndtere det å legge til, fjerne eller endre komponenter selv. Håndtering av state skjer igjennom Actions og Reducers, som Redux arkitektur anbefaler.   Lenker  Offisiell nettside\n Github\n  "
},
{
	"uri": "https://docs.altinn.studio/architecture/application/altinn-studio-apps/react-app/",
	"title": "Tjenester 3.0 - Runtime - Arkitektur",
	"tags": ["tjenester 3.0"],
	"description": "Beskrivelse av arkitektur for React App i Runtime",
	"content": " Arkitektur Tjeneste React App React App vil i runtime være en React applikasjon som bygges/pakkes basert på valgene som ble gjort av tjenesteutvikler.\nArkitekturen vil i utgangspunktet være lik på tvers av sluttbrukertjenester, men det kan være forskjeller på hvilke versjoner av rammeverk som det er bygget på.\nEn viktig føring for denne appen er at oppdateringer i rammeverk ikke automatisk skal påvirke React App for den aktuelle tjenesten. Derfor vil den bygges designtime og legges med selve tjenesten sammen med nødvendige rammeverk/referanser til rammeverk med en gitt versjon.\nTODO: Det er foreløpig ikke laget bygg av dette.\nFiguren nedenfor viser den overordnede arkitekturen som er valgt for React App.\n\nOverordnet konsept Det overordnede konseptet er at man har en konfigurasjonsfil som definerer hvilke komponenter et skjema skal bestå av og rekkefølgen på disse. Denne konfigurasjonsfilen blir generert av UX Designern i Altinn Studio når tjenesteutvikleren designer tjenesten og blir en del av ressursfilene som inkluderes i tjenestepakken.\nFormLayout.json lastes inn av React Appen sammen med selve dataene og annen konfigurasjon til en tjeneste når applikasjonen starter.\nApplikasjonen rendrer komponentene som er definert i designer FormLayout.. Dette skjer ved at Preview komponenten løper gjennom design filen og kaller FormComponent for hver enkelt element i listen. FormComponent rendrer deretter komponenter som tekstbokser eller nedtrekkliste avhengig av hvilken type komponent.\nReact komponentene React komponentene som kan velges i UX-designer er alle React komponenter som vil rendes basert input til FormComponenten.\nDisse er for øyeblikket\n HeaderComponent InputComponent CheckboxContainerComponent TextAreaComponent RadioButtonContainerComponent DropdownComponent FileUploadComponent  Disse er alle basert på Reactstrap rammeverket. TODO: Her skal vi skrive ut Reactstrap\nHver enkel komponent har definert et sett med input data (props) som den forventer som input. Det er opp til den overliggende komponenten å skaffe tilveie disse. Dette kan være verdier fra state eller egne input data.\nReact legger opp til React komponetene har en metode for å mappe verdier fra state til props for de komponentene som krever.\nNår sluttbruker gjør endringer i skjema (f.eks fyller inn noe i en tekstboks) vil den trigge en event som igjen trigger Actions som håndteres av forskjellige dispatchers\n /** * This is the event handler that triggers the Redux Actions * that is sendt to the different Action dispatcher. * This event handler is used for all form components rendered from this */ public handleComponentDataUpdate = (callbackValue: any): void =\u0026gt; { if (!this.props.component.dataModelBinding) { return; } FormFillerActionDispatchers.updateFormData( this.props.id, callbackValue, this.props.dataModelElement, ); ExternalApiActionDispatchers.checkIfApiShouldFetch(this.props.id, this.props.dataModelElement, callbackValue); RuleConnectionActionDispatchers.checkIfRuleShouldRun(this.props.id, this.props.dataModelElement, callbackValue); }  Redux Redux benyttes for å lagre state i applikasjonen. I tjenester 3.0 finnes det flere data store.\nFor runtime er det følgende Redux store som benyttes\nAppConfigState Inneholder informasjon om hvilken modus applikasjonen har.\nexport interface IAppConfigState { designMode: boolean; }  DataModelState Inneholder informasjon om alle elementene i datamodellen. Basert på JSON generert fra XSD\nexport interface IDataModelState { model: IDataModelFieldElement[]; fetching: boolean; fetched: boolean; error: Error; }  RuleModelState Inneholder definerte regler\nexport interface IRuleModelState { model: IRuleModelFieldElement[]; fetching: boolean; fetched: boolean; error: Error; }  TextResourceState Inneholder alle tekstressurser.\nexport interface ITextResourcesState { resources: ITextResource[]; language: string; fetching: boolean; fetched: boolean; error: Error; }  FormFillerState Inneholder all skjemadata og eventuelle valideringsfeil.\nexport interface IFormFillerState { formData: any; validationErrors: any; }  Reducer Redux reducers har til oppgave å oppdatere de forskjellige stores. Det er en reducer for hver enkel store. Følgende er definert\n formFillerReducer - Ansvarlig for å oppdatere FormFillerState errorReducer - Ansvarlig for å oppdatere *  Reducerne lytter etter Actions som blir dispatchet\nAction Types Action Types er type definisjoner på hendelser\nEksempler:\n// All update form data actions export const UPDATE_FORM_DATA: string = `${moduleName}.UPDATE_FORM_DATA`; export const UPDATE_FORM_DATA_FULFILLED: string = `${moduleName}.UPDATE_FORM_DATA_FULFILLED`; export const UPDATE_FORM_DATA_REJECTED: string = `${moduleName}.UPDATE_FORM_DATA_REJECTED`;  Action Actions er hendelser som kan bli trigget av de forskjellige komponentene. En Action inneholder minimum typen av en Action, men kan også inneholde andre metadata rundt hendelsen.\nEksempel:\nexport interface IUpdateFormDataAction extends Action { formData: any; componentID: string; dataModelElement: IDataModelFieldElement; }  Action Creators Action Creators lager actions\nEksempel:\nexport function updateFormDataAction( componentID: string, formData: any, dataModelElement: IDataModelFieldElement, ): IUpdateFormDataAction { return { type: ActionTypes.UPDATE_FORM_DATA, formData, componentID, dataModelElement }; }  Action Dispatcher Action dispatcher\nRedux-Saga Redux-Saga er Middleware rammeverk som benyttes for å gjøre asynkrone kall mot API i løsningen. Dette er f.eks uthenting av skjemdata og lagring av skjemadata.\nHver enkel Saga som defineres definerer metoder som utfører forskjellige typer oppgaver. Dette kan f.eks være lagring av skjemdata eller uthenting av skjemadata.\nDet er definert forskjellige Saga for de forskjellige funksjonelle områdene. Sagaene er\n appData - Ansvarlig for å hente ut regler, tekstressurser og datamodell externalApiSaga - Funksjonalitet rundt externe APi formFillerSagas - funksjonalitet knyttet til uthenting og lagring av skjemadata  For hver Saga metode knyttes det lytttere som lytter til Actions. Det er dette som trigger at de nødvendige kallene skjer.\n/** * Define a listener for the UPDATE_FORM_DATA event */ export function* watchUpdateFormDataSaga(): SagaIterator { yield takeLatest(FormFillerActionTypes.UPDATE_FORM_DATA, updateFormDataSaga); }  "
},
{
	"uri": "https://docs.altinn.studio/architecture/application/altinn-studio/react-app/",
	"title": "Tjenester 3.0 - Runtime - Arkitektur",
	"tags": ["tjenester 3.0"],
	"description": "Beskrivelse av arkitektur for React App i Runtime",
	"content": " Arkitektur Tjeneste React App React App vil i runtime være en React applikasjon som bygges/pakkes basert på valgene som ble gjort av tjenesteutvikler.\nArkitekturen vil i utgangspunktet være lik på tvers av sluttbrukertjenester, men det kan være forskjeller på hvilke versjoner av rammeverk som det er bygget på.\nEn viktig føring for denne appen er at oppdateringer i rammeverk ikke automatisk skal påvirke React App for den aktuelle tjenesten. Derfor vil den bygges designtime og legges med selve tjenesten sammen med nødvendige rammeverk/referanser til rammeverk med en gitt versjon.\nTODO: Det er foreløpig ikke laget bygg av dette.\nFiguren nedenfor viser den overordnede arkitekturen som er valgt for React App.\n\nOverordnet konsept Det overordnede konseptet er at man har en konfigurasjonsfil som definerer hvilke komponenter et skjema skal bestå av og rekkefølgen på disse. Denne konfigurasjonsfilen blir generert av UX Designern i Altinn Studio når tjenesteutvikleren designer tjenesten og blir en del av ressursfilene som inkluderes i tjenestepakken.\nFormLayout.json lastes inn av React Appen sammen med selve dataene og annen konfigurasjon til en tjeneste når applikasjonen starter.\nApplikasjonen rendrer komponentene som er definert i designer FormLayout.. Dette skjer ved at Preview komponenten løper gjennom design filen og kaller FormComponent for hver enkelt element i listen. FormComponent rendrer deretter komponenter som tekstbokser eller nedtrekkliste avhengig av hvilken type komponent.\nReact komponentene React komponentene som kan velges i UX-designer er alle React komponenter som vil rendes basert input til FormComponenten.\nDisse er for øyeblikket\n HeaderComponent InputComponent CheckboxContainerComponent TextAreaComponent RadioButtonContainerComponent DropdownComponent FileUploadComponent  Hver enkel komponent har definert et sett med input data (props) som den forventer som input. Det er opp til den overliggende komponenten å skaffe tilveie disse. Dette kan være verdier fra state eller egne input data.\nReact legger opp til React komponetene har en metode for å mappe verdier fra state til props for de komponentene som krever.\nNår sluttbruker gjør endringer i skjema (f.eks fyller inn noe i en tekstboks) vil den trigge en event som igjen trigger Actions som håndteres av forskjellige dispatchers\n /** * This is the event handler that triggers the Redux Actions * that is sendt to the different Action dispatcher. * This event handler is used for all form components rendered from this */ public handleComponentDataUpdate = (callbackValue: any): void =\u0026gt; { if (!this.props.component.dataModelBinding) { return; } FormFillerActionDispatchers.updateFormData( this.props.id, callbackValue, this.props.dataModelElement, ); ExternalApiActionDispatchers.checkIfApiShouldFetch(this.props.id, this.props.dataModelElement, callbackValue); RuleConnectionActionDispatchers.checkIfRuleShouldRun(this.props.id, this.props.dataModelElement, callbackValue); }  Containere Komponentene rendres inne i containere. Det er en base-container som alltid er til stede, denne rendrer alle komponentene/containerne som er definert i FormLayout.json. Denne opprettes automatisk når man legger til første komponent i skjema.\nTjenesteutvikler kan i tillegg legge til nye containere for å gruppere sammen felter i skjema. Disse gruppene kan defineres som repeterende, da må også repeterende gruppe i datamodellen defineres på containeren.\nRedux Redux benyttes for å lagre state i applikasjonen. I tjenester 3.0 finnes det flere data store.\nFor runtime er det følgende Redux store som benyttes\nAppConfigState Inneholder informasjon om hvilken modus applikasjonen har.\nexport interface IAppConfigState { designMode: boolean; }  DataModelState Inneholder informasjon om alle elementene i datamodellen. Basert på JSON generert fra XSD\nexport interface IDataModelState { model: IDataModelFieldElement[]; fetching: boolean; fetched: boolean; error: Error; }  RuleModelState Inneholder definerte regler\nexport interface IRuleModelState { model: IRuleModelFieldElement[]; fetching: boolean; fetched: boolean; error: Error; }  TextResourceState Inneholder alle tekstressurser.\nexport interface ITextResourcesState { resources: ITextResource[]; language: string; fetching: boolean; fetched: boolean; error: Error; }  FormFillerState Inneholder all skjemadata og eventuelle valideringsfeil.\nexport interface IFormFillerState { formData: any; validationErrors: any; }  Format på skjemadata\nSkjemadata er lagret i state som key-value-pair, med knytning til datamodell som nøkkel. F.eks. et felt som er knyttet til et felt melding.adresse.postnummer i datamodellen vil lagres som:\nformData: { melding.adresse.postnummer : \u0026quot;1234\u0026quot; }  Dersom et felt ligger inne i en gruppe som er definert som repeterende, vil det i tillegg legges på en indeks som sier hvilken instans av gruppen feltete hører til. F.eks. dersom gruppen melding.adresse er definert som repeterende og sluttbruker har lagt til 3 instanser av gruppen, vil man få følgende skjemadata:\nformData: { melding.adresse[0].postnummer : \u0026quot;1234\u0026quot;, melding.adresse[1].postnummer : \u0026quot;2345\u0026quot;, melding.adresse[2].postnummer : \u0026quot;4567\u0026quot; }  Reducer Redux reducers har til oppgave å oppdatere de forskjellige stores. Det er en reducer for hver enkel store. Følgende er definert\n formFillerReducer - Ansvarlig for å oppdatere FormFillerState errorReducer - Ansvarlig for å oppdatere *  Reducerne lytter etter Actions som blir dispatchet\nAction Types Action Types er type definisjoner på hendelser\nEksempler:\n// All update form data actions export const UPDATE_FORM_DATA: string = `${moduleName}.UPDATE_FORM_DATA`; export const UPDATE_FORM_DATA_FULFILLED: string = `${moduleName}.UPDATE_FORM_DATA_FULFILLED`; export const UPDATE_FORM_DATA_REJECTED: string = `${moduleName}.UPDATE_FORM_DATA_REJECTED`;  Action Actions er hendelser som kan bli trigget av de forskjellige komponentene. En Action inneholder minimum typen av en Action, men kan også inneholde andre metadata rundt hendelsen.\nEksempel:\nexport interface IUpdateFormDataAction extends Action { formData: any; componentID: string; dataModelElement: IDataModelFieldElement; }  Action Creators Action Creators lager actions\nEksempel:\nexport function updateFormDataAction( componentID: string, formData: any, dataModelElement: IDataModelFieldElement, ): IUpdateFormDataAction { return { type: ActionTypes.UPDATE_FORM_DATA, formData, componentID, dataModelElement }; }  Action Dispatcher Action dispatcher\nRedux-Saga Redux-Saga er Middleware rammeverk som benyttes for å gjøre asynkrone kall mot API i løsningen. Dette er f.eks uthenting av skjemdata og lagring av skjemadata.\nHver enkel Saga som defineres definerer metoder som utfører forskjellige typer oppgaver. Dette kan f.eks være lagring av skjemdata eller uthenting av skjemadata.\nDet er definert forskjellige Saga for de forskjellige funksjonelle områdene. Sagaene er\n appData - Ansvarlig for å hente ut regler, tekstressurser og datamodell externalApiSaga - Funksjonalitet rundt externe APi formFillerSagas - funksjonalitet knyttet til uthenting og lagring av skjemadata  For hver Saga metode knyttes det lytttere som lytter til Actions. Det er dette som trigger at de nødvendige kallene skjer.\n/** * Define a listener for the UPDATE_FORM_DATA event */ export function* watchUpdateFormDataSaga(): SagaIterator { yield takeLatest(FormFillerActionTypes.UPDATE_FORM_DATA, updateFormDataSaga); }  "
},
{
	"uri": "https://docs.altinn.studio/technology/redux/",
	"title": "Redux",
	"tags": ["tjenester 3.0"],
	"description": "Redux",
	"content": "  Applikasjonstilstandshåndtering En felles tilstand for hele applikasjonen Tilstanden styres av Actions som håndteres av Reducere som igjen populerer tilstanden.\n En Action kan f.eks. være \u0026ldquo;FETCH_POSTNUMMER\u0026rdquo; Når en slik actions kjøres, så vil en Reducer ta imot og oppdatere tilstanden slik at det er i tilstanden at applikasjonen nå henter postnummer. Når er hentingen er fullført, vil man f.eks. sende en action \u0026ldquo;FETCH_POSTNUMMER_FULFILLED\u0026rdquo; som har postnummer-data med som parameter. Reducer håndterer denne handlingen og setter postnummer-data i applikasjonens tilstand.   Vedlikeholdt av Facebook, under MIT lisens.\n  Fordeler ved å bruke redux  En felles state for alle komponenter Komponenter kan kobles direkte mot state og kan oppdatere denne uavhengig av andre komponenter Gir en stor frihet til valg av struktur på state. Enkelt å eksportere til json og importere fra json (hvis strukturen er lik)  Lenker  Offisiell nettside Github  "
},
{
	"uri": "https://docs.altinn.studio/documentation/repositories/",
	"title": "Tjenester 3.0 - Repositories",
	"tags": ["tjenester 3.0"],
	"description": "Løsning for lagring og versjonering av tjenester i Git-repositories og application lifecycle-funksjonalitet.",
	"content": "Dokumentasjon av \u0026ldquo;Repositories\u0026rdquo;, løsningen for lagring og versjonering av tjenestene som utvikles.\n\rRepositories - Arkitektur\r\rBeskrivelse av arkitektur for Repositories.\n\rRepositories - Data\r\rStruktur for repositories og filer i Gitea\n\rRepositories - Funksjonelt\r\rFunksjonalitet for lagring og versjonering av tjenester i Git-repositories samt funksjonalitet for application lifecycle management.\n\r"
},
{
	"uri": "https://docs.altinn.studio/architecture/deployment/service-deployment/",
	"title": "Altinn Studio - Service Deployment",
	"tags": ["tjenester 3.0"],
	"description": "Description of how services are deployet from the Altinn Studio Service Development solution to Altinn Studio",
	"content": "NOTE: Work in progress. Stuff will change\n\rWhen a service developer need to deploy a service to Altinn Studio Runtime solution test/production environement there is created a Docker Image with the configured version of Altinn Studio Runtime and the compiled service code and configuration inside the container.\nThis container is added to the Docker Registry.\nFrom Docker Registry Kubernetes will download the container in to the Kubernetes Cluster and make it available for the end users.\nDetails of build process can be found under build architecture.\n"
},
{
	"uri": "https://docs.altinn.studio/documentation/repositories/data/serviceimplementation/",
	"title": "ServiceImplementation.cs",
	"tags": ["tjenester 3.0", "dataformat"],
	"description": "Beskrivelse av format for tjenesteimplementasjonen",
	"content": " Arbeidet med POC har føreløpig ikke konkludert angående bruk av denne filen. Vil jobbes videre med i MVP.\n\rOverordnet \u0026lsquo;ServiceImplementation.cs\u0026rsquo; er hovedgrensesnittet mellom Altinn Core runtime og foretningslogikken i tjenesten som kjører på server.\nFormat \u0026lsquo;ServiceImplementation.cs\u0026rsquo; implementerer grensesnittet IServiceImplementation som har følgende metoder definert.\nobject CreateNewServiceModel(); Metode som oppretter nytt datamodell objekt basert på den datamodellen som tjenesten definerer\nvoid SetServiceModel(object model); Metode som gjør at plattformen kan tilgjengeliggjøre en populert datamodell til tjenesteimplementasjonen\nvoid SetContext(RequestContext requestContext, dynamic viewBag); Metode som setter context informasjon til tjenesteimplementasjon\nvoid SetContext(RequestContext requestContext, dynamic viewBag, ServiceContext serviceContext, StartServiceModel startServiceModel, ModelStateDictionary modelState); Metode som setter context informasjon til tjenesteimplementasjon\nTask RunServiceEvent(ServiceEventType serviceEvent); Metode som trigger en tjeneste hendelse. Dette gjør plattformen ved spesielle tidspunkt og tjenesteutvikler kan da velge å kjøre forretningslogikk under dise hendelsene.\nHendelsene som er definert til nå er.\n BeforeRender Calculation Instantiation ValidateInstantiation Validation DataRetrieval  void SetPlatformServices(IPlatformServices platformServices); Tilgjengeligjør plattformtjenester.\nViewMetadata GetView(string viewID, UserActionType userAction); Henter view. TODO: Vurder å fjerne dette når man har konkludert om MVC Razor views skal støttes av plattformen.\nUtvikling Under opprettelse av en tjeneste vil en tom ServiceImplementasjonsklasse opprettes.\nHypotese: Tjenesteutvikler editerer på denne filen via Altinn Studio eller Visual Studio Code\nForretningslogikk Foretningslogikk implementeres i denne klassen eller andre relatert klasser som denne referer til. Det vil være opp til utvikler å eventuelt skille kode ut i flere andre klasser.\nTjenester 3.0 oppretter egne klasser for forretningslogikk tilknyttet kalkuleringer, valideringer og instansiering.\nEksempel på forretningslogikk\n"
},
{
	"uri": "https://docs.altinn.studio/documentation/repositories/data/servicemetadata/",
	"title": "ServiceMetadata.json",
	"tags": ["tjenester 3.0", "dataformat"],
	"description": "Beskrivelse av format for ServiceMetadata",
	"content": " Overordnet \u0026lsquo;ServiceMetadata.json\u0026rsquo; beskriver datamodellen til et skjema. Den autogenereres fra XSD.\nFormat \u0026lsquo;ServiceMetadata.json\u0026rsquo; inneholder informasjon om alle felter i en datamodell. ServiceModell vil genereres fra denne. Hvis man ønsker å overstyre egenskaper fra XSD så kan det gjøres her.\nTODO: Det er en rekke ting som er uavklart om hva man vil kunne gjøre av endringer på denne.\nEksempel Under er et eksempel på hvordan ServiceMetadata kan se ut\n{ \u0026quot;Org\u0026quot;:\u0026quot;BR\u0026quot;, \u0026quot;Service\u0026quot;:\u0026quot;Tjeneste1\u0026quot;, \u0026quot;Edition\u0026quot;:\u0026quot;2019\u0026quot;, \u0026quot;Elements\u0026quot;:{ \u0026quot;Skjema.skjemanummer\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.skjemanummer\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;skjemanummer\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/skjemanummer\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;Integer\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;skjemanummer\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;1243\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.spesifikasjonsnummer\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.spesifikasjonsnummer\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;spesifikasjonsnummer\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/spesifikasjonsnummer\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;Integer\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;spesifikasjonsnummer\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;10702\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.blankettnummer\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.blankettnummer\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;blankettnummer\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/blankettnummer\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;String\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;blankettnummer\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;RF-1117\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.tittel\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.tittel\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;tittel\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/tittel\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;String\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;tittel\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;Klage p� likningen\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.gruppeid\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.gruppeid\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;gruppeid\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/gruppeid\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;PositiveInteger\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;gruppeid\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;5800\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.etatid\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.etatid\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;etatid\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/etatid\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:null, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;etatid\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.gruppeid\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.gruppeid\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;gruppeid\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/gruppeid\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;PositiveInteger\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;gruppeid\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;5801\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.info.gruppeid\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.gruppeid\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;gruppeid\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/info/gruppeid\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;PositiveInteger\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;gruppeid\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;5802\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.info.OppgavegiverNavnPreutfylt.orid\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.OppgavegiverNavnPreutfylt.orid\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.OppgavegiverNavnPreutfylt\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/info/OppgavegiverNavnPreutfylt/orid\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;PositiveInteger\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;25795\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.info.OppgavegiverNavnPreutfylt.Value\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.OppgavegiverNavnPreutfylt.Value\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.OppgavegiverNavnPreutfylt\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;Value\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.info.oppgavegiverNavnPreutfylt.value\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/info/OppgavegiverNavnPreutfylt/Value\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ \u0026quot;minLength\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;1\u0026quot;, \u0026quot;ErrortText\u0026quot;:null }, \u0026quot;maxLength\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;175\u0026quot;, \u0026quot;ErrortText\u0026quot;:null } }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Field\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;String\u0026quot;, \u0026quot;Texts\u0026quot;:{ \u0026quot;Help\u0026quot;:\u0026quot;25795.OppgavegiverNavnPreutfylt.Help\u0026quot;, \u0026quot;Label\u0026quot;:\u0026quot;25795.OppgavegiverNavnPreutfylt.Label\u0026quot; }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:1, \u0026quot;XName\u0026quot;:null, \u0026quot;IsTagContent\u0026quot;:true, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.info.OppgavegiverNavnPreutfylt\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.OppgavegiverNavnPreutfylt\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info\u0026quot;, \u0026quot;TypeName\u0026quot;:\u0026quot;OppgavegiverNavnPreutfylt\u0026quot;, \u0026quot;Name\u0026quot;:\u0026quot;OppgavegiverNavnPreutfylt\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.info.oppgavegiverNavnPreutfylt\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/info/OppgavegiverNavnPreutfylt\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Group\u0026quot;, \u0026quot;XsdValueType\u0026quot;:null, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;OppgavegiverNavnPreutfylt-datadef-25795\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.info.OppgavegiverAdressePreutfylt.orid\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.OppgavegiverAdressePreutfylt.orid\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.OppgavegiverAdressePreutfylt\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/info/OppgavegiverAdressePreutfylt/orid\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;PositiveInteger\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;25796\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.info.OppgavegiverAdressePreutfylt.Value\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.OppgavegiverAdressePreutfylt.Value\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.OppgavegiverAdressePreutfylt\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;Value\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.info.oppgavegiverAdressePreutfylt.value\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/info/OppgavegiverAdressePreutfylt/Value\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ \u0026quot;minLength\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;1\u0026quot;, \u0026quot;ErrortText\u0026quot;:null }, \u0026quot;maxLength\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;500\u0026quot;, \u0026quot;ErrortText\u0026quot;:null } }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Field\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;String\u0026quot;, \u0026quot;Texts\u0026quot;:{ \u0026quot;Help\u0026quot;:\u0026quot;25796.OppgavegiverAdressePreutfylt.Help\u0026quot;, \u0026quot;Label\u0026quot;:\u0026quot;25796.OppgavegiverAdressePreutfylt.Label\u0026quot; }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:1, \u0026quot;XName\u0026quot;:null, \u0026quot;IsTagContent\u0026quot;:true, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.info.OppgavegiverAdressePreutfylt\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.OppgavegiverAdressePreutfylt\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info\u0026quot;, \u0026quot;TypeName\u0026quot;:\u0026quot;OppgavegiverAdressePreutfylt\u0026quot;, \u0026quot;Name\u0026quot;:\u0026quot;OppgavegiverAdressePreutfylt\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.info.oppgavegiverAdressePreutfylt\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/info/OppgavegiverAdressePreutfylt\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Group\u0026quot;, \u0026quot;XsdValueType\u0026quot;:null, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;OppgavegiverAdressePreutfylt-datadef-25796\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.info.OppgavegiverPostnummerPreutfylt.orid\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.OppgavegiverPostnummerPreutfylt.orid\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.OppgavegiverPostnummerPreutfylt\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/info/OppgavegiverPostnummerPreutfylt/orid\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;PositiveInteger\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;25797\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.info.OppgavegiverPostnummerPreutfylt.Value\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.OppgavegiverPostnummerPreutfylt.Value\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.OppgavegiverPostnummerPreutfylt\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;Value\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.info.oppgavegiverPostnummerPreutfylt.value\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/info/OppgavegiverPostnummerPreutfylt/Value\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ \u0026quot;length\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;4\u0026quot;, \u0026quot;ErrortText\u0026quot;:null }, \u0026quot;pattern\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;[0-9]{4}\u0026quot;, \u0026quot;ErrortText\u0026quot;:null } }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Field\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;String\u0026quot;, \u0026quot;Texts\u0026quot;:{ \u0026quot;Help\u0026quot;:\u0026quot;25797.OppgavegiverPostnummerPreutfylt.Help\u0026quot;, \u0026quot;Label\u0026quot;:\u0026quot;25797.OppgavegiverPostnummerPreutfylt.Label\u0026quot; }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:1, \u0026quot;XName\u0026quot;:null, \u0026quot;IsTagContent\u0026quot;:true, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.info.OppgavegiverPostnummerPreutfylt\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.OppgavegiverPostnummerPreutfylt\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info\u0026quot;, \u0026quot;TypeName\u0026quot;:\u0026quot;OppgavegiverPostnummerPreutfylt\u0026quot;, \u0026quot;Name\u0026quot;:\u0026quot;OppgavegiverPostnummerPreutfylt\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.info.oppgavegiverPostnummerPreutfylt\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/info/OppgavegiverPostnummerPreutfylt\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Group\u0026quot;, \u0026quot;XsdValueType\u0026quot;:null, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;OppgavegiverPostnummerPreutfylt-datadef-25797\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.info.OppgavegiverPoststedPreutfylt.orid\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.OppgavegiverPoststedPreutfylt.orid\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.OppgavegiverPoststedPreutfylt\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/info/OppgavegiverPoststedPreutfylt/orid\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;PositiveInteger\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;25798\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.info.OppgavegiverPoststedPreutfylt.Value\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.OppgavegiverPoststedPreutfylt.Value\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.OppgavegiverPoststedPreutfylt\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;Value\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.info.oppgavegiverPoststedPreutfylt.value\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/info/OppgavegiverPoststedPreutfylt/Value\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ \u0026quot;minLength\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;1\u0026quot;, \u0026quot;ErrortText\u0026quot;:null }, \u0026quot;maxLength\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;35\u0026quot;, \u0026quot;ErrortText\u0026quot;:null } }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Field\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;String\u0026quot;, \u0026quot;Texts\u0026quot;:{ \u0026quot;Help\u0026quot;:\u0026quot;25798.OppgavegiverPoststedPreutfylt.Help\u0026quot;, \u0026quot;Label\u0026quot;:\u0026quot;25798.OppgavegiverPoststedPreutfylt.Label\u0026quot; }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:1, \u0026quot;XName\u0026quot;:null, \u0026quot;IsTagContent\u0026quot;:true, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.info.OppgavegiverPoststedPreutfylt\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.OppgavegiverPoststedPreutfylt\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info\u0026quot;, \u0026quot;TypeName\u0026quot;:\u0026quot;OppgavegiverPoststedPreutfylt\u0026quot;, \u0026quot;Name\u0026quot;:\u0026quot;OppgavegiverPoststedPreutfylt\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.info.oppgavegiverPoststedPreutfylt\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/info/OppgavegiverPoststedPreutfylt\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Group\u0026quot;, \u0026quot;XsdValueType\u0026quot;:null, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;OppgavegiverPoststedPreutfylt-datadef-25798\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.info.OppgavegiverFodselsnummer.orid\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.OppgavegiverFodselsnummer.orid\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.OppgavegiverFodselsnummer\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/info/OppgavegiverFodselsnummer/orid\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;PositiveInteger\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;26\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.info.OppgavegiverFodselsnummer.Value\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.OppgavegiverFodselsnummer.Value\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.OppgavegiverFodselsnummer\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;Value\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.info.oppgavegiverFodselsnummer.value\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/info/OppgavegiverFodselsnummer/Value\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ \u0026quot;length\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;11\u0026quot;, \u0026quot;ErrortText\u0026quot;:null } }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Field\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;String\u0026quot;, \u0026quot;Texts\u0026quot;:{ \u0026quot;Help\u0026quot;:\u0026quot;26.OppgavegiverFodselsnummer.Help\u0026quot;, \u0026quot;Label\u0026quot;:\u0026quot;26.OppgavegiverFodselsnummer.Label\u0026quot; }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:1, \u0026quot;XName\u0026quot;:null, \u0026quot;IsTagContent\u0026quot;:true, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.info.OppgavegiverFodselsnummer\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.OppgavegiverFodselsnummer\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info\u0026quot;, \u0026quot;TypeName\u0026quot;:\u0026quot;OppgavegiverFodselsnummer\u0026quot;, \u0026quot;Name\u0026quot;:\u0026quot;OppgavegiverFodselsnummer\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.info.oppgavegiverFodselsnummer\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/info/OppgavegiverFodselsnummer\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Group\u0026quot;, \u0026quot;XsdValueType\u0026quot;:null, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;OppgavegiverFodselsnummer-datadef-26\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.info.EnhetOrganisasjonsnummer.orid\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.EnhetOrganisasjonsnummer.orid\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.EnhetOrganisasjonsnummer\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/info/EnhetOrganisasjonsnummer/orid\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;PositiveInteger\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;18\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.info.EnhetOrganisasjonsnummer.Value\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.EnhetOrganisasjonsnummer.Value\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.EnhetOrganisasjonsnummer\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;Value\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.info.enhetOrganisasjonsnummer.value\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/info/EnhetOrganisasjonsnummer/Value\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ \u0026quot;length\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;9\u0026quot;, \u0026quot;ErrortText\u0026quot;:null } }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Field\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;String\u0026quot;, \u0026quot;Texts\u0026quot;:{ \u0026quot;Help\u0026quot;:\u0026quot;18.EnhetOrganisasjonsnummer.Help\u0026quot;, \u0026quot;Label\u0026quot;:\u0026quot;18.EnhetOrganisasjonsnummer.Label\u0026quot; }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:1, \u0026quot;XName\u0026quot;:null, \u0026quot;IsTagContent\u0026quot;:true, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.info.EnhetOrganisasjonsnummer\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.EnhetOrganisasjonsnummer\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info\u0026quot;, \u0026quot;TypeName\u0026quot;:\u0026quot;EnhetOrganisasjonsnummer\u0026quot;, \u0026quot;Name\u0026quot;:\u0026quot;EnhetOrganisasjonsnummer\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.info.enhetOrganisasjonsnummer\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/info/EnhetOrganisasjonsnummer\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Group\u0026quot;, \u0026quot;XsdValueType\u0026quot;:null, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;EnhetOrganisasjonsnummer-datadef-18\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.info.EnhetKommunenummer.orid\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.EnhetKommunenummer.orid\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.EnhetKommunenummer\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/info/EnhetKommunenummer/orid\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;PositiveInteger\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;17\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.info.EnhetKommunenummer.Value\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.EnhetKommunenummer.Value\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.EnhetKommunenummer\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;Value\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.info.enhetKommunenummer.value\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/info/EnhetKommunenummer/Value\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ \u0026quot;length\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;4\u0026quot;, \u0026quot;ErrortText\u0026quot;:null }, \u0026quot;pattern\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;[0-9]{4}\u0026quot;, \u0026quot;ErrortText\u0026quot;:null } }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Field\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;String\u0026quot;, \u0026quot;Texts\u0026quot;:{ \u0026quot;Help\u0026quot;:\u0026quot;17.EnhetKommunenummer.Help\u0026quot;, \u0026quot;Label\u0026quot;:\u0026quot;17.EnhetKommunenummer.Label\u0026quot;, \u0026quot;PlaceHolder\u0026quot;:\u0026quot;17.EnhetKommunenummer.PlaceHolder\u0026quot; }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:1, \u0026quot;XName\u0026quot;:null, \u0026quot;IsTagContent\u0026quot;:true, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.info.EnhetKommunenummer\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info.EnhetKommunenummer\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info\u0026quot;, \u0026quot;TypeName\u0026quot;:\u0026quot;EnhetKommunenummer\u0026quot;, \u0026quot;Name\u0026quot;:\u0026quot;EnhetKommunenummer\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.info.enhetKommunenummer\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/info/EnhetKommunenummer\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Group\u0026quot;, \u0026quot;XsdValueType\u0026quot;:null, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;EnhetKommunenummer-datadef-17\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.info\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.info\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor\u0026quot;, \u0026quot;TypeName\u0026quot;:\u0026quot;info\u0026quot;, \u0026quot;Name\u0026quot;:\u0026quot;info\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.info\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/info\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Group\u0026quot;, \u0026quot;XsdValueType\u0026quot;:null, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:3, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;info-grp-5802\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.Kontakt.gruppeid\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.gruppeid\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;gruppeid\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/Kontakt/gruppeid\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;PositiveInteger\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;gruppeid\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;5803\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonNavn.orid\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonNavn.orid\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonNavn\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/Kontakt/KontaktpersonNavn/orid\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;PositiveInteger\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;2\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonNavn.Value\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonNavn.Value\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonNavn\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;Value\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.kontakt.kontaktpersonNavn.value\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/Kontakt/KontaktpersonNavn/Value\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ \u0026quot;minLength\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;1\u0026quot;, \u0026quot;ErrortText\u0026quot;:null }, \u0026quot;maxLength\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;150\u0026quot;, \u0026quot;ErrortText\u0026quot;:null } }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Field\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;String\u0026quot;, \u0026quot;Texts\u0026quot;:{ \u0026quot;Label\u0026quot;:\u0026quot;2.KontaktpersonNavn.Label\u0026quot; }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:1, \u0026quot;XName\u0026quot;:null, \u0026quot;IsTagContent\u0026quot;:true, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonNavn\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonNavn\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt\u0026quot;, \u0026quot;TypeName\u0026quot;:\u0026quot;KontaktpersonNavn\u0026quot;, \u0026quot;Name\u0026quot;:\u0026quot;KontaktpersonNavn\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.kontakt.kontaktpersonNavn\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/Kontakt/KontaktpersonNavn\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Group\u0026quot;, \u0026quot;XsdValueType\u0026quot;:null, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;KontaktpersonNavn-datadef-2\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonAdresse.orid\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonAdresse.orid\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonAdresse\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/Kontakt/KontaktpersonAdresse/orid\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;PositiveInteger\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;2751\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonAdresse.Value\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonAdresse.Value\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonAdresse\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;Value\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.kontakt.kontaktpersonAdresse.value\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/Kontakt/KontaktpersonAdresse/Value\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ \u0026quot;minLength\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;1\u0026quot;, \u0026quot;ErrortText\u0026quot;:null }, \u0026quot;maxLength\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;105\u0026quot;, \u0026quot;ErrortText\u0026quot;:null } }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Field\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;String\u0026quot;, \u0026quot;Texts\u0026quot;:{ \u0026quot;Help\u0026quot;:\u0026quot;2751.KontaktpersonAdresse.Help\u0026quot;, \u0026quot;Label\u0026quot;:\u0026quot;2751.KontaktpersonAdresse.Label\u0026quot; }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:1, \u0026quot;XName\u0026quot;:null, \u0026quot;IsTagContent\u0026quot;:true, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonAdresse\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonAdresse\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt\u0026quot;, \u0026quot;TypeName\u0026quot;:\u0026quot;KontaktpersonAdresse\u0026quot;, \u0026quot;Name\u0026quot;:\u0026quot;KontaktpersonAdresse\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.kontakt.kontaktpersonAdresse\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/Kontakt/KontaktpersonAdresse\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Group\u0026quot;, \u0026quot;XsdValueType\u0026quot;:null, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;KontaktpersonAdresse-datadef-2751\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonPostnummer.orid\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonPostnummer.orid\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonPostnummer\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/Kontakt/KontaktpersonPostnummer/orid\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;PositiveInteger\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;10441\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonPostnummer.Value\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonPostnummer.Value\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonPostnummer\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;Value\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.kontakt.kontaktpersonPostnummer.value\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/Kontakt/KontaktpersonPostnummer/Value\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ \u0026quot;length\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;4\u0026quot;, \u0026quot;ErrortText\u0026quot;:null }, \u0026quot;pattern\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;[0-9]{4}\u0026quot;, \u0026quot;ErrortText\u0026quot;:null } }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Field\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;String\u0026quot;, \u0026quot;Texts\u0026quot;:{ \u0026quot;Help\u0026quot;:\u0026quot;10441.KontaktpersonPostnummer.Help\u0026quot;, \u0026quot;Label\u0026quot;:\u0026quot;10441.KontaktpersonPostnummer.Label\u0026quot; }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:1, \u0026quot;XName\u0026quot;:null, \u0026quot;IsTagContent\u0026quot;:true, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonPostnummer\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonPostnummer\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt\u0026quot;, \u0026quot;TypeName\u0026quot;:\u0026quot;KontaktpersonPostnummer\u0026quot;, \u0026quot;Name\u0026quot;:\u0026quot;KontaktpersonPostnummer\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.kontakt.kontaktpersonPostnummer\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/Kontakt/KontaktpersonPostnummer\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Group\u0026quot;, \u0026quot;XsdValueType\u0026quot;:null, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;KontaktpersonPostnummer-datadef-10441\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonPoststed.orid\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonPoststed.orid\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonPoststed\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/Kontakt/KontaktpersonPoststed/orid\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;PositiveInteger\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;10442\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonPoststed.Value\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonPoststed.Value\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonPoststed\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;Value\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.kontakt.kontaktpersonPoststed.value\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/Kontakt/KontaktpersonPoststed/Value\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ \u0026quot;minLength\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;1\u0026quot;, \u0026quot;ErrortText\u0026quot;:null }, \u0026quot;maxLength\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;35\u0026quot;, \u0026quot;ErrortText\u0026quot;:null } }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Field\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;String\u0026quot;, \u0026quot;Texts\u0026quot;:{ \u0026quot;Help\u0026quot;:\u0026quot;10442.KontaktpersonPoststed.Help\u0026quot;, \u0026quot;Label\u0026quot;:\u0026quot;10442.KontaktpersonPoststed.Label\u0026quot; }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:1, \u0026quot;XName\u0026quot;:null, \u0026quot;IsTagContent\u0026quot;:true, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonPoststed\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonPoststed\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt\u0026quot;, \u0026quot;TypeName\u0026quot;:\u0026quot;KontaktpersonPoststed\u0026quot;, \u0026quot;Name\u0026quot;:\u0026quot;KontaktpersonPoststed\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.kontakt.kontaktpersonPoststed\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/Kontakt/KontaktpersonPoststed\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Group\u0026quot;, \u0026quot;XsdValueType\u0026quot;:null, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;KontaktpersonPoststed-datadef-10442\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonEPost.orid\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonEPost.orid\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonEPost\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/Kontakt/KontaktpersonEPost/orid\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;PositiveInteger\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;27688\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonEPost.Value\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonEPost.Value\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonEPost\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;Value\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.kontakt.kontaktpersonEPost.value\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/Kontakt/KontaktpersonEPost/Value\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ \u0026quot;minLength\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;1\u0026quot;, \u0026quot;ErrortText\u0026quot;:null }, \u0026quot;maxLength\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;45\u0026quot;, \u0026quot;ErrortText\u0026quot;:null } }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Field\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;String\u0026quot;, \u0026quot;Texts\u0026quot;:{ \u0026quot;Help\u0026quot;:\u0026quot;27688.KontaktpersonEPost.Help\u0026quot;, \u0026quot;Label\u0026quot;:\u0026quot;27688.KontaktpersonEPost.Label\u0026quot; }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:1, \u0026quot;XName\u0026quot;:null, \u0026quot;IsTagContent\u0026quot;:true, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonEPost\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonEPost\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt\u0026quot;, \u0026quot;TypeName\u0026quot;:\u0026quot;KontaktpersonEPost\u0026quot;, \u0026quot;Name\u0026quot;:\u0026quot;KontaktpersonEPost\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.kontakt.kontaktpersonEPost\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/Kontakt/KontaktpersonEPost\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Group\u0026quot;, \u0026quot;XsdValueType\u0026quot;:null, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;KontaktpersonEPost-datadef-27688\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonTelefonnummer.orid\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonTelefonnummer.orid\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonTelefonnummer\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/Kontakt/KontaktpersonTelefonnummer/orid\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;PositiveInteger\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;3\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonTelefonnummer.Value\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonTelefonnummer.Value\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonTelefonnummer\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;Value\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.kontakt.kontaktpersonTelefonnummer.value\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/Kontakt/KontaktpersonTelefonnummer/Value\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ \u0026quot;minLength\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;1\u0026quot;, \u0026quot;ErrortText\u0026quot;:null }, \u0026quot;maxLength\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;13\u0026quot;, \u0026quot;ErrortText\u0026quot;:null } }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Field\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;String\u0026quot;, \u0026quot;Texts\u0026quot;:{ \u0026quot;Help\u0026quot;:\u0026quot;3.KontaktpersonTelefonnummer.Help\u0026quot;, \u0026quot;Label\u0026quot;:\u0026quot;3.KontaktpersonTelefonnummer.Label\u0026quot; }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:1, \u0026quot;XName\u0026quot;:null, \u0026quot;IsTagContent\u0026quot;:true, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonTelefonnummer\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt.KontaktpersonTelefonnummer\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt\u0026quot;, \u0026quot;TypeName\u0026quot;:\u0026quot;KontaktpersonTelefonnummer\u0026quot;, \u0026quot;Name\u0026quot;:\u0026quot;KontaktpersonTelefonnummer\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.kontakt.kontaktpersonTelefonnummer\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/Kontakt/KontaktpersonTelefonnummer\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Group\u0026quot;, \u0026quot;XsdValueType\u0026quot;:null, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;KontaktpersonTelefonnummer-datadef-3\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.Kontakt\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.Kontakt\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor\u0026quot;, \u0026quot;TypeName\u0026quot;:\u0026quot;Kontakt\u0026quot;, \u0026quot;Name\u0026quot;:\u0026quot;Kontakt\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.kontakt\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/Kontakt\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Group\u0026quot;, \u0026quot;XsdValueType\u0026quot;:null, \u0026quot;Texts\u0026quot;:{ \u0026quot;Label\u0026quot;:\u0026quot;5803.Kontakt.Label\u0026quot;, \u0026quot;Help\u0026quot;:\u0026quot;5803.Kontakt.Help\u0026quot;, \u0026quot;PlaceHolder\u0026quot;:\u0026quot;5803.Kontakt.PlaceHolder\u0026quot; }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;Kontakt-grp-5803\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.klagefrist.gruppeid\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.klagefrist.gruppeid\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.klagefrist\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;gruppeid\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/klagefrist/gruppeid\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;PositiveInteger\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;gruppeid\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;5804\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.klagefrist.KlageGjeldendeInntektsar.orid\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.klagefrist.KlageGjeldendeInntektsar.orid\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.klagefrist.KlageGjeldendeInntektsar\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/klagefrist/KlageGjeldendeInntektsar/orid\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;PositiveInteger\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;25455\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.klagefrist.KlageGjeldendeInntektsar.Value\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.klagefrist.KlageGjeldendeInntektsar.Value\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.klagefrist.KlageGjeldendeInntektsar\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;Value\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.klagefrist.klageGjeldendeInntektsar.value\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/klagefrist/KlageGjeldendeInntektsar/Value\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Field\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;GYear\u0026quot;, \u0026quot;Texts\u0026quot;:{ \u0026quot;Help\u0026quot;:\u0026quot;25455.KlageGjeldendeInntektsar.Help\u0026quot;, \u0026quot;Label\u0026quot;:\u0026quot;25455.KlageGjeldendeInntektsar.Label\u0026quot;, \u0026quot;PlaceHolder\u0026quot;:\u0026quot;25455.KlageGjeldendeInntektsar.PlaceHolder\u0026quot; }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:1, \u0026quot;XName\u0026quot;:null, \u0026quot;IsTagContent\u0026quot;:true, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.klagefrist.KlageGjeldendeInntektsar\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.klagefrist.KlageGjeldendeInntektsar\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.klagefrist\u0026quot;, \u0026quot;TypeName\u0026quot;:\u0026quot;KlageGjeldendeInntektsar\u0026quot;, \u0026quot;Name\u0026quot;:\u0026quot;KlageGjeldendeInntektsar\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.klagefrist.klageGjeldendeInntektsar\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/klagefrist/KlageGjeldendeInntektsar\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Group\u0026quot;, \u0026quot;XsdValueType\u0026quot;:null, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;KlageGjeldendeInntektsar-datadef-25455\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.klagefrist.KlagemeldingSendtInnenKlagefrist.orid\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.klagefrist.KlagemeldingSendtInnenKlagefrist.orid\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.klagefrist.KlagemeldingSendtInnenKlagefrist\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/klagefrist/KlagemeldingSendtInnenKlagefrist/orid\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;PositiveInteger\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;25454\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.klagefrist.KlagemeldingSendtInnenKlagefrist.Value\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.klagefrist.KlagemeldingSendtInnenKlagefrist.Value\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.klagefrist.KlagemeldingSendtInnenKlagefrist\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;Value\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.klagefrist.klagemeldingSendtInnenKlagefrist.value\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/klagefrist/KlagemeldingSendtInnenKlagefrist/Value\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ \u0026quot;minLength\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;1\u0026quot;, \u0026quot;ErrortText\u0026quot;:null }, \u0026quot;maxLength\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;3\u0026quot;, \u0026quot;ErrortText\u0026quot;:null }, \u0026quot;enumeration\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;Ja;Nei;\u0026quot;, \u0026quot;ErrortText\u0026quot;:null } }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Field\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;String\u0026quot;, \u0026quot;Texts\u0026quot;:{ \u0026quot;Help\u0026quot;:\u0026quot;25454.KlagemeldingSendtInnenKlagefrist.Help\u0026quot;, \u0026quot;Label\u0026quot;:\u0026quot;25454.KlagemeldingSendtInnenKlagefrist.Label\u0026quot; }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:1, \u0026quot;XName\u0026quot;:null, \u0026quot;IsTagContent\u0026quot;:true, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.klagefrist.KlagemeldingSendtInnenKlagefrist\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.klagefrist.KlagemeldingSendtInnenKlagefrist\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.klagefrist\u0026quot;, \u0026quot;TypeName\u0026quot;:\u0026quot;KlagemeldingSendtInnenKlagefrist\u0026quot;, \u0026quot;Name\u0026quot;:\u0026quot;KlagemeldingSendtInnenKlagefrist\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.klagefrist.klagemeldingSendtInnenKlagefrist\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/klagefrist/KlagemeldingSendtInnenKlagefrist\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Group\u0026quot;, \u0026quot;XsdValueType\u0026quot;:null, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;KlagemeldingSendtInnenKlagefrist-datadef-25454\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.klagefrist.KlageUtloptKlagefristBegrunnelse.orid\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.klagefrist.KlageUtloptKlagefristBegrunnelse.orid\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.klagefrist.KlageUtloptKlagefristBegrunnelse\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/klagefrist/KlageUtloptKlagefristBegrunnelse/orid\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;PositiveInteger\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;25456\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.klagefrist.KlageUtloptKlagefristBegrunnelse.Value\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.klagefrist.KlageUtloptKlagefristBegrunnelse.Value\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.klagefrist.KlageUtloptKlagefristBegrunnelse\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;Value\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.klagefrist.klageUtloptKlagefristBegrunnelse.value\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/klagefrist/KlageUtloptKlagefristBegrunnelse/Value\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ \u0026quot;minLength\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;1\u0026quot;, \u0026quot;ErrortText\u0026quot;:null }, \u0026quot;maxLength\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;1000\u0026quot;, \u0026quot;ErrortText\u0026quot;:null } }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Field\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;String\u0026quot;, \u0026quot;Texts\u0026quot;:{ \u0026quot;Help\u0026quot;:\u0026quot;25456.KlageUtloptKlagefristBegrunnelse.Help\u0026quot;, \u0026quot;Label\u0026quot;:\u0026quot;25456.KlageUtloptKlagefristBegrunnelse.Label\u0026quot;, \u0026quot;PlaceHolder\u0026quot;:\u0026quot;25456.KlageUtloptKlagefristBegrunnelse.PlaceHolder\u0026quot; }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:1, \u0026quot;XName\u0026quot;:null, \u0026quot;IsTagContent\u0026quot;:true, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.klagefrist.KlageUtloptKlagefristBegrunnelse\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.klagefrist.KlageUtloptKlagefristBegrunnelse\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor.klagefrist\u0026quot;, \u0026quot;TypeName\u0026quot;:\u0026quot;KlageUtloptKlagefristBegrunnelse\u0026quot;, \u0026quot;Name\u0026quot;:\u0026quot;KlageUtloptKlagefristBegrunnelse\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.klagefrist.klageUtloptKlagefristBegrunnelse\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/klagefrist/KlageUtloptKlagefristBegrunnelse\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Group\u0026quot;, \u0026quot;XsdValueType\u0026quot;:null, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;KlageUtloptKlagefristBegrunnelse-datadef-25456\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor.klagefrist\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor.klagefrist\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.Skattyterinfor\u0026quot;, \u0026quot;TypeName\u0026quot;:\u0026quot;klagefrist\u0026quot;, \u0026quot;Name\u0026quot;:\u0026quot;klagefrist\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor.klagefrist\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor/klagefrist\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Group\u0026quot;, \u0026quot;XsdValueType\u0026quot;:null, \u0026quot;Texts\u0026quot;:{ \u0026quot;Label\u0026quot;:\u0026quot;5804.klagefrist.Label\u0026quot; }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;klagefrist-grp-5804\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.Skattyterinfor\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.Skattyterinfor\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema\u0026quot;, \u0026quot;TypeName\u0026quot;:\u0026quot;Skattyterinfor\u0026quot;, \u0026quot;Name\u0026quot;:\u0026quot;Skattyterinfor\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;skattyterinfor\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/Skattyterinfor\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Group\u0026quot;, \u0026quot;XsdValueType\u0026quot;:null, \u0026quot;Texts\u0026quot;:{ \u0026quot;Label\u0026quot;:\u0026quot;5801.Skattyterinfor.Label\u0026quot;, \u0026quot;Help\u0026quot;:\u0026quot;5801.Skattyterinfor.Help\u0026quot; }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;Skattyterinfor-grp-5801\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.klage.gruppeid\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.klage.gruppeid\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.klage\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;gruppeid\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/klage/gruppeid\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;PositiveInteger\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;gruppeid\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;5805\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.klage.spesifisering.gruppeid\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.klage.spesifisering.gruppeid\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.klage.spesifisering\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;gruppeid\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/klage/spesifisering/gruppeid\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;PositiveInteger\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;gruppeid\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;5836\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.klage.spesifisering.KlageSpesifisering.orid\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.klage.spesifisering.KlageSpesifisering.orid\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.klage.spesifisering.KlageSpesifisering\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/klage/spesifisering/KlageSpesifisering/orid\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Attribute\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;PositiveInteger\u0026quot;, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;orid\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:\u0026quot;25457\u0026quot;, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.klage.spesifisering.KlageSpesifisering.Value\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.klage.spesifisering.KlageSpesifisering.Value\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.klage.spesifisering.KlageSpesifisering\u0026quot;, \u0026quot;TypeName\u0026quot;:null, \u0026quot;Name\u0026quot;:\u0026quot;Value\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;klage.spesifisering.klageSpesifisering.value\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/klage/spesifisering/KlageSpesifisering/Value\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ \u0026quot;minLength\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;1\u0026quot;, \u0026quot;ErrortText\u0026quot;:null }, \u0026quot;maxLength\u0026quot;:{ \u0026quot;Value\u0026quot;:\u0026quot;1000\u0026quot;, \u0026quot;ErrortText\u0026quot;:null } }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Field\u0026quot;, \u0026quot;XsdValueType\u0026quot;:\u0026quot;String\u0026quot;, \u0026quot;Texts\u0026quot;:{ \u0026quot;Help\u0026quot;:\u0026quot;25457.KlageSpesifisering.Help\u0026quot;, \u0026quot;Label\u0026quot;:\u0026quot;25457.KlageSpesifisering.Label\u0026quot; }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:1, \u0026quot;XName\u0026quot;:null, \u0026quot;IsTagContent\u0026quot;:true, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.klage.spesifisering.KlageSpesifisering\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.klage.spesifisering.KlageSpesifisering\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.klage.spesifisering\u0026quot;, \u0026quot;TypeName\u0026quot;:\u0026quot;KlageSpesifisering\u0026quot;, \u0026quot;Name\u0026quot;:\u0026quot;KlageSpesifisering\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;klage.spesifisering.klageSpesifisering\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/klage/spesifisering/KlageSpesifisering\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Group\u0026quot;, \u0026quot;XsdValueType\u0026quot;:null, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;KlageSpesifisering-datadef-25457\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.klage.spesifisering\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.klage.spesifisering\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema.klage\u0026quot;, \u0026quot;TypeName\u0026quot;:\u0026quot;spesifisering\u0026quot;, \u0026quot;Name\u0026quot;:\u0026quot;spesifisering\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;klage.spesifisering\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/klage/spesifisering\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Group\u0026quot;, \u0026quot;XsdValueType\u0026quot;:null, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;spesifisering-grp-5836\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema.klage\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema.klage\u0026quot;, \u0026quot;ParentElement\u0026quot;:\u0026quot;Skjema\u0026quot;, \u0026quot;TypeName\u0026quot;:\u0026quot;klage\u0026quot;, \u0026quot;Name\u0026quot;:\u0026quot;klage\u0026quot;, \u0026quot;DataBindingName\u0026quot;:\u0026quot;klage\u0026quot;, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema/klage\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Group\u0026quot;, \u0026quot;XsdValueType\u0026quot;:null, \u0026quot;Texts\u0026quot;:{ \u0026quot;Label\u0026quot;:\u0026quot;5805.klage.Label\u0026quot;, \u0026quot;Help\u0026quot;:\u0026quot;5805.klage.Help\u0026quot;, \u0026quot;PlaceHolder\u0026quot;:\u0026quot;5805.klage.PlaceHolder\u0026quot; }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:1, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:\u0026quot;klage-grp-5805\u0026quot;, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false }, \u0026quot;Skjema\u0026quot;:{ \u0026quot;ID\u0026quot;:\u0026quot;Skjema\u0026quot;, \u0026quot;ParentElement\u0026quot;:null, \u0026quot;TypeName\u0026quot;:\u0026quot;Skjema\u0026quot;, \u0026quot;Name\u0026quot;:\u0026quot;Skjema\u0026quot;, \u0026quot;DataBindingName\u0026quot;:null, \u0026quot;XPath\u0026quot;:\u0026quot;/Skjema\u0026quot;, \u0026quot;Restrictions\u0026quot;:{ }, \u0026quot;Choices\u0026quot;:null, \u0026quot;Type\u0026quot;:\u0026quot;Group\u0026quot;, \u0026quot;XsdValueType\u0026quot;:null, \u0026quot;Texts\u0026quot;:{ }, \u0026quot;CustomProperties\u0026quot;:{ }, \u0026quot;MaxOccurs\u0026quot;:0, \u0026quot;MinOccurs\u0026quot;:0, \u0026quot;XName\u0026quot;:null, \u0026quot;IsTagContent\u0026quot;:false, \u0026quot;FixedValue\u0026quot;:null, \u0026quot;IsReadOnly\u0026quot;:false } } }  "
},
{
	"uri": "https://docs.altinn.studio/documentation/repositories/data/servicemodel/",
	"title": "ServiceModel.cs",
	"tags": ["tjenester 3.0", "dataformat"],
	"description": "Beskrivelse av ServiceModel.cs",
	"content": " Overordnet \u0026lsquo;ServiceModel.cs\u0026rsquo; er tjenestemodellen som automatisk genereres fra datamodellen som er valgt på tjenesten. Denne kommer i utgangspunktet fra XSD, men tjenester 3.0 vil mest sannsynlig få støtte for å definere datamodell selv.\nRuntime vil populere datamodellen med data fra GUI og forretningsregler vil kunne jobbe mot denne modellen.\n"
},
{
	"uri": "https://docs.altinn.studio/documentation/repositories/data/servicemodelxsd/",
	"title": "ServiceModel.xsd",
	"tags": ["tjenester 3.0", "dataformat"],
	"description": "Beskrivelse av ServiceModel.xsd",
	"content": " Overordnet \u0026lsquo;ServiceModel.xsd\u0026rsquo; er definasjonen på datamodellen på tjenesten. Dette er en XSD som typisk er definert i Seres eller OR i dagens Altinn løsning.\nFor tjenester 3.0 vil jobbes med å kunne definere XSD som en del av løsningen. (f.eks å definere skjema i GUI og få XSD basert på det). Dette vil avklares fremover.\n"
},
{
	"uri": "https://docs.altinn.studio/about/slide/",
	"title": "Slide NO",
	"tags": [],
	"description": "En presentasjon om målsettinger og konsepter for tjenester 3.0",
	"content": " Tjenester 3.0 Status Se siste status her.\nHva er tjenester 3.0? 4 overordnede målsettinger\u0026hellip;\nModerne tjenester  Brukervennlige og effektive tjenester Responsivt design Universell utforming God ytelse og lav responstid Basert på moderne og åpne web-standarder  Effektiv tjenesteutvikling  100% selvbetjening Effektiv og automatisert testing Parallell utvikling (basert på Git) Enkel datamodellering Åpen plattform med API\u0026rsquo;er  Enkelt for fagperson, fleksibelt for utvikler  Fagpersoner benytter nettleser Utviklere kan også bruke kode-editor Kan utvides av andre systemer  Åpen kildekode, cross-platform  Basert på åpen kildekode Deles som åpen kildekode Alle kan gjenbruke, og bidra til forbedringer Raskere videreutvikling Støtter Windows, macOS og Linux  Konsepter 6 konsepter\u0026hellip;\nGit som back-end  Alt som utvikles får full versjonshistorikk Enkel og rask deploy Ekte distribuert og parallell utvikling Back-end både for nettleser og kode-editor Git støttes av veldig mange verktøy  Nærhet til web-teknologi  Alt er basert på standard web-teknologi Verktøy blir aldri \u0026ldquo;i veien\u0026rdquo; eller utdatert Standard utviklerkompetanse Ingen proprietære verktøy som må læres  Effektiv testing  Støtte for automatisert testing Behøver ikke migrere for å få reell test Gjenbruker gjennomtestede komponenter Endringer i plattform gjøres kun ett sted  Enkelt å tilpasse  Alle deler av løsningen skal kunne \u0026ldquo;byttes ut\u0026rdquo; Kan utvides med egne widgets, maler, stilark, etc. Gjenbruk og overstyrbare defaults på alle nivåer API\u0026rsquo;er og Git som back-end gjør det enkelt å integrere andre systemer  Åpen kildekode  Tjenester 3.0 skal være åpen kildekode Vi skal benytte programvare med fri lisensiering, type MIT, Apache 2 eller BSD Vi skal bidra tilbake til prosjekter som vi benytter Ingen lisensutgifter  Cross-platform  Kan kjøre på både Windows, Linux og macOS Unngår låsing mot en enkelt plattform Kan kjøre lokalt på en laptop Muliggjør distribuert lokal utvikling og testing  Motivasjon Se Archimate arkitekturmodell.\nThe End Tilbake\n"
},
{
	"uri": "https://docs.altinn.studio/architecture/solution/",
	"title": "Solution Architecture",
	"tags": ["documentation", "solution", "architecture"],
	"description": "Description of the Altinn Studio solution",
	"content": "Functionality in Altinn Studio is distributed between different applications.\nThe diagram below shows where the different functionality i located in the different applications.\n\n"
},
{
	"uri": "https://docs.altinn.studio/technology/",
	"title": "Technology",
	"tags": ["documentation", "solution", "architecture"],
	"description": "Description of Technology used in Altinn Studio",
	"content": "The following articles describes the technology used in Altinn Studio and Altinn Studio Apps\n"
},
{
	"uri": "https://docs.altinn.studio/guide/service-testing/",
	"title": "Test utgave",
	"tags": ["guide"],
	"description": "Informasjon om testing av utgave",
	"content": " Preview-funksjonalitet I UI-editoren er det bygget inn en Preview-funksjonalitet. Denne tillater tjenesteutvikler å se hvordan skjema vil se ut til slutt.\nPreview er tilgjengelig under UX i toppmenyen, eller via Preview-fanen dersom man allerede er i UI-editoren.\nI tillegg til å se hvordan skjema vil se ut, kan man også teste f.eks. API-kall, kalkuleringer/regler, valideringer og dynamikk og se hvordan disse oppfører seg.\n  Preview   Kjør utgaven i Runtime Utgaven kan testes med en testbruker i Runtime.\n Gå til utgavearbeidsflaten (velg utgaven i toppmenyen eller gå inn til utgaven via forsiden) Under Test, velg \r-ikonet. Velg testbruker fra listen Velg eksisterende instans, eller start ny.  Utgaven kan nå testes, all funksjonalitet som er beskrevet over i Preview er også tilgjengelige for test i Runtime.\n  Test utgave i Runtime   "
},
{
	"uri": "https://docs.altinn.studio/technology/thirdpartycomponents/",
	"title": "Tredjeparts komponenter",
	"tags": ["tjenester 3.0"],
	"description": "Tredjeparts komponenter",
	"content": " Det er ønskelig at tredjeparter skal kunne utvikle komponenter som en tjenesteeier skal kunne bruke i sine løsninger\nHvordan utvikle 3. parts komponenter Når du som en bruker ønsker å utvikle tredjeparts-komponenter så er det anbefalt å bruke rollup.js som kompilerer til cjs (CommonJS).\nBasert på dette repoet i altinn.studio\nEksempel på et komponent som i et fiktivt git repo (basert på Gitea Repo) ligger i src/components/BalloonCounter/index.js :\nimport React from 'react'; export class BalloonCounter extends React.Component { constructor(_props, _state) { super(_props, _state); this.state = { count: 0, } } handleIncrement = () =\u0026gt; { let {count} = this.state; count += 1; this.setState({ count, }, () =\u0026gt; { this.handleSubmitData(); }); } handleDecrement = () =\u0026gt; { if(this.state.count !== 0) { let {count} = this.state; count -= 1; this.setState({ count, }, () =\u0026gt; { this.handleSubmitData(); }) } } handleSubmitData = () =\u0026gt; { this.props.onHandleDataUpdate(this.state.count); } render() { return ( \u0026lt;div\u0026gt; Number of ballons you want {this.state.count} \u0026lt;button onClick={this.handleIncrement}\u0026gt; + \u0026lt;/button\u0026gt; \u0026lt;button onClick={this.handleDecrement}\u0026gt; - \u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; ); } }  Viktig: Komponentens this.props.onHandleDataUpdate(...) er en funksjon som returnerer dataene komponenten har til skjema-appen, som håndterer lagring i datamodell.\nHusk å exportere denne classen i src/components/index.js slik:\nexport * from './BallonCounter.js';  Når npm run build blir kjørt vil dette lage en mappe med navn dist, med en fil som heter index.js. Denne filen må være med i git push for at altinn.studio skal kunne hente komponentene.\nHvordan bruke 3. parts komponenter I tjenester du ønsker å bruke 3. parts komponenter må det ligge en ThirdPartyComponents.json-fil. Plasseringen av denne er viktig, den må ligge under [Tjeneste navn]/editions/[utgave]/Resources. Innholdet av denne filen er som følger:\n{ \u0026quot;packages\u0026quot;: [{ \u0026quot;packageName\u0026quot;: \u0026quot;[navn på pakken]\u0026quot;, \u0026quot;location\u0026quot;: \u0026quot;[Link til raw format av index.js i git-repoet]\u0026quot; }] }  Eksempel på en slik json-fil finner du her.\nHvis alt ble satt opp riktig, vil pakkene med prefiksen til pakkenavnet komme opp i toolbaren på venstre side av Skjema designeren. F.eks. SuperCoolPackage.SuperCoolComponent.\nAlternative løsninger  Webpack med treeshaking  Positivt:  Webpack er allerede brukt i applikasjonen  Negativt:  Slik webpack er konfigurert idag vil det bli bygget en react-applikasjonsfil med alle komponenter, dette vil kreve en separering av react-skjemadesigner og react-runtime.  Runtime bygget må skje med formLayout, som vi henter i oppstarts-fasen av applikasjonen. Slik at alle kompoenter (brukte og ubrukte komponenter) blir med i bygget.  Bygget må skje fra kommando-linje/scripts som kjører i filstrukturen   Next.js SSR (server side rendering)  Positivt:  Gjøre initiell rendering på server, la klienten slippe å hente data som tekstressurser, datamodell, formLayout Dynamisk henting av komponenter som ikke er standard i react-applikasjonen  Negativt:  Introdusere flere tjenester og mye endring av allerede eksisterende react-kode   HTTP API som starter webpack-build  Ved å ha et api som f.eks. Express.js, som håndterer kompilering av applikasjon (bruker allerede kompilerte filer hvis de finnes) og blir kun brukt til å fetche javascript filen som inneholder react. Eller kun bygge da tjenesteeier klikker på \u0026ldquo;Migrer tjeneste\u0026rdquo;. Positivt:  Dynamisk kompilering av kun nødvending react applikasjon og 3. parts komponenter (kan både kompileres da tjenesten migreres, eller hver gang et en bruker starter å fylle ut et skjema (antar at første alternativ er mest gunstig))  Negativt:  Introdusere ny tjeneste (med mindre endringer av eksisterende kode enn \u0026ldquo;Next.js SSR\u0026rdquo;-alternativet)    Ressurser  Webpack tree-shaking  Webpack tree-shaking Webpack module concatenation plugin  Next.js  Offisiell nettside Github Docs  Express  Offisiell nettside Github side   "
},
{
	"uri": "https://docs.altinn.studio/technology/typescript/",
	"title": "TypeScript",
	"tags": ["tjenester 3.0"],
	"description": "TypeScript",
	"content": "  Typescript er et supersett av JavaScript der sterke typer er i bruk.\n Med javascript er følgende en lovlig handling:\nvar foo = false; foo = \u0026quot;bar\u0026quot;;  Dette ville gitt en TypeError i TypeScript, og koden ville ikke blitt kompilert til JavaScript.\n Typescript kompileres til JavaScript, så klienten kjører aldri TypeScript koden. Typescript er kun til for at utvikleren ikke skal lage bugs ved å endre typer på variabler.\n Vedlikeholdt av Microsoft, under Apache License 2.0.\n  Lenker  Offisiell nettside Github  "
},
{
	"uri": "https://docs.altinn.studio/documentation/repositories/data/validationhandler/",
	"title": "ValidationHandler.cs",
	"tags": ["tjenester 3.0", "dataformat"],
	"description": "Beskrivelse av format for ValidationHandler",
	"content": " Arbeidet med POC har føreløpig ikke konkludert angående bruk av denne filen. Vil jobbes videre med i MVP.\n\rOverordnet \u0026lsquo;ValidationHandler.cs\u0026rsquo; er en C# klasse hvor tjenesteutvikler kan plassere forretningslogikk som gjør valideringer\nFormat Standard C# kode som kan gjøre bortimot alt.\nUavklart: Hvordan Tjenester 3.0 skal validere/verifisere denne logikken.\nUtvikling Under opprettelse av en tjeneste vil en tom ValidationnHandler opprettes.\nHypotese: Tjenesteutvikler editerer på denne filen via Altinn Studio eller Visual Studio Code\n"
},
{
	"uri": "https://docs.altinn.studio/documentation/repositories/data/reactapp/",
	"title": "react-app.js",
	"tags": ["tjenester 3.0", "dataformat"],
	"description": "Beskrivelse av React-App.js",
	"content": " Overordnet \u0026lsquo;React-App.js\u0026rsquo; er selve React applikasjonen som blir generert av Altinn Studio som del av tjenestutviklingen. Den inneholder all logikk for å rendre GUI samt å gjøre nødvendige kall mot API i Altinn Tjenester 3.0\nFor øyeblikket er den statisk og lik for alle tjenester. Målet er at den blir tilpasset de komponentene som er i bruk. Dette slik at javascript koden ikke i inneholder referanser til komponenter ikke brukt i tjenesten.\n"
},
{
	"uri": "https://docs.altinn.studio/_header/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "docs  "
},
{
	"uri": "https://docs.altinn.studio/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.altinn.studio/tags/react/",
	"title": "React",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.altinn.studio/tags/redux/",
	"title": "Redux",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.altinn.studio/tags/repositories/",
	"title": "Repositories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.altinn.studio/tags/reselect/",
	"title": "Reselect",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.altinn.studio/tags/selector/",
	"title": "Selector",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.altinn.studio/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.altinn.studio/tags/architecture/",
	"title": "architecture",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.altinn.studio/tags/arkitektur/",
	"title": "arkitektur",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.altinn.studio/tags/brukerveiledning/",
	"title": "brukerveiledning",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.altinn.studio/tags/build/",
	"title": "build",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.altinn.studio/tags/ci/",
	"title": "ci",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.altinn.studio/tags/dataformat/",
	"title": "dataformat",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.altinn.studio/tags/devops/",
	"title": "devops",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.altinn.studio/tags/documentation/",
	"title": "documentation",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.altinn.studio/tags/guide/",
	"title": "guide",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.altinn.studio/tags/pipeline/",
	"title": "pipeline",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.altinn.studio/tags/pipelines/",
	"title": "pipelines",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.altinn.studio/tags/solution/",
	"title": "solution",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://docs.altinn.studio/tags/tjenester-3.0/",
	"title": "tjenester 3.0",
	"tags": [],
	"description": "",
	"content": ""
}]