on:
  push:
    branches: [ master ]
  pull_request:
name: Test
permissions:
  contents: read
jobs:
  test:
    env:
      GOPROXY: https://proxy.golang.org
      GO111MODULE: on
    strategy:
      matrix:
        # Note: We upgraded to Go 1.18 in Hugo v0.95.0
        # Go 1.18 had some breaking changes on the source level which means Hugo cannot be built
        # with older Go versions, but the improvements in Go 1.18 were too good to pass on (e.g. break and continue).
        # Note that you don't need Go (or Go 1.18) to run a pre-built binary.
        go-version: [1.18.x,1.19.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout code
      uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
    - name: Install Go
      uses: actions/setup-go@268d8c0ca0432bb2cf416faae41297df9d262d7f
      with:
        go-version: ${{ matrix.go-version }}
        check-latest: true
        cache: true
        cache-dependency-path: |
          **/go.sum
          **/go.mod
    - name: Install Ruby
      uses: actions/setup-ruby@5f29a1cd8dfebf420691c4c9a0e832e2fae5a526
      with:
        ruby-version: '2.7'
    - name: Install Python
      uses: actions/setup-python@3105fb18c05ddd93efea5f9e0bef7a03a6e9e7df
      with:
        python-version: '3.x'
    - name: Install Mage
      run: go install github.com/magefile/mage@07afc7d24f4d6d6442305d49552f04fbda5ccb3e
    - name: Install asciidoctor
      uses: reitzig/actions-asciidoctor@7570212ae20b63653481675fb1ff62d1073632b0
    - name: Install docutils
      run: |
        pip install docutils
        rst2html.py --version
    - if: matrix.os == 'ubuntu-latest'
      name: Install pandoc on Linux
      run: |
          sudo apt-get update -y
          sudo apt-get install -y pandoc
    - if: matrix.os == 'macos-latest'
      run: |
        brew install pandoc
    - if: matrix.os == 'windows-latest'
      run: |
        Choco-Install -PackageName pandoc
    - run: pandoc -v
    - if: matrix.os == 'windows-latest'
      run: |
        Choco-Install -PackageName mingw -ArgumentList "--version","10.2.0","--allow-downgrade"
    - if: matrix.os == 'ubuntu-latest'
      name: Install dart-sass-embedded Linux
      run: |
        curl -LJO https://github.com/sass/dart-sass-embedded/releases/download/1.0.0-beta.6/sass_embedded-1.0.0-beta.6-linux-x64.tar.gz;
        echo "04fc1e5e28d29a4585a701941b6dace56771d94bfbe7f9e4db28d24417ceeec3  sass_embedded-1.0.0-beta.6-linux-x64.tar.gz" | sha256sum -c;
        tar -xvf sass_embedded-1.0.0-beta.6-linux-x64.tar.gz;
        echo "$GITHUB_WORKSPACE/sass_embedded/" >> $GITHUB_PATH
    - if: matrix.os == 'macos-latest'
      name: Install dart-sass-embedded MacOS
      run: |
        curl -LJO https://github.com/sass/dart-sass-embedded/releases/download/1.0.0-beta.6/sass_embedded-1.0.0-beta.6-macos-x64.tar.gz;
        echo "b3b984675a9b04aa22f6f2302dda4191b507ac2ca124467db2dfe7e58e72fbad  sass_embedded-1.0.0-beta.6-macos-x64.tar.gz" | shasum -a 256 -c;
        tar -xvf sass_embedded-1.0.0-beta.6-macos-x64.tar.gz;
        echo "$GITHUB_WORKSPACE/sass_embedded/" >> $GITHUB_PATH
    - if: matrix.os == 'windows-latest'
      name: Install dart-sass-embedded Windows
      run: |
        curl -LJO https://github.com/sass/dart-sass-embedded/releases/download/1.0.0-beta.6/sass_embedded-1.0.0-beta.6-windows-x64.zip;
        echo "6ae442129dbb3334bc21ef851261da6c0c1b560da790ca2e1350871d00ab816d  sass_embedded-1.0.0-beta.6-windows-x64.zip" | sha256sum -c;
        unzip sass_embedded-1.0.0-beta.6-windows-x64.zip;
        echo  "$env:GITHUB_WORKSPACE/sass_embedded/" | Out-File -FilePath $Env:GITHUB_PATH -Encoding utf-8 -Append
    - name: Check
      run: |
        mage -v check;
      env:
        HUGO_BUILD_TAGS: extended
    - name: Build Docs
      env:
        HUGO_BUILD_TAGS: extended
        HUGO_TIMEOUT: 31000
        HUGO_IGNOREERRORS: error-remote-getjson
        HUGO_SERVICES_INSTAGRAM_ACCESSTOKEN: dummytoken
      run: |
        mage -v hugo
        ./hugo -s docs/
        ./hugo --renderToMemory -s docs/
