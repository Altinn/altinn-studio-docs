{
  "openapi": "3.0.1",
  "info": {
    "title": "Altinn Platform Events",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://platform.tt02.altinn.no/events/api/v1",
      "description": "TT02"
    },
    {
      "url": "https://platform.altinn.no/events/api/v1",
      "description": "Production"
    }
  ],
  "paths": {
    "/app": {
      "post": {
        "tags": [
          "AppEvents"
        ],
        "summary": "Inserts a new event.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudEventRequestModel"
              },
              "examples": {
                "Instance created event with alternative subject": {
                  "value": {
                    "source": "https://ttd.apps.altinn.no/ttd/apps-test/instances/50015641/a72223a3-926b-4095-a2a6-bacc10815f2d",
                    "specversion": "1.0",
                    "type": "app.instance.created",
                    "subject": "/party/50015641",
                    "alternativesubject": "/person/01017512345"
                  }
                },
                "Instance created event without alternative subject": {
                  "value": {
                    "source": "https://ttd.apps.altinn.no/ttd/apps-test/instances/50067592/f3c92d96-0eb3-4532-a16f-bcafd94bde3a",
                    "specversion": "1.0",
                    "type": "app.instance.created",
                    "subject": "/party/50067592"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/app/{org}/{app}": {
      "get": {
        "tags": [
          "AppEvents"
        ],
        "summary": "Retrieves a set of events related to an application owner based on query parameters.",
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "The organisation short code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app",
            "in": "path",
            "description": "The name of the app",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Id of the latter even that should be included",
            "schema": {
              "type": "string"
            },
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          },
          {
            "name": "from",
            "in": "query",
            "description": "The lower limit for when the cloud event was created in UTC",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2022-02-14 07:22:19Z"
          },
          {
            "name": "to",
            "in": "query",
            "description": "The upper limit for when the cloud event was created in UTC",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2022-06-16 13:37:00Z"
          },
          {
            "name": "party",
            "in": "query",
            "description": "The party id representing the subjects",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 50002108
          },
          {
            "name": "unit",
            "in": "query",
            "description": "The organisation number representing the subject",
            "schema": {
              "type": "string"
            },
            "example": "989271156"
          },
          {
            "name": "person",
            "in": "header",
            "description": "The person number representing the subject",
            "schema": {
              "type": "string"
            },
            "example": "01014922047"
          },
          {
            "name": "type",
            "in": "query",
            "description": "A list of the event types to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              "app.instance.created",
              "app.instance.process.completed"
            ]
          },
          {
            "name": "size",
            "in": "query",
            "description": "The maximum number of events to include in the response",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CloudEvent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/app/party": {
      "get": {
        "tags": [
          "AppEvents"
        ],
        "summary": "Retrieves a set of events related to a party based on query parameters.",
        "parameters": [
          {
            "name": "after",
            "in": "query",
            "description": "Id of the latter event that should be included",
            "schema": {
              "type": "string"
            },
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          },
          {
            "name": "from",
            "in": "query",
            "description": "The lower limit for when the cloud event was created in UTC",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2022-02-14 07:22:19Z"
          },
          {
            "name": "to",
            "in": "query",
            "description": "The upper limit for when the cloud event was created in UTC",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2022-06-16 13:37:00Z"
          },
          {
            "name": "party",
            "in": "query",
            "description": "The party id representing the subjects",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 50002108
          },
          {
            "name": "unit",
            "in": "query",
            "description": "The organisation number representing the subject",
            "schema": {
              "type": "string"
            },
            "example": "989271156"
          },
          {
            "name": "person",
            "in": "header",
            "description": "The person number representing the subject",
            "schema": {
              "type": "string"
            },
            "example": "01014922047"
          },
          {
            "name": "source",
            "in": "query",
            "description": "A list of the sources to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              "https://ttd.apps.at22.altinn.cloud/ttd/apps-test/",
              "https://ttd.apps.at22.altinn.cloud/digdir/bli-tjenesteeier/",
              "https://ttd.apps.at22.altinn.cloud/ttd/apps-%/"
            ]
          },
          {
            "name": "type",
            "in": "query",
            "description": "A list of the event types to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              "app.instance.created",
              "app.instance.process.completed"
            ]
          },
          {
            "name": "size",
            "in": "query",
            "description": "The maximum number of events to include in the response",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CloudEvent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/push": {
      "post": {
        "tags": [
          "Push"
        ],
        "summary": "Alert push controller about a new event.",
        "description": "This method will then identify any matching subscriptions and authorize if the consumer is authorized\r\nto receive event. If autorized it will put it on a outbound queue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudEvent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/subscriptions": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Register an subscription for events.",
        "description": "Requires information about endpoint to post events for subscribers.",
        "requestBody": {
          "description": "The subscription details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionRequestModel"
              },
              "examples": {
                "End user (system) subscribing to events regarding themselves": {
                  "value": {
                    "endpoint": "https://org-reception-func.azurewebsites.net/api/processCompleteInstance?code=APIKEY",
                    "sourceFilter": "https://skd.apps.altinn.no/skd/mva-melding",
                    "alternativeSubjectFilter": "/person/01017512345",
                    "typeFilter": "app.instance.process.completed"
                  }
                },
                "End user (system) subscribing to events regarding an organisation": {
                  "value": {
                    "endpoint": "https://org-reception-func.azurewebsites.net/api/processCompleteInstance?code=APIKEY",
                    "sourceFilter": "https://skd.apps.altinn.no/skd/mva-melding",
                    "alternativeSubjectFilter": "/org/897069651",
                    "typeFilter": "app.instance.process.completed"
                  }
                },
                "Org subscription to events of all their apps": {
                  "value": {
                    "endpoint": "https://org-reception-func.azurewebsites.net/api/processCompleteInstance?code=APIKEY",
                    "sourceFilter": "https://ttd.apps.altinn.no/ttd/%25",
                    "typeFilter": "app.instance.process.completed"
                  }
                },
                "Subscription with Slack webhook": {
                  "value": {
                    "endpoint": "https://hooks.slack.com/services/TSRSASBVNF3/ADRRSDSSSAahttsasdfasFO3w83456ss",
                    "sourceFilter": "https://ttd.apps.altinn.no/ttd/apps-test"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Get all subscription for the authorized consumer",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{id}": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Get a specific subscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subscription"
        ],
        "summary": "Delete a given subscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/validate/{id}": {
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Method to validate an specific subscription. Only avaiable from validation function.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CloudEvent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the id of the event.",
            "nullable": true
          },
          "source": {
            "type": "string",
            "description": "Gets or sets the source of the event.",
            "format": "uri",
            "nullable": true
          },
          "specversion": {
            "type": "string",
            "description": "Gets or sets the specification version of the event.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Gets or sets the type of the event.",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "description": "Gets or sets the subject of the event.",
            "nullable": true
          },
          "time": {
            "type": "string",
            "description": "Gets or sets the time of the event.",
            "format": "date-time",
            "nullable": true
          },
          "alternativesubject": {
            "type": "string",
            "description": "Gets or sets the alternative subject of the event.",
            "nullable": true
          },
          "data": {
            "description": "Gets or sets the cloudEvent data content. The event payload.\r\nThe payload depends on the type and the dataschema.",
            "nullable": true
          },
          "dataschema": {
            "type": "string",
            "description": "Gets or sets the cloudEvent dataschema attribute.\r\nA link to the schema that the data attribute adheres to.",
            "format": "uri",
            "nullable": true
          },
          "contenttype": {
            "$ref": "#/components/schemas/ContentType"
          }
        },
        "additionalProperties": false,
        "description": "Represents a cloud event. Based on CloudEvent: https://github.com/cloudevents/spec/blob/v1.0/spec.md.",
        "example": {
          "id": "bf6145d2-fecb-4947-bdae-ab1d1f5ec1d0",
          "source": "https://ttd.apps.altinn.no/ttd/apps-test/instances/50015641/a72223a3-926b-4095-a2a6-bacc10815f2d",
          "specversion": "1.0",
          "type": "app.instance.created",
          "subject": "/party/50015641",
          "alternativesubject": "/person/27124902369",
          "time": "2020-10-29T07:22:19.438039Z"
        }
      },
      "CloudEventRequestModel": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "description": "Gets or sets the source of the event.",
            "format": "uri",
            "nullable": true
          },
          "specversion": {
            "type": "string",
            "description": "Gets or sets the specification version of the event.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Gets or sets the type of the event.",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "description": "Gets or sets the subject of the event.",
            "nullable": true
          },
          "alternativesubject": {
            "type": "string",
            "description": "Gets or sets the alternative subject of the event.",
            "nullable": true
          },
          "data": {
            "description": "Gets or sets the cloudEvent data content. The event payload.\r\nThe payload depends on the type and the dataschema.",
            "nullable": true
          },
          "dataschema": {
            "type": "string",
            "description": "Gets or sets the cloudEvent dataschema attribute.\r\nA link to the schema that the data attribute adheres to.",
            "format": "uri",
            "nullable": true
          },
          "contenttype": {
            "$ref": "#/components/schemas/ContentType"
          }
        },
        "additionalProperties": false,
        "description": "The model used in the request for registering a new cloud event."
      },
      "ContentType": {
        "type": "object",
        "properties": {
          "boundary": {
            "type": "string",
            "nullable": true
          },
          "charSet": {
            "type": "string",
            "nullable": true
          },
          "mediaType": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": { },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Subscription Id",
            "format": "int32"
          },
          "endPoint": {
            "type": "string",
            "description": "Endpoint to receive matching events",
            "format": "uri",
            "nullable": true
          },
          "sourceFilter": {
            "type": "string",
            "description": "Filter on source",
            "format": "uri",
            "nullable": true
          },
          "subjectFilter": {
            "type": "string",
            "description": "Filter on subject",
            "nullable": true
          },
          "alternativeSubjectFilter": {
            "type": "string",
            "description": "Filter on alternative subject",
            "nullable": true
          },
          "typeFilter": {
            "type": "string",
            "description": "Filter for type. The different sources has different types.",
            "nullable": true
          },
          "consumer": {
            "type": "string",
            "description": "The events consumer",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "description": "Who created this subscription",
            "nullable": true
          },
          "created": {
            "type": "string",
            "description": "When subscription was created",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Class that describes an events subscription",
        "example": {
          "endPoint": "https://enduser-reception-func.azurewebsites.net/api/processCompleteInstance?code=APIKEY",
          "id": 1,
          "sourceFilter": "https://skd.apps.altinn.cloud/skd/mva-melding",
          "subjectFilter": "/party/512345",
          "typeFilter": "app.instance.process.completed",
          "consumer": "/user/12345",
          "createdBy": "/user/12345",
          "created": "2022-07-27T13:14:14.395226Z"
        }
      },
      "SubscriptionList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "The nuber of subscriptions in the list",
            "format": "int32"
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            },
            "description": "The list of subscriptions",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An object containing a list of subscriptions and metadata",
        "example": {
          "count": 2,
          "subscriptions": [
            {
              "endPoint": "https://enduser-reception-func.azurewebsites.net/api/processCompleteInstance?code=APIKEY",
              "id": 1,
              "sourceFilter": "https://skd.apps.altinn.cloud/skd/mva-melding",
              "subjectFilter": "/party/512345",
              "typeFilter": "app.instance.process.completed",
              "consumer": "/user/12345",
              "createdBy": "/user/12345",
              "created": "2022-07-27T13:14:14.395226Z"
            },
            {
              "endPoint": "https://hooks.slack.com/services/ID/CODE",
              "id": 2,
              "sourceFilter": "https://ttd.apps.altinn.cloud/ttd/apps-test",
              "consumer": "/org/ttd",
              "createdBy": "/org/ttd5",
              "created": "2022-08-02T08:49:07.269958Z"
            }
          ]
        }
      },
      "SubscriptionRequestModel": {
        "type": "object",
        "properties": {
          "endPoint": {
            "type": "string",
            "description": "Endpoint to receive matching events",
            "format": "uri",
            "nullable": true
          },
          "sourceFilter": {
            "type": "string",
            "description": "Filter on source",
            "format": "uri",
            "nullable": true
          },
          "subjectFilter": {
            "type": "string",
            "description": "Filter on subject",
            "nullable": true
          },
          "alternativeSubjectFilter": {
            "type": "string",
            "description": "Filter on alternative subject",
            "nullable": true
          },
          "typeFilter": {
            "type": "string",
            "description": "Filter for type. The different sources has different types.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Class that describes the events subscription request model"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Please enter JWT token",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}