{
  "openapi": "3.0.1",
  "info": {
    "title": "Altinn Platform Authentication",
    "version": "v1"
  },
  "paths": {
    "/authentication": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Request that handles the form authentication cookie from SBL",
        "parameters": [
          {
            "name": "goTo",
            "in": "query",
            "description": "The url to redirect to if everything validates ok",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dontChooseReportee",
            "in": "query",
            "description": "Parameter to indicate disabling of reportee selection in Altinn Portal.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Found"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/refresh": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Refreshes JwtToken.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/exchange/{tokenProvider}": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Action for exchanging a JWT generated by a trusted token provider with a new JWT for further use as authentication against rest of Altinn.",
        "parameters": [
          {
            "name": "tokenProvider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "test",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/systemuser/changerequest/vendor": {
      "post": {
        "tags": [
          "ChangeRequestSystemUser"
        ],
        "parameters": [
          {
            "name": "correlation-id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "system-user-id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeRequestSystemUser"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeRequestSystemUser"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeRequestSystemUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRequestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/changerequest/vendor/{requestId}": {
      "get": {
        "tags": [
          "ChangeRequestSystemUser"
        ],
        "summary": "Retrieves the Status (Response model) for a Request\r\nbased only on the Request.Id GUID",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "The UUID for the Request",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRequestResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ChangeRequestSystemUser"
        ],
        "summary": "Used by the Vendors to delete the chosen Request by guid",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRequestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/changerequest/vendor/byexternalref/{systemId}/{orgNo}/{externalRef}": {
      "get": {
        "tags": [
          "ChangeRequestSystemUser"
        ],
        "summary": "Retrieves the Status (Response model) for a Request\r\nbased on the SystemId, OrgNo and the ExternalRef \r\n( which is enforced as a unique combination )",
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "description": "The Id for the chosen Registered System.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalRef",
            "in": "path",
            "description": "The chosen external ref the Vendor sent in to the Create Request",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orgNo",
            "in": "path",
            "description": "The organisation number for the customer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRequestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/changerequest/{party}/{requestId}": {
      "get": {
        "tags": [
          "ChangeRequestSystemUser"
        ],
        "summary": "Used by the BFF to authenticate the PartyId to retrieve the chosen Request by guid",
        "parameters": [
          {
            "name": "party",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRequestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/changerequest/{requestId}": {
      "get": {
        "tags": [
          "ChangeRequestSystemUser"
        ],
        "summary": "Used by the BFF to authenticate the userId to retrieve the chosen Request by guid without partyId",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRequestResponseInternal"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRequestResponseInternal"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRequestResponseInternal"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/changerequest/{party}/{requestId}/approve": {
      "post": {
        "tags": [
          "ChangeRequestSystemUser"
        ],
        "summary": "Approves the systemuser request and updates the system user",
        "parameters": [
          {
            "name": "party",
            "in": "path",
            "description": "the partyId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "requestId",
            "in": "path",
            "description": "The UUID of the request to be approved",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRequestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/changerequest/vendor/bysystem/{systemId}": {
      "get": {
        "tags": [
          "ChangeRequestSystemUser"
        ],
        "summary": "Retrieves a list of Status-Response-model for all Requests that the Vendor has for a given system they own.",
        "operationId": "vendor/changerequest/bysystem",
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "description": "The system the Vendor wants the list for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Optional continuation token",
            "schema": {
              "$ref": "#/components/schemas/GuidOpaque"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRequestResponsePaginated"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRequestResponsePaginated"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRequestResponsePaginated"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/changerequest/{party}/{requestId}/reject": {
      "post": {
        "tags": [
          "ChangeRequestSystemUser"
        ],
        "summary": "Rejects the systemuser request",
        "parameters": [
          {
            "name": "party",
            "in": "path",
            "description": "the partyId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "requestId",
            "in": "path",
            "description": "The UUID of the request to be rejected",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRequestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/introspection": {
      "post": {
        "tags": [
          "Introspection"
        ],
        "summary": "Validates provided token.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "Gets or sets the token"
                  },
                  "token_type_hint": {
                    "type": "string",
                    "description": "Gets or sets the token type hint"
                  }
                }
              },
              "encoding": {
                "token": {
                  "style": "form"
                },
                "token_type_hint": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntrospectionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "get": {
        "tags": [
          "Logout"
        ],
        "summary": "Logs out user",
        "responses": {
          "302": {
            "description": "Found"
          }
        }
      }
    },
    "/logout/handleloggedout": {
      "get": {
        "tags": [
          "Logout"
        ],
        "summary": "Redirects user to specific url if AltinnLogoutInfo is set",
        "responses": {
          "302": {
            "description": "Found"
          }
        }
      }
    },
    "/frontchannel_logout": {
      "get": {
        "tags": [
          "Logout"
        ],
        "summary": "Frontchannel logout for OIDC",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/openid/.well-known/openid-configuration": {
      "get": {
        "tags": [
          "OpenId"
        ],
        "summary": "Returns a discovery document",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryDocument"
                }
              }
            }
          }
        }
      }
    },
    "/openid/.well-known/openid-configuration/jwks": {
      "get": {
        "tags": [
          "OpenId"
        ],
        "summary": "Returns the JSON Web Key Set to use when validating a token.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JwksDocument"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/request/vendor": {
      "post": {
        "tags": [
          "RequestSystemUser"
        ],
        "summary": "Creates a new Request based on a SystemId for a SystemUser.",
        "requestBody": {
          "description": "The request model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRequestSystemUser"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRequestSystemUser"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRequestSystemUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponse"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/request/vendor/agent": {
      "post": {
        "tags": [
          "RequestSystemUser"
        ],
        "summary": "Creates a new system user request of type agent based on a specified system ID.",
        "requestBody": {
          "description": "The request model containing details for the agent system user.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAgentRequestSystemUser"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAgentRequestSystemUser"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAgentRequestSystemUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgentRequestSystemResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentRequestSystemResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentRequestSystemResponse"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/request/vendor/{requestId}": {
      "get": {
        "tags": [
          "RequestSystemUser"
        ],
        "summary": "Retrieves the Status (Response model) for a Request\r\nbased only on the Request.Id GUID",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "The UUID for the Request",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RequestSystemUser"
        ],
        "summary": "Used by the Vendors to delete the chosen Request by guid",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponse"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/request/vendor/agent/{requestId}": {
      "get": {
        "tags": [
          "RequestSystemUser"
        ],
        "summary": "Retrieves the status of an agent system user request based on the request's unique identifier (UUID).",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "The unique identifier (UUID) of the agent system user request.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgentRequestSystemResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentRequestSystemResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentRequestSystemResponse"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/request/vendor/byexternalref/{systemId}/{orgNo}/{externalRef}": {
      "get": {
        "tags": [
          "RequestSystemUser"
        ],
        "summary": "Retrieves the Status (Response model) for a Request\r\nbased on the SystemId, OrgNo and the ExternalRef \r\n( which is enforced as a unique combination )",
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "description": "The Id for the chosen Registered System.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalRef",
            "in": "path",
            "description": "The chosen external ref the Vendor sent in to the Create Request",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orgNo",
            "in": "path",
            "description": "The organisation number for the customer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponse"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/request/vendor/agent/byexternalref/{systemId}/{orgNo}/{externalRef}": {
      "get": {
        "tags": [
          "RequestSystemUser"
        ],
        "summary": "Retrieves the status of an agent system user request based on the unique combination of identifiers (system ID, organization number, and external reference).",
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "description": "The ID of the registered system.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalRef",
            "in": "path",
            "description": "The external reference provided by the vendor.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orgNo",
            "in": "path",
            "description": "The organization number of the customer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponse"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/request/{party}/{requestId}": {
      "get": {
        "tags": [
          "RequestSystemUser"
        ],
        "summary": "Used by the BFF to authenticate the PartyId to retrieve the chosen Request by guid",
        "parameters": [
          {
            "name": "party",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponse"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/request/{requestId}": {
      "get": {
        "tags": [
          "RequestSystemUser"
        ],
        "summary": "Used by the BFF to retrieve the chosen Request by Guid Id alone,\r\nauthorized manually via pdp that the logged in user can access the request.",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponse"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/request/agent/{party}/{requestId}": {
      "get": {
        "tags": [
          "RequestSystemUser"
        ],
        "summary": "Used by the BFF to authenticate the PartyId to retrieve the chosen Request by guid\r\nIs different from the Vendor endpoint, since this authenticates the Facilitator and not the Vendor",
        "parameters": [
          {
            "name": "party",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgentRequestSystemResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentRequestSystemResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentRequestSystemResponse"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/request/agent/{requestId}": {
      "get": {
        "tags": [
          "RequestSystemUser"
        ],
        "summary": "Used by the BFF to authenticate the PartyId to retrieve the chosen Request by guid\r\nIs different from the Vendor endpoint, since this authenticates the Facilitator and not the Vendor",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponseInternal"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponseInternal"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponseInternal"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/request/{party}/{requestId}/approve": {
      "post": {
        "tags": [
          "RequestSystemUser"
        ],
        "summary": "Approves the systemuser requet and creates a system user",
        "parameters": [
          {
            "name": "party",
            "in": "path",
            "description": "the partyId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "requestId",
            "in": "path",
            "description": "The UUID of the request to be approved",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponse"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/request/agent/{party}/{requestId}/approve": {
      "post": {
        "tags": [
          "RequestSystemUser"
        ],
        "summary": "Approves the systemuser request of type agent and creates a system user of type agent",
        "parameters": [
          {
            "name": "party",
            "in": "path",
            "description": "the partyId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "requestId",
            "in": "path",
            "description": "The UUID of the request to be approved",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgentRequestSystemResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentRequestSystemResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentRequestSystemResponse"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/request/vendor/bysystem/{systemId}": {
      "get": {
        "tags": [
          "RequestSystemUser"
        ],
        "summary": "Retrieves a list of Status-Response-model for all Requests that the Vendor has for a given system they own.",
        "operationId": "vendor/bysystem",
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "description": "The system the Vendor wants the list for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Optional continuation token",
            "schema": {
              "$ref": "#/components/schemas/GuidOpaque"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponsePaginated"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponsePaginated"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponsePaginated"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/request/vendor/agent/bysystem/{systemId}": {
      "get": {
        "tags": [
          "RequestSystemUser"
        ],
        "summary": "Retrieves a paginated list of all system user requests of type agent for a given system owned by the vendor.",
        "operationId": "vendor/bysystem/agent",
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "description": "The ID of the system the Vendor owns",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Optional continuation token",
            "schema": {
              "$ref": "#/components/schemas/GuidOpaque"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgentRequestSystemResponsePaginated"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentRequestSystemResponsePaginated"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentRequestSystemResponsePaginated"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/request/{party}/{requestId}/reject": {
      "post": {
        "tags": [
          "RequestSystemUser"
        ],
        "summary": "Rejects the systemuser request",
        "parameters": [
          {
            "name": "party",
            "in": "path",
            "description": "the partyId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "requestId",
            "in": "path",
            "description": "The UUID of the request to be rejected",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestSystemResponse"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/request/agent/{party}/{requestId}/reject": {
      "post": {
        "tags": [
          "RequestSystemUser"
        ],
        "summary": "Rejects the systemuser request of type agent",
        "parameters": [
          {
            "name": "party",
            "in": "path",
            "description": "the partyId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "requestId",
            "in": "path",
            "description": "The UUID of the request to be rejected",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/systemregister": {
      "get": {
        "tags": [
          "SystemRegister"
        ],
        "summary": "Retrieves the List of all the Registered Systems, except those marked as deleted.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegisteredSystemDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegisteredSystemDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegisteredSystemDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/systemregister/vendor": {
      "get": {
        "tags": [
          "SystemRegister"
        ],
        "summary": "Retrieves the List of all the Registered Systems, except those marked as deleted.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegisteredSystemDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegisteredSystemDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegisteredSystemDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SystemRegister"
        ],
        "summary": "Create a new System",
        "requestBody": {
          "description": "The descriptor model of a new Registered System",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterSystemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterSystemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterSystemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      }
    },
    "/systemregister/{systemId}": {
      "get": {
        "tags": [
          "SystemRegister"
        ],
        "summary": "Retrieves a Registered System frontend DTO for the systemId.",
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "description": "The Id of the Registered System",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RegisteredSystemDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisteredSystemDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisteredSystemDTO"
                }
              }
            }
          }
        }
      }
    },
    "/systemregister/vendor/{systemId}": {
      "get": {
        "tags": [
          "SystemRegister"
        ],
        "summary": "Retrieves a Registered System for the systemId.",
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "description": "The Id of the Registered System",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RegisteredSystemResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisteredSystemResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisteredSystemResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SystemRegister"
        ],
        "summary": "Replaces the entire registered system",
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "description": "The Id of the Registered System",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated system model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterSystemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterSystemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterSystemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SystemRegisterUpdateResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemRegisterUpdateResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemRegisterUpdateResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SystemRegister"
        ],
        "summary": "Set the registered system to be deleted.",
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "description": "The human readable string id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SystemRegisterUpdateResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemRegisterUpdateResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemRegisterUpdateResult"
                }
              }
            }
          }
        }
      }
    },
    "/systemregister/{systemId}/rights": {
      "get": {
        "tags": [
          "SystemRegister"
        ],
        "summary": "Retrieves a list of the predfined default rights for the Product type, if any",
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "description": "The Id of the Product",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useOldFormatForApp",
            "in": "query",
            "description": "The old format for the App",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Right"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Right"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Right"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/systemregister/{systemId}/accesspackages": {
      "get": {
        "tags": [
          "SystemRegister"
        ],
        "summary": "Retrieves a list of the predfined default rights for the Product type, if any",
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "description": "The Id of the Product",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useOldFormatForApp",
            "in": "query",
            "description": "The old format for the App",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessPackage"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessPackage"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessPackage"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/systemregister/vendor/{systemId}/rights": {
      "put": {
        "tags": [
          "SystemRegister"
        ],
        "summary": "Updates the rights on a registered system",
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "description": "The human readable string id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "A list of rights",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Right"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Right"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Right"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SystemRegisterUpdateResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemRegisterUpdateResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemRegisterUpdateResult"
                }
              }
            }
          }
        }
      }
    },
    "/systemregister/vendor/{systemId}/accesspackages": {
      "put": {
        "tags": [
          "SystemRegister"
        ],
        "summary": "Updates the rights on a registered system",
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "description": "The human readable string id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "A list of access packages",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccessPackage"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccessPackage"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccessPackage"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SystemRegisterUpdateResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemRegisterUpdateResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemRegisterUpdateResult"
                }
              }
            }
          }
        }
      }
    },
    "/systemregister/vendor/{systemId}/changelog": {
      "get": {
        "tags": [
          "SystemRegister"
        ],
        "summary": "Gets the change log for a specific system identified by its internal ID.",
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "description": "the system internal id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SystemChangeLog"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SystemChangeLog"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SystemChangeLog"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/{party}": {
      "get": {
        "tags": [
          "SystemUser"
        ],
        "summary": "Returns the list of Default SystemUsers this PartyID has registered.\r\nNo Agent SystemUsers are returned, use the other endpoint for them.",
        "parameters": [
          {
            "name": "party",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SystemUser"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SystemUser"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SystemUser"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/agent/{party}": {
      "get": {
        "tags": [
          "SystemUser"
        ],
        "summary": "Returns the list of SystemUsers this PartyID has registered",
        "parameters": [
          {
            "name": "party",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SystemUser"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SystemUser"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SystemUser"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/agent/{party}/{facilitator}/{systemUserId}/delegations": {
      "get": {
        "tags": [
          "SystemUser"
        ],
        "summary": "Get list of delegations to this agent systemuser",
        "parameters": [
          {
            "name": "party",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "facilitator",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "systemUserId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DelegationResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DelegationResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DelegationResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/{party}/{systemUserId}": {
      "get": {
        "tags": [
          "SystemUser"
        ],
        "summary": "Return a single SystemUser by PartyId and SystemUserId",
        "parameters": [
          {
            "name": "party",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "systemUserId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SystemUser"
        ],
        "summary": "Set the Delete flag on the identified SystemUser",
        "parameters": [
          {
            "name": "party",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "systemUserId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/byExternalId": {
      "get": {
        "tags": [
          "SystemUser"
        ],
        "summary": "Used by MaskinPorten, to find if a given systemOrg owns a SystemUser Integration for a Vendor's Product, by an ExternalId",
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "description": "The unique id maintained by MaskinPorten tying their clients to the Registered Systems the ServiceProivders have created in our db.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "systemProviderOrgNo",
            "in": "query",
            "description": "The legal number (Orgno) of the Vendor creating the Registered System (Accounting system)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "systemUserOwnerOrgNo",
            "in": "query",
            "description": "The legal number (Orgno) of the party owning the System User Integration. (The ReporteeOrgno)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalRef",
            "in": "query",
            "description": "The External Reference is provided by the Vendor, and is used to identify their Customer in the Vendor's system.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/systemuser": {
      "put": {
        "tags": [
          "SystemUser"
        ],
        "summary": "Replaces the values for the existing system user with those from the update.",
        "requestBody": {
          "description": "The DTO describing the updateed SystemUser.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemUserUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemUserUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SystemUserUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/vendor/byquery": {
      "get": {
        "tags": [
          "SystemUser"
        ],
        "summary": "An endpoint where the Vendor can retrieve a SystemUser\r\nby the organisation number, system-id and optionally the external-ref",
        "operationId": "vendor/byquery",
        "parameters": [
          {
            "name": "system-id",
            "in": "query",
            "description": "Required: the id the vendor system used",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "external-ref",
            "in": "query",
            "description": "Optional: a disambiguation string",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orgno",
            "in": "query",
            "description": "Required: the organisation number for the Reportee (owner of the SystemUser)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SystemUser"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemUser"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/vendor/bysystem/{systemId}": {
      "get": {
        "tags": [
          "SystemUser"
        ],
        "summary": "Retrieves a list of SystemUsers the Vendor has for a given system they own.",
        "operationId": "vendor/systemusers/bysystem",
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "description": "The system the Vendor wants the list for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "Optional continuation token",
            "schema": {
              "$ref": "#/components/schemas/Int64Opaque"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SystemUserPaginated"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemUserPaginated"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemUserPaginated"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/internal/systemusers/stream": {
      "get": {
        "tags": [
          "SystemUser"
        ],
        "summary": "Retrieves a list of all SystemUsers for internal use, \r\ncalled by the Register",
        "operationId": "internal/systemusers/stream",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Optional continuation token",
            "schema": {
              "$ref": "#/components/schemas/Int64Opaque"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SystemUserRegisterDTOItemStream"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemUserRegisterDTOItemStream"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemUserRegisterDTOItemStream"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/{party}/create": {
      "post": {
        "tags": [
          "SystemUser"
        ],
        "summary": "Creates a new SystemUser.",
        "parameters": [
          {
            "name": "party",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemUserRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemUserRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SystemUserRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemUser"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/agent/{party}/{systemUserId}/delegation": {
      "post": {
        "tags": [
          "SystemUser"
        ],
        "summary": "Creates a new delegation of a customer to an Agent SystemUser.\r\nThe endpoint is idempotent.",
        "parameters": [
          {
            "name": "party",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "systemUserId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentDelegationInputDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentDelegationInputDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AgentDelegationInputDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DelegationResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/agent/{party}/delegation/{delegationId}": {
      "delete": {
        "tags": [
          "SystemUser"
        ],
        "summary": "Delete a customer from an Agent SystemUser.",
        "parameters": [
          {
            "name": "party",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "delegationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "facilitatorId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/agent/{party}/{systemUserId}": {
      "delete": {
        "tags": [
          "SystemUser"
        ],
        "summary": "Delete an Agent SystemUser.",
        "parameters": [
          {
            "name": "party",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "systemUserId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "facilitatorId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/agent/{party}/clients": {
      "get": {
        "tags": [
          "SystemUser"
        ],
        "summary": "Get list of clients for a facilitator",
        "parameters": [
          {
            "name": "facilitator",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "packages",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "party",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/systemuser/{party}/{systemUserId}/delegations": {
      "get": {
        "tags": [
          "SystemUser"
        ],
        "summary": "Get list of delegations for a standard systemuser",
        "parameters": [
          {
            "name": "party",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "systemUserId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StandardSystemUserDelegations"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardSystemUserDelegations"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardSystemUserDelegations"
                }
              }
            }
          }
        }
      }
    },
    "/enduser/systemuser/clients/available": {
      "get": {
        "tags": [
          "SystemUserClientDelegation"
        ],
        "summary": "Get Clients who can delegate to the system user",
        "parameters": [
          {
            "name": "agent",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClientInfoClientInfoPaginated"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientInfoClientInfoPaginated"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientInfoClientInfoPaginated"
                }
              }
            }
          }
        }
      }
    },
    "/enduser/systemuser/clients": {
      "get": {
        "tags": [
          "SystemUserClientDelegation"
        ],
        "summary": "Get the list of clients that have been delegated to the specified system user",
        "parameters": [
          {
            "name": "agent",
            "in": "query",
            "description": "the agent system user id",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClientInfoClientInfoPaginated"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientInfoClientInfoPaginated"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientInfoClientInfoPaginated"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SystemUserClientDelegation"
        ],
        "summary": "Delegate a client to the system user",
        "parameters": [
          {
            "name": "agent",
            "in": "query",
            "description": "the unique identifier of the system user",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "client",
            "in": "query",
            "description": "the customer identifier for delegating to the agent",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClientDelegationResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientDelegationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientDelegationResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SystemUserClientDelegation"
        ],
        "summary": "Remove a client to the system user",
        "parameters": [
          {
            "name": "agent",
            "in": "query",
            "description": "the unique identifier of the system user",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "client",
            "in": "query",
            "description": "the id of the customer",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DelegationResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DelegationResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DelegationResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/enduser/systemuser/agents": {
      "get": {
        "tags": [
          "SystemUserClientDelegation"
        ],
        "summary": "Retrieves a list of all agent system users associated with the authenticated party.",
        "description": "This method requires the caller to be authenticated and authorized with the Altinn.Platform.Authentication.Core.Constants.AuthzConstants.POLICY_CLIENTDELEGATION_READ policy. The party ID is determined based on the\r\n            caller's authentication context.",
        "parameters": [
          {
            "name": "party",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SystemUser"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SystemUser"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SystemUser"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessPackage": {
        "type": "object",
        "properties": {
          "urn": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AgentDelegationInputDto": {
        "required": [
          "customerId",
          "facilitatorId"
        ],
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "facilitatorId": {
            "type": "string",
            "nullable": true
          },
          "access": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientRoleAccessPackages"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AgentRequestSystemResponse": {
        "required": [
          "accessPackages",
          "id",
          "partyOrgNo",
          "status",
          "systemId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "externalRef": {
            "type": "string",
            "nullable": true
          },
          "systemId": {
            "minLength": 1,
            "type": "string"
          },
          "partyOrgNo": {
            "minLength": 1,
            "type": "string"
          },
          "accessPackages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessPackage"
            }
          },
          "status": {
            "minLength": 1,
            "type": "string"
          },
          "redirectUrl": {
            "type": "string",
            "nullable": true
          },
          "confirmUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AgentRequestSystemResponsePaginated": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentRequestSystemResponse"
            },
            "description": "The items.",
            "nullable": true
          },
          "links": {
            "$ref": "#/components/schemas/PaginatedLinks"
          }
        },
        "additionalProperties": false,
        "description": "A paginated Altinn.Platform.Authentication.Model.ListObject`1."
      },
      "AttributePair": {
        "required": [
          "id",
          "value"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "value": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ChangeRequestResponse": {
        "required": [
          "id",
          "partyOrgNo",
          "status",
          "systemId",
          "systemUserId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "externalRef": {
            "type": "string",
            "nullable": true
          },
          "systemId": {
            "minLength": 1,
            "type": "string"
          },
          "systemUserId": {
            "type": "string",
            "format": "uuid"
          },
          "partyOrgNo": {
            "minLength": 1,
            "type": "string"
          },
          "requiredRights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Right"
            },
            "nullable": true
          },
          "unwantedRights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Right"
            },
            "nullable": true
          },
          "requiredAccessPackages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessPackage"
            },
            "nullable": true
          },
          "unwantedAccessPackages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessPackage"
            },
            "nullable": true
          },
          "status": {
            "minLength": 1,
            "type": "string"
          },
          "redirectUrl": {
            "type": "string",
            "nullable": true
          },
          "confirmUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangeRequestResponseInternal": {
        "required": [
          "id",
          "partyId",
          "partyOrgNo",
          "partyUuid",
          "status",
          "systemId",
          "systemUserId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "externalRef": {
            "type": "string",
            "nullable": true
          },
          "systemId": {
            "minLength": 1,
            "type": "string"
          },
          "systemUserId": {
            "type": "string",
            "format": "uuid"
          },
          "partyOrgNo": {
            "minLength": 1,
            "type": "string"
          },
          "partyId": {
            "type": "integer",
            "format": "int32"
          },
          "partyUuid": {
            "type": "string",
            "format": "uuid"
          },
          "requiredRights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Right"
            },
            "nullable": true
          },
          "unwantedRights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Right"
            },
            "nullable": true
          },
          "requiredAccessPackages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessPackage"
            },
            "nullable": true
          },
          "unwantedAccessPackages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessPackage"
            },
            "nullable": true
          },
          "status": {
            "minLength": 1,
            "type": "string"
          },
          "redirectUrl": {
            "type": "string",
            "nullable": true
          },
          "confirmUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangeRequestResponsePaginated": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeRequestResponse"
            },
            "description": "The items.",
            "nullable": true
          },
          "links": {
            "$ref": "#/components/schemas/PaginatedLinks"
          }
        },
        "additionalProperties": false,
        "description": "A paginated Altinn.Platform.Authentication.Model.ListObject`1."
      },
      "ChangeRequestSystemUser": {
        "type": "object",
        "properties": {
          "requiredRights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Right"
            },
            "nullable": true
          },
          "unwantedRights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Right"
            },
            "nullable": true
          },
          "requiredAccessPackages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessPackage"
            },
            "nullable": true
          },
          "unwantedAccessPackages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessPackage"
            },
            "nullable": true
          },
          "redirectUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClientDelegationResponse": {
        "type": "object",
        "properties": {
          "agent": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the agent.",
            "format": "uuid"
          },
          "client": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the client.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Represents the response containing delegation details between an agent and a client."
      },
      "ClientInfo": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the client.",
            "format": "uuid"
          },
          "clientOrganizationNumber": {
            "type": "string",
            "description": "Gets or sets the organization number associated with the client.",
            "nullable": true
          },
          "clientOrganizationName": {
            "type": "string",
            "description": "Gets or sets the name of the client organization.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents information about a client, including their organization number and name."
      },
      "ClientInfoClientInfoPaginated": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientInfo"
            },
            "description": "The items.",
            "nullable": true
          },
          "links": {
            "$ref": "#/components/schemas/PaginatedLinks"
          },
          "systemUserInformation": {
            "$ref": "#/components/schemas/SystemUserInfo"
          }
        },
        "additionalProperties": false,
        "description": "A paginated Altinn.Platform.Authentication.Model.ListObject`1."
      },
      "ClientRoleAccessPackages": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "nullable": true
          },
          "packages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateAgentRequestSystemUser": {
        "required": [
          "accessPackages",
          "partyOrgNo",
          "systemId"
        ],
        "type": "object",
        "properties": {
          "externalRef": {
            "type": "string",
            "nullable": true
          },
          "systemId": {
            "minLength": 1,
            "type": "string"
          },
          "partyOrgNo": {
            "minLength": 1,
            "type": "string"
          },
          "accessPackages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessPackage"
            }
          },
          "redirectUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateRequestSystemUser": {
        "required": [
          "partyOrgNo",
          "systemId"
        ],
        "type": "object",
        "properties": {
          "externalRef": {
            "type": "string",
            "nullable": true
          },
          "systemId": {
            "minLength": 1,
            "type": "string"
          },
          "partyOrgNo": {
            "minLength": 1,
            "type": "string"
          },
          "rights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Right"
            },
            "nullable": true
          },
          "accessPackages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessPackage"
            },
            "nullable": true
          },
          "redirectUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Customer": {
        "required": [
          "displayName",
          "organizationIdentifier",
          "partyUuid"
        ],
        "type": "object",
        "properties": {
          "partyUuid": {
            "type": "string",
            "format": "uuid"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "organizationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "access": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientRoleAccessPackages"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DelegationResponse": {
        "required": [
          "agentSystemUserId",
          "delegationId"
        ],
        "type": "object",
        "properties": {
          "agentSystemUserId": {
            "type": "string",
            "format": "uuid"
          },
          "delegationId": {
            "type": "string",
            "format": "uuid"
          },
          "customerId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "assignmentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "customerName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DiscoveryDocument": {
        "type": "object",
        "properties": {
          "issuer": {
            "type": "string",
            "description": "URL of the issuer",
            "nullable": true
          },
          "jwks_uri": {
            "type": "string",
            "description": "URL of the JSON Web Key Set document.",
            "nullable": true
          },
          "authorization_endpoint": {
            "type": "string",
            "description": "URL of the OAuth 2.0 Authorization Endpoint.",
            "nullable": true
          },
          "token_endpoint": {
            "type": "string",
            "description": "URL of the OAuth 2.0 Token Endpoint.",
            "nullable": true
          },
          "userinfo_endpoint": {
            "type": "string",
            "description": "Url of the UserInfo Endpoint.",
            "nullable": true
          },
          "end_session_endpoint": {
            "type": "string",
            "description": "URL of the end session Endpoint.",
            "nullable": true
          },
          "check_session_iframe": {
            "type": "string",
            "description": "URL for the session check Endpoint.",
            "nullable": true
          },
          "revocation_endpoint": {
            "type": "string",
            "description": "URL for the revocation endpoint.",
            "nullable": true
          },
          "introspection_endpoint": {
            "type": "string",
            "description": "URL for the introspection endpoint.",
            "nullable": true
          },
          "frontchannel_logout_supported": {
            "type": "boolean",
            "description": "Value indicating whether there is a front channel mechanism for logout.",
            "nullable": true
          },
          "frontchannel_logout_session_supported": {
            "type": "boolean",
            "description": "Value indicating wheter there is a front channel mechanism for session logout.",
            "nullable": true
          },
          "scopes_supported": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of supported scopes.",
            "nullable": true
          },
          "claims_supported": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of supported claims.",
            "nullable": true
          },
          "response_types_supported": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of supported response types.",
            "nullable": true
          },
          "response_modes_supported": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of supported response modes.",
            "nullable": true
          },
          "grant_types_supported": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of supported grant types.",
            "nullable": true
          },
          "subject_types_supported": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of supported subject types.",
            "nullable": true
          },
          "id_token_signing_alg_values_supported": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of supported signing algorithms.",
            "nullable": true
          },
          "token_endpoint_auth_methods_supported": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of supported authentication methods on the token endpoint.",
            "nullable": true
          },
          "code_challenge_methods_supported": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of supported code challenge methods.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the well known discovery document described by \"OpenID Connect Discovery 1.0 incorporating errata set 1\"\r\nURL: https://openid.net/specs/openid-connect-discovery-1_0.html (and other specifications)"
      },
      "GuidOpaque": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Gets the inner value.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "\r\nAn opaque value is a value that can be transmitted to another party\r\n                without divulging any type information or expectations about the value.\r\n\r\nOpaque values are typically usefull in APIs where the server wants to\r\n                be able to return a value that the client later needs to send back to\r\n                the server, but where the server does not want to expose the type of\r\n                the value to the client. For instance, in a pagination scenario, the\r\n                server can use an opaque int to do pagination by page number, while\r\n                allowing itself to later change the implementation to use a cursor\r\n                instead of a page number without breaking the API."
      },
      "Int64Opaque": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "description": "Gets the inner value.",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "\r\nAn opaque value is a value that can be transmitted to another party\r\n                without divulging any type information or expectations about the value.\r\n\r\nOpaque values are typically usefull in APIs where the server wants to\r\n                be able to return a value that the client later needs to send back to\r\n                the server, but where the server does not want to expose the type of\r\n                the value to the client. For instance, in a pagination scenario, the\r\n                server can use an opaque int to do pagination by page number, while\r\n                allowing itself to later change the implementation to use a cursor\r\n                instead of a page number without breaking the API."
      },
      "IntrospectionResponse": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Gets or sects the active property indicating if the request token was valid"
          },
          "iss": {
            "type": "string",
            "description": "Gets or sets the issuer of the validated request token.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Introspection response object"
      },
      "ItemStreamStats": {
        "type": "object",
        "properties": {
          "pageStart": {
            "type": "integer",
            "description": "The first item on the page.",
            "format": "int64"
          },
          "pageEnd": {
            "type": "integer",
            "description": "The last item on the page.",
            "format": "int64"
          },
          "sequenceMax": {
            "type": "integer",
            "description": "The highest item in the database.",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "Item stream statistics."
      },
      "JwkDocument": {
        "type": "object",
        "properties": {
          "kty": {
            "type": "string",
            "description": "Gets or sets the type of key this is. E.g. RSA",
            "nullable": true
          },
          "use": {
            "type": "string",
            "description": "Gets or sets the type of use. E.g. sig",
            "nullable": true
          },
          "kid": {
            "type": "string",
            "description": "Gets or sets a unique id for the key.",
            "nullable": true
          },
          "e": {
            "type": "string",
            "description": "Gets or sets the RSA exponent value of the key.",
            "nullable": true
          },
          "n": {
            "type": "string",
            "description": "Gets or sets the RSA modulus value of the key.",
            "nullable": true
          },
          "x5c": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets a list of base64 encoded certificate where each new item is the parent certificate of the previous in a certificate chain.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a Json Wen Key as described by \"JSON Web Key (JWK) draft-ietf-jose-json-web-key-41\"\r\nURL: https://tools.ietf.org/html/draft-ietf-jose-json-web-key-41"
      },
      "JwksDocument": {
        "type": "object",
        "properties": {
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JwkDocument"
            },
            "description": "Gets or sets the list of keys in the key set.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a Json Wen Key set as described by \"JSON Web Key (JWK) draft-ietf-jose-json-web-key-41\"\r\nURL: https://tools.ietf.org/html/draft-ietf-jose-json-web-key-41"
      },
      "PaginatedLinks": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "description": "Link to the next page of items (if any).",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Pagination links."
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "RegisterSystemRequest": {
        "required": [
          "description",
          "id",
          "name",
          "vendor"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "vendor": {
            "$ref": "#/components/schemas/VendorInfo"
          },
          "name": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "description": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "rights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Right"
            },
            "nullable": true
          },
          "accessPackages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessPackage"
            },
            "nullable": true
          },
          "clientId": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isVisible": {
            "type": "boolean"
          },
          "allowedRedirectUrls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisteredSystemDTO": {
        "required": [
          "description",
          "name",
          "systemId",
          "systemVendorOrgNumber"
        ],
        "type": "object",
        "properties": {
          "systemId": {
            "type": "string",
            "nullable": true
          },
          "systemVendorOrgNumber": {
            "type": "string",
            "nullable": true
          },
          "systemVendorOrgName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "description": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "rights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Right"
            },
            "nullable": true
          },
          "accessPackages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessPackage"
            },
            "nullable": true
          },
          "isVisible": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RegisteredSystemResponse": {
        "required": [
          "description",
          "id",
          "name",
          "vendor"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "vendor": {
            "$ref": "#/components/schemas/VendorInfo"
          },
          "name": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "description": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "rights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Right"
            },
            "nullable": true
          },
          "accessPackages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessPackage"
            },
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "clientId": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isVisible": {
            "type": "boolean"
          },
          "allowedRedirectUrls": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestSystemResponse": {
        "required": [
          "accessPackages",
          "id",
          "partyOrgNo",
          "rights",
          "status",
          "systemId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "externalRef": {
            "type": "string",
            "nullable": true
          },
          "systemId": {
            "minLength": 1,
            "type": "string"
          },
          "partyOrgNo": {
            "minLength": 1,
            "type": "string"
          },
          "rights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Right"
            }
          },
          "accessPackages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessPackage"
            }
          },
          "status": {
            "minLength": 1,
            "type": "string"
          },
          "redirectUrl": {
            "type": "string",
            "nullable": true
          },
          "confirmUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestSystemResponseInternal": {
        "required": [
          "accessPackages",
          "id",
          "partyOrgNo",
          "rights",
          "status",
          "systemId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "externalRef": {
            "type": "string",
            "nullable": true
          },
          "systemId": {
            "minLength": 1,
            "type": "string"
          },
          "partyOrgNo": {
            "minLength": 1,
            "type": "string"
          },
          "partyId": {
            "type": "integer",
            "format": "int32"
          },
          "partyUuid": {
            "type": "string",
            "format": "uuid"
          },
          "rights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Right"
            }
          },
          "accessPackages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessPackage"
            }
          },
          "status": {
            "minLength": 1,
            "type": "string"
          },
          "redirectUrl": {
            "type": "string",
            "nullable": true
          },
          "confirmUrl": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "systemUserType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestSystemResponsePaginated": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestSystemResponse"
            },
            "description": "The items.",
            "nullable": true
          },
          "links": {
            "$ref": "#/components/schemas/PaginatedLinks"
          }
        },
        "additionalProperties": false,
        "description": "A paginated Altinn.Platform.Authentication.Model.ListObject`1."
      },
      "Right": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "nullable": true
          },
          "resource": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributePair"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StandardSystemUserDelegations": {
        "type": "object",
        "properties": {
          "systemUserId": {
            "type": "string",
            "format": "uuid"
          },
          "rights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Right"
            },
            "nullable": true
          },
          "accessPackages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessPackage"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SystemChangeLog": {
        "type": "object",
        "properties": {
          "systemInternalId": {
            "type": "string",
            "format": "uuid"
          },
          "changedByOrgNumber": {
            "type": "string",
            "nullable": true
          },
          "changeType": {
            "$ref": "#/components/schemas/SystemChangeType"
          },
          "changedData": {
            "nullable": true
          },
          "clientId": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SystemChangeType": {
        "enum": [
          "create",
          "update",
          "rightsupdate",
          "accesspackageupdate",
          "delete",
          "unknown"
        ],
        "type": "string"
      },
      "SystemRegisterUpdateResult": {
        "type": "object",
        "properties": {
          "succeeded": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SystemUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "integrationTitle": {
            "type": "string",
            "nullable": true
          },
          "systemId": {
            "type": "string",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "systemInternalId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "partyId": {
            "type": "string",
            "nullable": true
          },
          "partyUuId": {
            "type": "string",
            "nullable": true
          },
          "reporteeOrgNo": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "supplierName": {
            "type": "string",
            "nullable": true
          },
          "supplierOrgno": {
            "type": "string",
            "nullable": true
          },
          "externalRef": {
            "type": "string",
            "nullable": true
          },
          "accessPackages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessPackage"
            },
            "nullable": true
          },
          "userType": {
            "$ref": "#/components/schemas/SystemUserType"
          }
        },
        "additionalProperties": false
      },
      "SystemUserInfo": {
        "type": "object",
        "properties": {
          "systemUserId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the system user.",
            "format": "uuid"
          },
          "systemUserOwnerOrg": {
            "type": "string",
            "description": "Gets or sets the organization associated with the system user.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "information about a system user."
      },
      "SystemUserPaginated": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemUser"
            },
            "description": "The items.",
            "nullable": true
          },
          "links": {
            "$ref": "#/components/schemas/PaginatedLinks"
          }
        },
        "additionalProperties": false,
        "description": "A paginated Altinn.Platform.Authentication.Model.ListObject`1."
      },
      "SystemUserRegisterDTO": {
        "required": [
          "id",
          "integrationTitle",
          "partyId",
          "partyOrgNo"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "partyOrgNo": {
            "type": "string",
            "nullable": true
          },
          "partyId": {
            "type": "string",
            "nullable": true
          },
          "integrationTitle": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "lastChanged": {
            "type": "string",
            "format": "date-time"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "sequenceNo": {
            "type": "integer",
            "format": "int64"
          },
          "systemUserType": {
            "$ref": "#/components/schemas/SystemUserType"
          }
        },
        "additionalProperties": false
      },
      "SystemUserRegisterDTOItemStream": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemUserRegisterDTO"
            },
            "description": "The items.",
            "nullable": true
          },
          "links": {
            "$ref": "#/components/schemas/PaginatedLinks"
          },
          "stats": {
            "$ref": "#/components/schemas/ItemStreamStats"
          }
        },
        "additionalProperties": false,
        "description": "A stream of all <typeparamref name=\"T\" /> items in a data source."
      },
      "SystemUserRequestDto": {
        "type": "object",
        "properties": {
          "integrationTitle": {
            "type": "string",
            "nullable": true
          },
          "systemId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SystemUserType": {
        "enum": [
          "standard",
          "agent"
        ],
        "type": "string"
      },
      "SystemUserUpdateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "partyId": {
            "type": "string",
            "nullable": true
          },
          "reporteeOrgNo": {
            "type": "string",
            "nullable": true
          },
          "integrationTitle": {
            "type": "string",
            "nullable": true
          },
          "systemId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VendorInfo": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}
