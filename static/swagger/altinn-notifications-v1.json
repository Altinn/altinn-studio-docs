{
  "openapi": "3.0.1",
  "info": {
    "title": "Altinn.Notifications",
    "version": "1.0"
  },
	"servers": [
		{
		  "url": "https://platform.tt02.altinn.no/notifications/api/v1",
		  "description": "TT02"
		},
		{
		  "url": "https://platform.altinn.no/notifications/api/v1",
		  "description": "Production"
		}
	  ],
  "paths": {
    "/orders/email": {
      "post": {
        "tags": [
          "EmailNotificationOrders"
        ],
        "summary": "Add an email notification order.",
        "description": "The API will accept the request after som basic validation of the request.\r\nThe system will also attempt to verify that it will be possible to fulfill the order.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailNotificationOrderRequestExt"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Caller is unauthorized"
          },
          "403": {
            "description": "Caller is not authorized to access the requested resource"
          },
          "202": {
            "description": "The notification order was accepted",
            "headers": {
              "Location": {
                "description": "Link to access the newly created notification order.",
                "schema": {
                  "type": "string",
                  "description": "Link to access the newly created notification order.",
                  "format": ""
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationOrderRequestResponseExt"
                }
              }
            }
          },
          "400": {
            "description": "The notification order is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}/notifications/email": {
      "get": {
        "tags": [
          "EmailNotifications"
        ],
        "summary": "Endpoint for retrieving a summary of all email notifications related to an order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The order id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Caller is unauthorized"
          },
          "403": {
            "description": "Caller is not authorized to access the requested resource"
          },
          "200": {
            "description": "The notification order was accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailNotificationSummaryExt"
                }
              }
            }
          },
          "404": {
            "description": "No notification order mathching the id was found"
          }
        }
      }
    },
    "/future/orders": {
      "post": {
        "tags": [
          "FutureOrders"
        ],
        "summary": "Creates a new notification order that has one or more reminders.",
        "description": "The API will accept the request after some basic validation of the request.\r\nThe system will also attempt to verify that it will be possible to fulfill the order.",
        "requestBody": {
          "description": "The notification order with reminders request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationOrderChainRequestExt"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Caller is unauthorized"
          },
          "403": {
            "description": "Caller is not authorized to access the requested resource"
          },
          "201": {
            "description": "The notification order was created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationOrderChainResponseExt"
                }
              }
            }
          },
          "200": {
            "description": "The notification order was created previously.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationOrderChainResponseExt"
                }
              }
            }
          },
          "400": {
            "description": "The notification order is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "The notification order is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "499": {
            "description": "Request terminated - The client disconnected or cancelled the request before the server could complete processing"
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Presents the initial view of the metrics page",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Metrics"
        ],
        "summary": "Gets the metrics for the provided month and year",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "month": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "year": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "month": {
                  "style": "form"
                },
                "year": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Endpoint for retrieving an order by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The order id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Caller is unauthorized"
          },
          "403": {
            "description": "Caller is not authorized to access the requested resource"
          },
          "200": {
            "description": "The notification order matching the provided id was retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationOrderExt"
                }
              }
            }
          },
          "404": {
            "description": "No order with the provided id was found"
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Endpoint for retrieving an order by senders reference",
        "parameters": [
          {
            "name": "sendersReference",
            "in": "query",
            "description": "The senders reference",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Caller is unauthorized"
          },
          "403": {
            "description": "Caller is not authorized to access the requested resource"
          },
          "200": {
            "description": "The list of notification orders matching the provided senders ref was retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationOrderListExt"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Add a notification order.",
        "description": "The API will accept the request after som basic validation of the request.\r\nThe system will also attempt to verify that it will be possible to fulfill the order.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationOrderRequestExt"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Caller is unauthorized"
          },
          "403": {
            "description": "Caller is not authorized to access the requested resource"
          },
          "202": {
            "description": "The notification order was accepted",
            "headers": {
              "Location": {
                "description": "Link to access the newly created notification order.",
                "schema": {
                  "type": "string",
                  "description": "Link to access the newly created notification order.",
                  "format": ""
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationOrderRequestResponseExt"
                }
              }
            }
          },
          "400": {
            "description": "The notification order is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}/status": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Endpoint for retrieving an order with processing and notificatio status by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The order id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Caller is unauthorized"
          },
          "403": {
            "description": "Caller is not authorized to access the requested resource"
          },
          "200": {
            "description": "The notification order matching the provided id was retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationOrderWithStatusExt"
                }
              }
            }
          },
          "404": {
            "description": "No order with the provided id was found"
          }
        }
      }
    },
    "/orders/{id}/cancel": {
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "Cancel a notification order.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the order to cancel.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Caller is unauthorized"
          },
          "403": {
            "description": "Caller is not authorized to access the requested resource"
          },
          "200": {
            "description": "The notification order was cancelled. No notifications will be sent.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationOrderWithStatusExt"
                }
              }
            }
          },
          "409": {
            "description": "The order cannot be cancelled due to current processing status"
          },
          "404": {
            "description": "No order with the provided id was found"
          }
        }
      }
    },
    "/tests/sendcondition": {
      "get": {
        "tags": [
          "SendCondition"
        ],
        "summary": "Condition endpoint that returns a send condition response.",
        "parameters": [
          {
            "name": "conditionMet",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/future/shipment/{id}": {
      "get": {
        "tags": [
          "Shipment"
        ],
        "summary": "Retrieve the delivery manifest for a specific notification order.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier (GUID) of the notification order.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Caller is unauthorized"
          },
          "403": {
            "description": "Caller is not authorized to access the requested resource"
          },
          "404": {
            "description": "No shipment with the provided identifier was found"
          },
          "200": {
            "description": "The shipment matching the provided identifier was retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDeliveryManifestExt"
                }
              }
            }
          },
          "499": {
            "description": "Request terminated - The client disconnected or cancelled the request"
          }
        }
      }
    },
    "/orders/sms": {
      "post": {
        "tags": [
          "SmsNotificationOrders"
        ],
        "summary": "Add an SMS notification order.",
        "description": "The API will accept the request after some basic validation of the request.\r\nThe system will also attempt to verify that it will be possible to fulfill the order.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SmsNotificationOrderRequestExt"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Caller is unauthorized"
          },
          "403": {
            "description": "Caller is not authorized to access the requested resource"
          },
          "202": {
            "description": "The notification order was accepted",
            "headers": {
              "Location": {
                "description": "Link to access the newly created notification order.",
                "schema": {
                  "type": "string",
                  "description": "Link to access the newly created notification order.",
                  "format": ""
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationOrderRequestResponseExt"
                }
              }
            }
          },
          "400": {
            "description": "The notification order is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}/notifications/sms": {
      "get": {
        "tags": [
          "SmsNotifications"
        ],
        "summary": "Endpoint for retrieving a summary of all sms notifications related to an order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The order id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Caller is unauthorized"
          },
          "403": {
            "description": "Caller is not authorized to access the requested resource"
          },
          "200": {
            "description": "The notification order was accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmsNotificationSummaryExt"
                }
              }
            }
          },
          "404": {
            "description": "No notification order mathching the id was found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DialogportenIdentifiersExt": {
        "type": "object",
        "properties": {
          "dialogId": {
            "type": "string",
            "description": "Gets or sets the identifier for a specific dialog within Dialogporten.",
            "nullable": true
          },
          "transmissionId": {
            "type": "string",
            "description": "Gets or sets the identifier for a specific transmission within Dialogporten.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents unique identifiers for dialogs and transmissions within Dialogporten."
      },
      "EmailNotificationOrderRequestExt": {
        "required": [
          "body",
          "recipients",
          "subject"
        ],
        "type": "object",
        "properties": {
          "sendersReference": {
            "type": "string",
            "description": "Gets or sets the sender's reference identifier.",
            "nullable": true
          },
          "requestedSendTime": {
            "type": "string",
            "description": "Gets or sets the earliest date and time when the notification should be delivered.",
            "format": "date-time"
          },
          "conditionEndpoint": {
            "type": "string",
            "description": "Gets or sets a URI endpoint that can determine whether the notification should be sent.",
            "format": "uri",
            "nullable": true
          },
          "recipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipientExt"
            },
            "description": "Gets or sets the list of recipients."
          },
          "ignoreReservation": {
            "type": "boolean",
            "description": "Gets or sets whether notifications generated by this order should ignore KRR reservations.",
            "nullable": true
          },
          "resourceId": {
            "type": "string",
            "description": "Gets or sets the ID of the resource that the notification is related to.",
            "nullable": true
          },
          "subject": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the subject of the email"
          },
          "body": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the body of the email"
          },
          "contentType": {
            "enum": [
              "Plain",
              "Html"
            ],
            "type": "string",
            "description": "Gets or sets the content type of the email",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Class representing an email notification order request"
      },
      "EmailNotificationStatusExt": {
        "type": "object",
        "properties": {
          "links": {
            "$ref": "#/components/schemas/NotificationResourceLinksExt"
          },
          "generated": {
            "type": "integer",
            "description": "Gets or sets the number of generated notifications",
            "format": "int32"
          },
          "succeeded": {
            "type": "integer",
            "description": "Gets or sets the number of succeeeded notifications",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "A class representing a status overview for email notifications"
      },
      "EmailNotificationSummaryExt": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "The order id",
            "format": "uuid"
          },
          "sendersReference": {
            "type": "string",
            "description": "The senders reference",
            "nullable": true
          },
          "generated": {
            "type": "integer",
            "description": "The number of generated email notifications",
            "format": "int32"
          },
          "succeeded": {
            "type": "integer",
            "description": "The number of email notifications that were sent successfully",
            "format": "int32"
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailNotificationWithResultExt"
            },
            "description": "A list of notifications with send result",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A class representing an email notification summary"
      },
      "EmailNotificationWithResultExt": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The notification id",
            "format": "uuid"
          },
          "succeeded": {
            "type": "boolean",
            "description": "Boolean indicating if the sending of the notification was successful"
          },
          "recipient": {
            "$ref": "#/components/schemas/RecipientExt"
          },
          "sendStatus": {
            "$ref": "#/components/schemas/StatusExt"
          }
        },
        "additionalProperties": false,
        "description": "EmailNotificationWithResultExt class"
      },
      "EmailSendingOptionsExt": {
        "required": [
          "body",
          "subject"
        ],
        "type": "object",
        "properties": {
          "senderEmailAddress": {
            "type": "string",
            "description": "Gets or sets the sender's email address.",
            "nullable": true
          },
          "subject": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the subject line of the email."
          },
          "body": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the main body content of the email."
          },
          "contentType": {
            "enum": [
              "Plain",
              "Html"
            ],
            "type": "string",
            "description": "Gets or sets the content type (plain text or HTML) of the email.",
            "default": "Plain"
          },
          "sendingTimePolicy": {
            "enum": [
              "Anytime",
              "Daytime"
            ],
            "type": "string",
            "description": "Gets or sets the policy defining when the email should be sent.",
            "default": "Anytime"
          }
        },
        "additionalProperties": false,
        "description": "Defines email configuration settings used in notification order requests."
      },
      "EmailTemplateExt": {
        "type": "object",
        "properties": {
          "fromAddress": {
            "type": "string",
            "description": "Gets the from adress of emails created by the template",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "description": "Gets the subject of emails created by the template",
            "nullable": true
          },
          "body": {
            "type": "string",
            "description": "Gets the body of emails created by the template",
            "nullable": true
          },
          "contentType": {
            "enum": [
              "Plain",
              "Html"
            ],
            "type": "string",
            "description": "Gets the content type of emails created by the template"
          }
        },
        "additionalProperties": false,
        "description": "Template for an email notification"
      },
      "IDeliveryManifestExt": {
        "type": "object",
        "properties": {
          "status": {
            "enum": [
              "Order_Registered",
              "Order_Processing",
              "Order_Completed",
              "Order_SendConditionNotMet",
              "Order_Cancelled",
              "SMS_New",
              "SMS_Sending",
              "SMS_Accepted",
              "SMS_Delivered",
              "SMS_Failed",
              "SMS_Failed_InvalidRecipient",
              "SMS_Failed_RecipientReserved",
              "SMS_Failed_BarredReceiver",
              "SMS_Failed_Deleted",
              "SMS_Failed_Expired",
              "SMS_Failed_Undelivered",
              "SMS_Failed_RecipientNotIdentified",
              "SMS_Failed_Rejected",
              "Email_New",
              "Email_Sending",
              "Email_Succeeded",
              "Email_Delivered",
              "Email_Failed",
              "Email_Failed_RecipientReserved",
              "Email_Failed_RecipientNotIdentified",
              "Email_Failed_InvalidFormat",
              "Email_Failed_SuppressedRecipient",
              "Email_Failed_TransientError",
              "Email_Failed_Bounced",
              "Email_Failed_FilteredSpam",
              "Email_Failed_Quarantined"
            ],
            "type": "string",
            "description": "Gets the current lifecycle status of the entity.",
            "readOnly": true
          },
          "lastUpdate": {
            "type": "string",
            "description": "Gets the date and time when the status was last updated.",
            "format": "date-time",
            "readOnly": true
          },
          "destination": {
            "type": "string",
            "description": "Gets the destination address where the deliverable entity is intended to be sent.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Represents standardized destination and status information for trackable entities within the notification system."
      },
      "NotificationDeliveryManifestExt": {
        "required": [
          "lastUpdate",
          "recipients",
          "shipmentId",
          "status",
          "type"
        ],
        "type": "object",
        "properties": {
          "sequenceNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shipmentId": {
            "type": "string",
            "format": "uuid"
          },
          "sendersReference": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "enum": [
              "Order_Registered",
              "Order_Processing",
              "Order_Completed",
              "Order_SendConditionNotMet",
              "Order_Cancelled",
              "SMS_New",
              "SMS_Sending",
              "SMS_Accepted",
              "SMS_Delivered",
              "SMS_Failed",
              "SMS_Failed_InvalidRecipient",
              "SMS_Failed_RecipientReserved",
              "SMS_Failed_BarredReceiver",
              "SMS_Failed_Deleted",
              "SMS_Failed_Expired",
              "SMS_Failed_Undelivered",
              "SMS_Failed_RecipientNotIdentified",
              "SMS_Failed_Rejected",
              "Email_New",
              "Email_Sending",
              "Email_Succeeded",
              "Email_Delivered",
              "Email_Failed",
              "Email_Failed_RecipientReserved",
              "Email_Failed_RecipientNotIdentified",
              "Email_Failed_InvalidFormat",
              "Email_Failed_SuppressedRecipient",
              "Email_Failed_TransientError",
              "Email_Failed_Bounced",
              "Email_Failed_FilteredSpam",
              "Email_Failed_Quarantined"
            ],
            "type": "string",
            "description": "Represents the lifecycle status of orders and individual notifications."
          },
          "lastUpdate": {
            "type": "string",
            "format": "date-time"
          },
          "recipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IDeliveryManifestExt"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the root tracking entity for a notification shipment that\r\ncan be sent to multiple recipients through various communication channels."
      },
      "NotificationOrderChainReceiptExt": {
        "required": [
          "shipmentId"
        ],
        "type": "object",
        "properties": {
          "shipmentId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for this shipment.",
            "format": "uuid"
          },
          "sendersReference": {
            "type": "string",
            "description": "Gets or sets the sender's reference identifier.",
            "nullable": true
          },
          "reminders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationOrderChainShipmentExt"
            },
            "description": "Gets or sets the reminders associated with this notification order.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the complete receipt for a notification order chain creation operation."
      },
      "NotificationOrderChainRequestExt": {
        "required": [
          "idempotencyId",
          "recipient"
        ],
        "type": "object",
        "properties": {
          "sendersReference": {
            "type": "string",
            "description": "Gets or sets the sender's reference identifier.",
            "nullable": true
          },
          "requestedSendTime": {
            "type": "string",
            "description": "Gets or sets the earliest date and time when the notification should be delivered.",
            "format": "date-time"
          },
          "conditionEndpoint": {
            "type": "string",
            "description": "Gets or sets a URI endpoint that can determine whether the notification should be sent.",
            "format": "uri",
            "nullable": true
          },
          "dialogportenAssociation": {
            "$ref": "#/components/schemas/DialogportenIdentifiersExt"
          },
          "idempotencyId": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the idempotency identifier defined by the sender."
          },
          "recipient": {
            "$ref": "#/components/schemas/NotificationRecipientExt"
          },
          "reminders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationReminderExt"
            },
            "description": "Gets or sets a list of reminders that may be triggered under certain conditions after the initial notification has been processed.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a contract between API clients and the server, defining the structure of notification order\r\nrequests with reminders that can be submitted to the system.\r\nInherits the scheduling options from Altinn.Notifications.Models.NotificationOrderBaseExt."
      },
      "NotificationOrderChainResponseExt": {
        "required": [
          "notification",
          "notificationOrderId"
        ],
        "type": "object",
        "properties": {
          "notificationOrderId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for the notification order chain.",
            "format": "uuid"
          },
          "notification": {
            "$ref": "#/components/schemas/NotificationOrderChainReceiptExt"
          }
        },
        "additionalProperties": false,
        "description": "Represents the response returned after successfully creating a notification order chain."
      },
      "NotificationOrderChainShipmentExt": {
        "required": [
          "shipmentId"
        ],
        "type": "object",
        "properties": {
          "shipmentId": {
            "type": "string",
            "description": "Gets or sets the unique identifier for this shipment.",
            "format": "uuid"
          },
          "sendersReference": {
            "type": "string",
            "description": "Gets or sets the sender's reference identifier.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the base information for a shipment in a notification order chain."
      },
      "NotificationOrderExt": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the id of the notification order",
            "nullable": true
          },
          "sendersReference": {
            "type": "string",
            "description": "Gets or sets the senders reference of the notification",
            "nullable": true
          },
          "requestedSendTime": {
            "type": "string",
            "description": "Gets or sets the requested send time of the notification",
            "format": "date-time"
          },
          "creator": {
            "type": "string",
            "description": "Gets or sets the short name of the creator of the notification order",
            "nullable": true
          },
          "created": {
            "type": "string",
            "description": "Gets or sets the date and time of when the notification order was created",
            "format": "date-time"
          },
          "notificationChannel": {
            "enum": [
              "Email",
              "Sms",
              "EmailPreferred",
              "SmsPreferred"
            ],
            "type": "string",
            "description": "Gets or sets the preferred notification channel of the notification order"
          },
          "ignoreReservation": {
            "type": "boolean",
            "description": "Gets or sets whether notifications generated by this order should ignore KRR reservations",
            "nullable": true
          },
          "resourceId": {
            "type": "string",
            "description": "Gets or sets the id of the resource that the notification is related to",
            "nullable": true
          },
          "conditionEndpoint": {
            "type": "string",
            "description": "Gets or sets the condition endpoint used to check the send condition",
            "format": "uri",
            "nullable": true
          },
          "recipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipientExt"
            },
            "description": "Gets or sets the list of recipients",
            "nullable": true
          },
          "emailTemplate": {
            "$ref": "#/components/schemas/EmailTemplateExt"
          },
          "smsTemplate": {
            "$ref": "#/components/schemas/SmsTemplateExt"
          },
          "links": {
            "$ref": "#/components/schemas/OrderResourceLinksExt"
          }
        },
        "additionalProperties": false,
        "description": "A class representing a registered notification order."
      },
      "NotificationOrderListExt": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Gets or sets the number of orders in the list",
            "format": "int32"
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationOrderExt"
            },
            "description": "Gets or sets the list of notification orders",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A class representing a list of notification order."
      },
      "NotificationOrderRequestExt": {
        "required": [
          "recipients"
        ],
        "type": "object",
        "properties": {
          "sendersReference": {
            "type": "string",
            "description": "Gets or sets the sender's reference identifier.",
            "nullable": true
          },
          "requestedSendTime": {
            "type": "string",
            "description": "Gets or sets the earliest date and time when the notification should be delivered.",
            "format": "date-time"
          },
          "conditionEndpoint": {
            "type": "string",
            "description": "Gets or sets a URI endpoint that can determine whether the notification should be sent.",
            "format": "uri",
            "nullable": true
          },
          "recipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipientExt"
            },
            "description": "Gets or sets the list of recipients."
          },
          "ignoreReservation": {
            "type": "boolean",
            "description": "Gets or sets whether notifications generated by this order should ignore KRR reservations.",
            "nullable": true
          },
          "resourceId": {
            "type": "string",
            "description": "Gets or sets the ID of the resource that the notification is related to.",
            "nullable": true
          },
          "notificationChannel": {
            "enum": [
              "Email",
              "Sms",
              "EmailPreferred",
              "SmsPreferred"
            ],
            "type": "string",
            "description": "Gets or sets the notification channel",
            "nullable": true
          },
          "emailTemplate": {
            "$ref": "#/components/schemas/EmailTemplateExt"
          },
          "smsTemplate": {
            "$ref": "#/components/schemas/SmsTemplateExt"
          }
        },
        "additionalProperties": false,
        "description": "Class representing a notification order request"
      },
      "NotificationOrderRequestResponseExt": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "The order id",
            "format": "uuid",
            "nullable": true
          },
          "recipientLookup": {
            "$ref": "#/components/schemas/RecipientLookupResultExt"
          }
        },
        "additionalProperties": false,
        "description": "A class representing a container for an order id."
      },
      "NotificationOrderWithStatusExt": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the id of the notification order",
            "nullable": true
          },
          "sendersReference": {
            "type": "string",
            "description": "Gets or sets the senders reference of the notification",
            "nullable": true
          },
          "requestedSendTime": {
            "type": "string",
            "description": "Gets or sets the requested send time of the notification",
            "format": "date-time"
          },
          "creator": {
            "type": "string",
            "description": "Gets or sets the short name of the creator of the notification order",
            "nullable": true
          },
          "created": {
            "type": "string",
            "description": "Gets or sets the date and time of when the notification order was created",
            "format": "date-time"
          },
          "notificationChannel": {
            "enum": [
              "Email",
              "Sms",
              "EmailPreferred",
              "SmsPreferred"
            ],
            "type": "string",
            "description": "Gets or sets the preferred notification channel of the notification order"
          },
          "ignoreReservation": {
            "type": "boolean",
            "description": "Gets or sets whether notifications generated by this order should ignore KRR reservations",
            "nullable": true
          },
          "resourceId": {
            "type": "string",
            "description": "Gets or sets the id of the resource that the notification is related to",
            "nullable": true
          },
          "conditionEndpoint": {
            "type": "string",
            "description": "Gets or sets the condition endpoint used to check the send condition",
            "format": "uri",
            "nullable": true
          },
          "processingStatus": {
            "$ref": "#/components/schemas/StatusExt"
          },
          "notificationsStatusSummary": {
            "$ref": "#/components/schemas/NotificationsStatusSummaryExt"
          }
        },
        "additionalProperties": false,
        "description": "A class representing a registered notification order with status information."
      },
      "NotificationRecipientExt": {
        "type": "object",
        "properties": {
          "recipientEmail": {
            "$ref": "#/components/schemas/RecipientEmailExt"
          },
          "recipientSms": {
            "$ref": "#/components/schemas/RecipientSmsExt"
          },
          "recipientPerson": {
            "$ref": "#/components/schemas/RecipientPersonExt"
          },
          "recipientOrganization": {
            "$ref": "#/components/schemas/RecipientOrganizationExt"
          }
        },
        "additionalProperties": false,
        "description": "Defines a container for specifying the recipient of a notification order."
      },
      "NotificationReminderExt": {
        "required": [
          "delayDays",
          "recipient"
        ],
        "type": "object",
        "properties": {
          "sendersReference": {
            "type": "string",
            "description": "Gets or sets the sender's reference for this reminder.",
            "nullable": true
          },
          "conditionEndpoint": {
            "type": "string",
            "description": "Gets or sets the condition endpoint used to determine if the reminder should be sent.",
            "format": "uri",
            "nullable": true
          },
          "delayDays": {
            "type": "integer",
            "description": "Gets or sets the number of days to delay this reminder.",
            "format": "int32",
            "default": 1
          },
          "recipient": {
            "$ref": "#/components/schemas/NotificationRecipientExt"
          }
        },
        "additionalProperties": false,
        "description": "Represents a reminder notification that can be scheduled to follow an initial notification order."
      },
      "NotificationResourceLinksExt": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "description": "Gets or sets the self link",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A class representing a set of resource links of a notification"
      },
      "NotificationsStatusSummaryExt": {
        "type": "object",
        "properties": {
          "email": {
            "$ref": "#/components/schemas/EmailNotificationStatusExt"
          },
          "sms": {
            "$ref": "#/components/schemas/SmsNotificationStatusExt"
          }
        },
        "additionalProperties": false,
        "description": "A class representing a summary of status overviews of all notification channels"
      },
      "OrderResourceLinksExt": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "description": "Gets or sets the self link",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Gets or sets the status link",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A class representing a set of resource links of a notification order."
      },
      "RecipientEmailExt": {
        "required": [
          "emailAddress",
          "emailSettings"
        ],
        "type": "object",
        "properties": {
          "emailAddress": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the email address of the intended recipient."
          },
          "emailSettings": {
            "$ref": "#/components/schemas/EmailSendingOptionsExt"
          }
        },
        "additionalProperties": false,
        "description": "Defines a request for sending an email notification to a specific email address."
      },
      "RecipientExt": {
        "type": "object",
        "properties": {
          "emailAddress": {
            "type": "string",
            "description": "Gets or sets the email address of the recipient.",
            "nullable": true
          },
          "mobileNumber": {
            "type": "string",
            "description": "Gets or sets the mobile number of the recipient.",
            "nullable": true
          },
          "organizationNumber": {
            "type": "string",
            "description": "Gets or sets the organization number of the recipient.",
            "nullable": true
          },
          "nationalIdentityNumber": {
            "type": "string",
            "description": "Gets or sets the national identity number of the recipient.",
            "nullable": true
          },
          "isReserved": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the recipient is reserved from digital communication.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Class representing a notification recipient."
      },
      "RecipientLookupResultExt": {
        "type": "object",
        "properties": {
          "status": {
            "enum": [
              "Success",
              "PartialSuccess",
              "Failed"
            ],
            "type": "string",
            "description": "The lookup status"
          },
          "isReserved": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of id numbers for the recipients that are reserved",
            "nullable": true
          },
          "missingContact": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of id numbers for the recipients where no contact points were identified",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Class describing a summary of recipient lookup for a notification order"
      },
      "RecipientOrganizationExt": {
        "required": [
          "channelSchema",
          "orgNumber"
        ],
        "type": "object",
        "properties": {
          "emailSettings": {
            "$ref": "#/components/schemas/EmailSendingOptionsExt"
          },
          "smsSettings": {
            "$ref": "#/components/schemas/SmsSendingOptionsExt"
          },
          "orgNumber": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the organization number that identifies the recipient."
          },
          "resourceId": {
            "type": "string",
            "description": "Gets or sets an optional resource identifier for authorization and auditing purposes.",
            "nullable": true
          },
          "channelSchema": {
            "enum": [
              "Email",
              "Sms",
              "EmailPreferred",
              "SmsPreferred"
            ],
            "type": "string",
            "description": "Gets or sets the required channel scheme for delivering the notification.",
            "default": "SmsPreferred"
          }
        },
        "additionalProperties": false,
        "description": "Defines a model for sending notifications to an organization's contact person."
      },
      "RecipientPersonExt": {
        "required": [
          "channelSchema",
          "nationalIdentityNumber"
        ],
        "type": "object",
        "properties": {
          "emailSettings": {
            "$ref": "#/components/schemas/EmailSendingOptionsExt"
          },
          "smsSettings": {
            "$ref": "#/components/schemas/SmsSendingOptionsExt"
          },
          "nationalIdentityNumber": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the national identity number of the recipient."
          },
          "resourceId": {
            "type": "string",
            "description": "Gets or sets an optional resource identifier for authorization and auditing purposes.",
            "nullable": true
          },
          "channelSchema": {
            "enum": [
              "Email",
              "Sms",
              "EmailPreferred",
              "SmsPreferred"
            ],
            "type": "string",
            "description": "Gets or sets the required channel scheme for delivering the notification.",
            "default": "EmailPreferred"
          },
          "ignoreReservation": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to bypass the recipient's reservation against electronic communication."
          }
        },
        "additionalProperties": false,
        "description": "Defines a model for sending notifications to a person identified by their national identity number."
      },
      "RecipientSmsExt": {
        "required": [
          "phoneNumber",
          "smsSettings"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the recipient's phone number in international format."
          },
          "smsSettings": {
            "$ref": "#/components/schemas/SmsSendingOptionsExt"
          }
        },
        "additionalProperties": false,
        "description": "Represents the model for sending an SMS to a specific mobile number."
      },
      "SmsNotificationOrderRequestExt": {
        "required": [
          "body",
          "recipients"
        ],
        "type": "object",
        "properties": {
          "sendersReference": {
            "type": "string",
            "description": "Gets or sets the sender's reference identifier.",
            "nullable": true
          },
          "requestedSendTime": {
            "type": "string",
            "description": "Gets or sets the earliest date and time when the notification should be delivered.",
            "format": "date-time"
          },
          "conditionEndpoint": {
            "type": "string",
            "description": "Gets or sets a URI endpoint that can determine whether the notification should be sent.",
            "format": "uri",
            "nullable": true
          },
          "recipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipientExt"
            },
            "description": "Gets or sets the list of recipients."
          },
          "ignoreReservation": {
            "type": "boolean",
            "description": "Gets or sets whether notifications generated by this order should ignore KRR reservations.",
            "nullable": true
          },
          "resourceId": {
            "type": "string",
            "description": "Gets or sets the ID of the resource that the notification is related to.",
            "nullable": true
          },
          "senderNumber": {
            "type": "string",
            "description": "Gets or sets the sender number of the SMS.",
            "nullable": true
          },
          "body": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the body of the SMS."
          }
        },
        "additionalProperties": false,
        "description": "Class representing an SMS notification order request."
      },
      "SmsNotificationStatusExt": {
        "type": "object",
        "properties": {
          "links": {
            "$ref": "#/components/schemas/NotificationResourceLinksExt"
          },
          "generated": {
            "type": "integer",
            "description": "Gets or sets the number of generated notifications",
            "format": "int32"
          },
          "succeeded": {
            "type": "integer",
            "description": "Gets or sets the number of succeeeded notifications",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "A class representing a status overview for sms notifications"
      },
      "SmsNotificationSummaryExt": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "The order id",
            "format": "uuid"
          },
          "sendersReference": {
            "type": "string",
            "description": "The senders reference",
            "nullable": true
          },
          "generated": {
            "type": "integer",
            "description": "The number of generated sms notifications",
            "format": "int32"
          },
          "succeeded": {
            "type": "integer",
            "description": "The number of sms notifications that were sent successfully",
            "format": "int32"
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SmsNotificationWithResultExt"
            },
            "description": "A list of notifications with send result",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A class representing an sms notification summary"
      },
      "SmsNotificationWithResultExt": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The notification id",
            "format": "uuid"
          },
          "succeeded": {
            "type": "boolean",
            "description": "Boolean indicating if the sending of the notification was successful"
          },
          "recipient": {
            "$ref": "#/components/schemas/RecipientExt"
          },
          "sendStatus": {
            "$ref": "#/components/schemas/StatusExt"
          }
        },
        "additionalProperties": false,
        "description": "A class representing an sms notification with result"
      },
      "SmsSendingOptionsExt": {
        "required": [
          "body"
        ],
        "type": "object",
        "properties": {
          "sender": {
            "type": "string",
            "description": "Gets or sets the sender identifier displayed in the recipient's SMS message.",
            "nullable": true
          },
          "body": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the text content of the SMS message."
          },
          "sendingTimePolicy": {
            "enum": [
              "Anytime",
              "Daytime"
            ],
            "type": "string",
            "description": "Gets or sets the policy controlling when the SMS should be delivered.",
            "default": "Daytime"
          }
        },
        "additionalProperties": false,
        "description": "Defines SMS configuration settings used in notification order requests."
      },
      "SmsTemplateExt": {
        "type": "object",
        "properties": {
          "senderNumber": {
            "type": "string",
            "description": "Gets the number from which the SMS is created by the template",
            "nullable": true
          },
          "body": {
            "type": "string",
            "description": "Gets the body of SMSs created by the template",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Template for an SMS notification"
      },
      "StatusExt": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Gets or sets the status",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or sets the description",
            "nullable": true
          },
          "lastUpdate": {
            "type": "string",
            "description": "Gets or sets the date time of when the status was last updated",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "A class representing a status summary"
      },
      "ValidationProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": { }
      }
    }
  },
  "tags": [
    {
      "name": "SendCondition",
      "description": "Private API"
    }
  ]
}
